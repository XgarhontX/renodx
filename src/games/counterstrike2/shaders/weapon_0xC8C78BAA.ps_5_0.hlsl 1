// ---- Created with 3Dmigoto v1.3.16 on Fri Oct 03 03:45:58 2025
Texture2D<float4> t49 : register(t49);

Texture2D<float4> t48 : register(t48);

Texture2D<float4> t47 : register(t47);

Texture2D<float4> t46 : register(t46);

Texture2D<float4> t45 : register(t45);

Texture2D<float4> t44 : register(t44);

Texture2D<float4> t43 : register(t43);

Texture2D<float4> t42 : register(t42);

Texture2D<float4> t41 : register(t41);

Texture2D<float4> t40 : register(t40);

Texture2D<float4> t39 : register(t39);

Texture2D<float4> t38 : register(t38);

Texture2D<float4> t37 : register(t37);

Texture2D<float4> t36 : register(t36);

Texture2D<float4> t35 : register(t35);

Texture2D<float4> t34 : register(t34);

Texture2D<float4> t33 : register(t33);

Texture2D<float4> t32 : register(t32);

Texture2D<float4> t31 : register(t31);

Texture2D<float4> t30 : register(t30);

Texture2D<float4> t29 : register(t29);

Texture2D<float4> t28 : register(t28);

Texture2D<float4> t27 : register(t27);

Texture2D<float4> t26 : register(t26);

Texture2D<float4> t25 : register(t25);

Texture2D<float4> t24 : register(t24);

Texture2D<float4> t23 : register(t23);

Texture2D<float4> t22 : register(t22);

Texture2D<float4> t21 : register(t21);

Texture2D<float4> t20 : register(t20);

Texture2D<float4> t19 : register(t19);

struct t18_t {
  float val[104];
};
StructuredBuffer<t18_t> t18 : register(t18);

Texture3D<float4> t17 : register(t17);

Texture3D<float4> t16 : register(t16);

Texture2D<float4> t15 : register(t15);

Texture2D<float4> t14 : register(t14);

struct t13_t {
  float val[1];
};
StructuredBuffer<t13_t> t13 : register(t13);

TextureCube<float4> t12 : register(t12);

TextureCubeArray<float4> t10 : register(t10);

Texture2D<float4> t9 : register(t9);

Texture2D<float4> t8 : register(t8);

Texture2D<float4> t7 : register(t7);

Texture2D<float4> t6 : register(t6);

Texture2DArray<float4> t5 : register(t5);

Texture3D<float4> t4 : register(t4);

Texture2D<float4> t0 : register(t0);

SamplerState s11_s : register(s11);

SamplerState s10_s : register(s10);

SamplerState s9_s : register(s9);

SamplerComparisonState s8_s : register(s8);

SamplerState s7_s : register(s7);

SamplerState s6_s : register(s6);

SamplerState s5_s : register(s5);

SamplerState s4_s : register(s4);

SamplerState s3_s : register(s3);

SamplerState s2_s : register(s2);

SamplerState s1_s : register(s1);

SamplerState s0_s : register(s0);

cbuffer cb2 : register(b2)
{
  float4 cb2[3600];
}

cbuffer cb4 : register(b4)
{
  float4 cb4[41];
}

cbuffer cb3 : register(b3)
{
  float4 cb3[1985];
}

cbuffer cb1 : register(b1)
{
  float4 cb1[34];
}

cbuffer cb0 : register(b0)
{
  float4 cb0[54];
}




// 3Dmigoto declarations
#define cmp -


void main(
  float4 v0 : TEXCOORD8,
  float4 v1 : TEXCOORD0,
  float4 v2 : TEXCOORD1,
  float4 v3 : TEXCOORD2,
  linear centroid float4 v4 : TEXCOORD4,
  linear centroid float4 v5 : TEXCOORD5,
  float4 v6 : TEXCOORD6,
  uint v7 : TEXCOORD12,
  float4 v8 : SV_Position0,
  uint v9 : SV_IsFrontFace0,
  out float4 o0 : SV_Target0)
{
  const float4 icb[] = { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} };
  float4 r0,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21,r22,r23,r24,r25,r26,r27,r28,r29,r30,r31,r32,r33,r34,r35,r36,r37,r38,r39,r40,r41,r42;
  uint4 bitmask, uiDest;
  float4 fDest;

  r0.x = cb4[9].w * cb0[8].x;
  r0.y = cmp(0 < r0.x);
  if (r0.y != 0) {
    r1.xyz = cb4[35].yzx + v1.yzx;
    r0.zw = ddx_coarse(v3.xy);
    r2.xy = ddy_coarse(v3.yx);
    r3.xyz = ddx_coarse(r1.yzx);
    r4.xyz = ddy_coarse(r1.xyz);
    r0.w = r2.y * r0.w;
    r0.z = r0.z * r2.x + -r0.w;
    r2.xyz = r4.xyz * r3.xyz;
    r2.xyz = r3.zxy * r4.yzx + -r2.xyz;
    r0.w = dot(r2.xyz, r2.xyz);
    r0.w = sqrt(r0.w);
    r0.w = max(9.99999975e-005, r0.w);
    r0.z = abs(r0.z) / r0.w;
    r0.z = cmp(r0.z < 0.00200000009);
    r2.xyzw = float4(2.5,2.5,7.5,7.5) * v3.xyxy;
    r0.zw = r0.zz ? r2.zw : r2.xy;
    r0.zw = r1.zx * float2(9.99999975e-005,9.99999975e-005) + r0.zw;
    r1.xyzw = t22.Sample(s0_s, r0.zw).xwyz;
    r2.xz = r1.xz * float2(2,2) + float2(-1,-1);
    r0.z = v0.x * 0.00999999978 + r1.w;
    r0.w = cb4[9].x * cb4[9].x;
    r0.w = cb0[8].z * r0.w;
    r0.w = r0.w * 0.100000001 + r0.z;
    r0.w = frac(r0.w);
    r0.w = r0.x * 0.25 + -r0.w;
    r0.w = 5 * r0.w;
    r1.z = cb4[9].w + 0.00100000005;
    r0.w = saturate(r0.w / r1.z);
    r1.z = 0.75 + v2.z;
    r1.z = saturate(4 * r1.z);
    r1.x = r1.z * r0.w;
    r2.y = -r2.z;
    r1.zw = r2.xy * r1.xx;
    r1.zw = r1.zw * r1.yy;
    r1.zw = r1.zw * float2(-0.0199999996,-0.0199999996) + v3.xy;
  } else {
    r1.zw = v3.xy;
    r2.xy = float2(0,0);
    r1.xy = float2(0,0);
    r0.z = 0;
  }
  r0.w = dot(v2.xyz, v2.xyz);
  r0.w = cmp(r0.w >= 1.00999999);
  r3.xyz = r0.www ? v5.xyz : v2.xyz;
  r0.w = cmp(asint(cb0[1].w) != 0);
  r2.w = cmp(asint(cb0[1].z) == 0);
  r0.w = r0.w ? r2.w : 0;
  if (r0.w != 0) {
    r2.w = v9.x ? 1 : -1;
    r3.xyz = r3.xyz * r2.www;
  }
  r2.w = dot(r3.xyz, r3.xyz);
  r2.w = rsqrt(r2.w);
  r3.xyz = r3.xyz * r2.www;
  r4.yzw = cb4[35].xyz + v1.xyz;
  r5.xyz = t14.Sample(s6_s, r1.zw).xyz;
  r5.xyz = v4.xyz * r5.xyz;
  r2.w = t21.Sample(s5_s, r1.zw).x;
  r6.xyz = t15.Sample(s5_s, r1.zw).zxy;
  r3.w = cb0[7].z + -cb0[7].y;
  r3.w = r6.z * r3.w + cb0[7].y;
  r6.zw = t20.Sample(s5_s, r1.zw).xy;
  r5.w = r6.z + r6.w;
  r7.x = -1.00392163 + r5.w;
  r7.y = r6.z + -r6.w;
  r5.w = 1 + -abs(r7.x);
  r7.z = r5.w + -abs(r7.y);
  r5.w = dot(r7.xyz, r7.xyz);
  r5.w = rsqrt(r5.w);
  r7.xyz = r7.xyz * r5.www;
  r5.w = cmp((int)v9.x == 0);
  r0.w = r0.w ? r5.w : 0;
  r5.w = r0.w ? -1 : 1;
  r8.xyz = v2.xyz * r5.www;
  r5.w = cmp(0 < v6.w);
  r5.w = r5.w ? 1 : -1;
  r9.xyz = v6.yzx * r8.zxy;
  r9.xyz = r8.yzx * v6.zxy + -r9.xyz;
  r9.xyz = r9.xyz * r5.www;
  r9.xyz = cb4[3].www ? -r9.xyz : r9.xyz;
  r7.w = r0.w ? r7.y : -r7.y;
  r10.xyz = r7.www * r9.xyz;
  r10.xyz = r7.xxx * v6.xyz + r10.xyz;
  r10.xyz = r7.zzz * r8.xyz + r10.xyz;
  r5.w = dot(r10.xyz, r10.xyz);
  r5.w = rsqrt(r5.w);
  r11.xyz = r10.xyz * r5.www;
  if (r0.y != 0) {
    r0.y = -0.75 + r6.y;
    r0.y = saturate(4 * r0.y);
    r6.z = dot(r2.xy, r2.xy);
    r6.z = min(1, r6.z);
    r6.z = 1 + -r6.z;
    r2.z = sqrt(r6.z);
    r12.xyz = r9.xyz * r2.yyy;
    r12.xyz = r2.xxx * v6.xyz + r12.xyz;
    r12.xyz = r2.zzz * r3.xyz + r12.xyz;
    r6.z = dot(r12.xyz, r12.xyz);
    r6.z = rsqrt(r6.z);
    r0.z = cb0[8].z * 0.200000003 + r0.z;
    r0.z = 6.28318501 * r0.z;
    r0.z = cos(r0.z);
    r0.z = r0.z * 0.5 + 0.5;
    r6.w = saturate(r0.x);
    r0.z = r6.w * r0.z;
    r8.w = 0.5 * r6.w;
    r8.w = saturate(r1.x * r1.y + r8.w);
    r9.w = r0.y * 0.75 + 0.25;
    r8.w = r9.w * r8.w;
    r6.w = r8.w * r6.w;
    r0.y = 1 + -r0.y;
    r0.y = r1.x * r0.y;
    r1.x = 0.25 * r0.y;
    r2.xyz = r2.xyz * float3(-1,-1,1) + -r7.xwz;
    r7.xyz = r1.xxx * r2.xyz + r7.xwz;
    r1.x = r6.w * 1.5 + 1;
    r2.xyz = r10.xyz * r5.www + -r3.xyz;
    r2.xyz = r1.xxx * r2.xyz + r3.xyz;
    r1.x = dot(r2.xyz, r2.xyz);
    r1.x = rsqrt(r1.x);
    r2.xyz = r2.xyz * r1.xxx;
    r10.xyz = r12.xyz * r6.zzz + -r2.xyz;
    r2.xyz = r0.yyy * r10.xyz + r2.xyz;
    r0.y = r0.y * r1.y;
    r1.x = saturate(r0.y + r0.y);
    r10.xyz = log2(r5.xyz);
    r10.xyz = float3(1.60000002,1.60000002,1.60000002) * r10.xyz;
    r10.xyz = exp2(r10.xyz);
    r10.xyz = r10.xyz * float3(0.600000024,0.600000024,0.600000024) + -r5.xyz;
    r5.xyz = r6.www * r10.xyz + r5.xyz;
    r0.z = 0.200000003 * r0.z;
    r0.y = r0.y * 4 + r0.z;
    r0.x = saturate(r0.x * 0.400000006 + r0.y);
    r0.x = r2.w * r0.x;
    r0.y = 0.100000001 + -r6.y;
    r0.xy = r0.xx * r0.yy + r6.yy;
  } else {
    r2.xyz = float3(1,1,1);
    r0.xy = r6.yy;
    r1.x = 0;
    r7.xyz = r7.xwz;
  }
  r0.z = cmp(cb0[53].x != 0.000000);
  if (r0.z != 0) {
    r6.yzw = cb1[19].xyz + -r4.yzw;
    r0.z = dot(r6.yzw, r6.yzw);
    r0.z = rsqrt(r0.z);
    r6.yzw = r6.yzw * r0.zzz;
    r0.z = dot(r6.yzw, r11.xyz);
    r0.z = 1 + -r0.z;
    r0.z = cb0[53].x * r0.z;
    r0.z = r0.z * r6.x;
    sincos(r0.z, r10.x, r12.x);
    r6.yzw = float3(0.57735002,0.57735002,0.57735002) * r5.zxy;
    r6.yzw = r5.zxy * float3(0.57735002,0.57735002,0.57735002) + -r6.wyz;
    r6.yzw = r6.yzw * r10.xxx;
    r6.yzw = r5.xyz * r12.xxx + r6.yzw;
    r0.z = dot(float3(0.57735002,0.57735002,0.57735002), r5.xyz);
    r0.z = 0.57735002 * r0.z;
    r1.y = 1 + -r12.x;
    r6.yzw = r0.zzz * r1.yyy + r6.yzw;
    r0.z = dot(r5.xyz, float3(0.212500006,0.715399981,0.0720999986));
    r1.y = min(r5.y, r5.z);
    r1.y = min(r5.x, r1.y);
    r5.w = max(r5.y, r5.z);
    r5.w = max(r5.x, r5.w);
    r1.y = r5.w + -r1.y;
    r7.w = cmp(r5.w != 0.000000);
    r1.y = r1.y / r5.w;
    r1.y = r7.w ? r1.y : 0;
    r1.y = log2(r1.y);
    r1.y = 0.125 * r1.y;
    r1.y = exp2(r1.y);
    r6.yzw = r6.yzw + -r0.zzz;
    r5.xyz = r1.yyy * r6.yzw + r0.zzz;
  }
  r6.yz = t24.Sample(s11_s, r1.zw).xy;
  r0.z = cmp(0 < r6.y);
  r1.y = cmp(-1 < v3.z);
  r0.z = r0.z ? r1.y : 0;
  if (r0.z != 0) {
    r0.z = asint(cb0[0].y) | asint(cb0[14].x);
    if (r0.z != 0) {
      r0.z = cb4[3].y ? 0 : v4.w;
      r10.xy = cmp(cb0[15].xy == float2(0,0));
      r1.y = (int)r10.y | (int)r10.x;
      r5.w = cmp(r6.y == 0.000000);
      r1.y = (int)r1.y | (int)r5.w;
      if (r1.y == 0) {
        r1.y = cmp(asint(cb0[12].w) == 1);
        r10.xy = float2(-0.5,-0.5) + v3.wz;
        r10.xy = -cb0[14].zy + r10.xy;
        r10.xy = abs(cb0[15].xx) * r10.xy;
        r5.w = 6.28318024 * cb0[15].z;
        sincos(r5.w, r12.x, r13.x);
        r10.zw = r12.xx * r10.xy;
        r14.x = r10.y * r13.x + -r10.z;
        r14.y = r10.x * r13.x + r10.w;
        r10.xy = float2(0.5,0.5) + r14.xy;
        r14.xyzw = saturate(r10.xyxy);
        r10.xy = cmp(r10.xy != r14.xy);
        r5.w = (int)r10.y | (int)r10.x;
        r6.w = cmp(asint(cb0[13].x) == 0);
        r6.w = r1.y ? r6.w : 0;
        r7.w = cb4[39].z + -cb0[13].y;
        r6.w = r6.w ? r7.w : 0.899999976;
        r7.w = cmp(r6.w < 0.899999976);
        r10.xyzw = t25.SampleBias(s0_s, r14.zw, -1).xyzw;
        r8.w = saturate(12.75 * r10.w);
        r15.x = r8.w * r6.y;
        t25.GetDimensions(0, fDest.x, fDest.y, fDest.z);
        r12.yz = fDest.xy;
        r12.yz = float2(1,1) / r12.yz;
        r13.yz = float2(1,1) + -r12.yz;
        r12.yz = max(r14.zw, r12.yz);
        r12.yz = min(r12.yz, r13.yz);
        r9.w = t25.CalculateLevelOfDetail(s0_s, r12.yz);
        r11.w = saturate(-3 + r9.w);
        r11.w = 1 + -r11.w;
        r12.y = cmp(0 < r11.w);
        if (r12.y != 0) {
          r12.yz = float2(-0.5,-0.5) + r14.zw;
          r13.yzw = cb1[21].yzx * cb1[20].zxy;
          r13.yzw = cb1[20].yzx * cb1[21].zxy + -r13.yzw;
          r12.w = dot(r13.yzw, -r11.xyz);
          r13.y = dot(cb1[21].xyz, r11.xyz);
          r13.z = r13.y * r12.x;
          r14.x = r12.w * r13.x + -r13.z;
          r13.x = r13.y * r13.x;
          r14.y = r12.w * r12.x + r13.x;
          r12.xy = -r14.xy * float2(0.00999999978,0.00999999978) + r12.yz;
          r12.xy = saturate(float2(0.5,0.5) + r12.xy);
          r12.x = t25.SampleBias(s0_s, r12.xy, 1).w;
          r12.x = saturate(12.75 * r12.x);
          r12.x = r12.x * r6.y;
          r12.x = 0.699999988 * r12.x;
          r12.x = max(r15.x, r12.x);
          r8.w = -r8.w * r6.y + r12.x;
          r15.z = r11.w * r8.w + r15.x;
          r15.xy = r15.zx;
        } else {
          r15.y = 1;
        }
        r8.w = cmp(0 >= r15.x);
        r11.w = ~(int)r7.w;
        r8.w = r8.w ? r11.w : 0;
        r5.w = (int)r5.w | (int)r8.w;
        r12.xyzw = t27.SampleBias(s0_s, r14.zw, -1).zxyw;
        r8.w = r12.y + r12.z;
        r13.x = -1.00392163 + r8.w;
        r13.y = r12.y + -r12.z;
        r8.w = 1 + -abs(r13.x);
        r13.z = r8.w + -abs(r13.y);
        r8.w = dot(r13.xyz, r13.xyz);
        r8.w = rsqrt(r8.w);
        r13.xyz = r13.xyz * r8.www;
        r8.w = max(3, r9.w);
        r14.xy = t20.SampleLevel(s0_s, r1.zw, r8.w).xy;
        r9.w = r14.x + r14.y;
        r16.x = -1.00392163 + r9.w;
        r16.y = r14.x + -r14.y;
        r9.w = 1 + -abs(r16.x);
        r16.z = r9.w + -abs(r16.y);
        r9.w = dot(r16.xyz, r16.xyz);
        r9.w = rsqrt(r9.w);
        r16.xyz = r16.xyz * r9.www;
        r13.w = -r13.y;
        r13.xyz = r13.xwz * r15.xxx;
        r16.w = -r16.y;
        r13.xyz = r13.xyz * float3(2,2,2) + r16.xwz;
        r9.w = dot(r13.xyz, r13.xyz);
        r9.w = rsqrt(r9.w);
        r13.xyz = r13.xyz * r9.www;
        r8.w = t21.SampleLevel(s0_s, r1.zw, r8.w).x;
        r8.w = log2(r8.w);
        r8.w = 0.75 * r8.w;
        r8.w = exp2(r8.w);
        r9.w = r15.y * 0.5 + 0.5;
        r8.w = min(r9.w, r8.w);
        r12.y = cb0[19].x ? 1 : 0;
        if (cb0[20].x != 0) {
          r9.w = t29.SampleBias(s0_s, r14.zw, -1).w;
          r9.w = 1 + -r9.w;
          r11.w = cmp(0 != r9.w);
          if (r11.w != 0) {
            r11.w = cb4[2].x ? 2.5 : 1.75;
            r11.w = cb0[20].z * r11.w;
            r16.xyz = cb1[19].xyz + -r4.yzw;
            r14.x = dot(r16.xyz, r16.xyz);
            r14.x = rsqrt(r14.x);
            r16.xyz = r16.xyz * r14.xxx;
            r14.xy = r14.zw * r11.ww;
            r15.zw = float2(0.5,0.5) + r14.zw;
            r15.zw = r15.zw * r11.ww;
            r17.xy = ddx_coarse(r14.xy);
            r17.zw = ddy_coarse(r14.xy);
            r17.xy = max(r17.xy, r17.zw);
            r11.w = min(r17.x, r17.y);
            r11.w = saturate(-r11.w * 40 + 1);
            r17.xyz = t28.Sample(s9_s, r14.xy).xyw;
            r14.x = r17.x + r17.y;
            r18.x = -1.00392163 + r14.x;
            r18.y = r17.x + -r17.y;
            r14.x = 1 + -abs(r18.x);
            r18.z = r14.x + -abs(r18.y);
            r14.x = dot(r18.xyz, r18.xyz);
            r14.x = rsqrt(r14.x);
            r17.xyw = r18.xyz * r14.xxx;
            r17.xyw = r17.xyw * r17.www;
            r18.xyz = r17.yyy * r9.xyz;
            r18.xyz = r17.xxx * v6.xyz + r18.xyz;
            r18.xyz = r17.www * r3.xyz + r18.xyz;
            r14.x = dot(r18.xyz, r18.xyz);
            r14.x = rsqrt(r14.x);
            r18.xyz = r18.xyz * r14.xxx;
            r14.x = dot(r16.xyz, r18.xyz);
            r14.x = r14.x + r14.x;
            r18.xyz = r18.xyz * -r14.xxx + r16.xyz;
            r18.xyz = float3(12,12,12) * r18.xyz;
            r18.xyz = sin(r18.xyz);
            r19.xyz = max(float3(0,0,0), -r18.xyz);
            r14.x = dot(r19.xyz, float3(0.212500006,0.715399981,0.0720999986));
            r14.x = r14.x * r14.x;
            r19.xyz = saturate(float3(0.149999976,0.149999976,0.149999976) + -r18.xyz);
            r14.y = dot(r19.xyz, float3(0.212500006,0.715399981,0.0720999986));
            r14.y = 0.25 * r14.y;
            r14.x = r14.x * r14.x + r14.y;
            r18.xyz = float3(-0.99000001,-0.99000001,-0.99000001) + r18.xyz;
            r18.xyz = max(float3(0,0,0), r18.xyz);
            r18.xyz = float3(100.000099,100.000099,100.000099) * r18.xyz;
            r19.xyz = r18.yzx * r18.yzx;
            r18.xyz = r19.xyz * r19.xyz + r18.xyz;
            r18.xyz = r18.xyz * float3(3,3,3) + r14.xxx;
            r18.xyz = r18.xyz * r17.zzz;
            r11.w = r11.w * r9.w;
            r11.w = 0.0399999991 * r11.w;
            r14.xy = r17.xy * r11.ww + r13.xy;
            r17.xyz = t28.SampleLevel(s2_s, r15.zw, 0).xyw;
            r15.z = r17.x + r17.y;
            r19.x = -1.00392163 + r15.z;
            r19.y = r17.x + -r17.y;
            r15.z = 1 + -abs(r19.x);
            r19.z = r15.z + -abs(r19.y);
            r15.z = dot(r19.xyz, r19.xyz);
            r15.z = rsqrt(r15.z);
            r17.xyw = r19.xyz * r15.zzz;
            r19.xyz = r17.yyy * r9.xyz;
            r19.xyz = r17.xxx * v6.xyz + r19.xyz;
            r19.xyz = r17.www * r3.xyz + r19.xyz;
            r15.z = dot(r19.xyz, r19.xyz);
            r15.z = rsqrt(r15.z);
            r19.xyz = r19.xyz * r15.zzz;
            r15.z = dot(r16.xyz, r19.xyz);
            r15.z = r15.z + r15.z;
            r16.xyz = r19.xyz * -r15.zzz + r16.xyz;
            r16.xyz = float3(12,12,12) * r16.xyz;
            r16.xyz = sin(r16.xyz);
            r19.xyz = max(float3(0,0,0), -r16.xyz);
            r15.z = dot(r19.xyz, float3(0.212500006,0.715399981,0.0720999986));
            r15.z = r15.z * r15.z;
            r19.xyz = saturate(float3(0.149999976,0.149999976,0.149999976) + -r16.xyz);
            r15.w = dot(r19.xyz, float3(0.212500006,0.715399981,0.0720999986));
            r15.w = 0.25 * r15.w;
            r15.z = r15.z * r15.z + r15.w;
            r16.xyz = float3(-0.99000001,-0.99000001,-0.99000001) + r16.xyz;
            r16.xyz = max(float3(0,0,0), r16.xyz);
            r16.xyz = float3(100.000099,100.000099,100.000099) * r16.xyz;
            r19.xyz = r16.yzx * r16.yzx;
            r16.xyz = r19.xyz * r19.xyz + r16.xyz;
            r16.xyz = r16.xyz * float3(3,3,3) + r15.zzz;
            r16.xyz = r16.xyz * r17.zzz;
            r16.xyz = max(r18.xyz, r16.xyz);
            r18.xyz = saturate(r10.xyz);
            r15.z = dot(r18.xyz, float3(0.212500006,0.715399981,0.0720999986));
            r15.w = max(r10.y, r10.z);
            r15.w = max(r15.w, r10.x);
            r15.w = log2(r15.w);
            r15.w = cb0[9].y * r15.w;
            r15.w = exp2(r15.w);
            r15.w = min(1, r15.w);
            r16.w = cb0[9].z + -cb0[9].x;
            r15.w = r15.w * r16.w + cb0[9].x;
            r18.xyz = max(float3(0.000300000014,0.000300000014,0.000300000014), r10.xyz);
            r16.w = dot(r18.xyz, r18.xyz);
            r16.w = rsqrt(r16.w);
            r18.xyz = r18.xyz * r16.www;
            r18.xyz = float3(1.05999994,1.05999994,1.05999994) * r18.xyz;
            r19.xyz = r18.xyz * r15.www;
            r20.xyz = cb0[9].xxx * r18.xyz;
            r20.xyz = float3(1.73199999,1.73199999,1.73199999) * r20.xyz;
            r15.w = dot(r18.xyz, r18.xyz);
            r15.w = sqrt(r15.w);
            r20.xyz = r20.xyz / r15.www;
            r15.w = dot(r18.xyz, float3(0.212500006,0.715399981,0.0720999986));
            r18.xyz = r20.xyz / r15.www;
            r18.xyz = max(r18.xyz, r19.xyz);
            r15.w = -0.000300000014 + cb0[9].x;
            r15.z = -0.000300000014 + r15.z;
            r15.w = 1 / r15.w;
            r15.z = saturate(r15.z * r15.w);
            r15.w = r15.z * -2 + 3;
            r15.z = r15.z * r15.z;
            r15.z = r15.w * r15.z;
            r15.z = rsqrt(r15.z);
            r15.z = 1 / r15.z;
            r18.xyz = -cb0[9].xxx + r18.xyz;
            r18.xyz = r15.zzz * r18.xyz + cb0[9].xxx;
            r18.xyz = cb0[18].xxx ? r18.xyz : r10.xyz;
            r18.xyz = cb0[18].www * r18.xyz;
            r16.xyz = r18.xyz * r16.xyz;
            r15.zw = r17.xy * r11.ww;
            r13.xy = r15.zw * r17.zz + r14.xy;
            r11.w = 0.5 * r9.w;
            r12.y = max(r12.y, r11.w);
            r16.xyz = r16.xyz * r9.www;
          } else {
            r16.xyz = float3(0,0,0);
          }
        } else {
          r16.xyz = float3(0,0,0);
        }
        if (cb0[18].x != 0) {
          r17.xyz = float3(-1,-1,-1) + cb0[17].xyz;
          r17.xyz = r12.yyy * r17.xyz + float3(1,1,1);
          r9.w = cb0[17].w * r12.y;
          if (cb0[18].y != 0) {
            r11.w = dot(r10.xyz, float3(0.212500006,0.715399981,0.0720999986));
            r18.xyz = r11.www + -r10.xyz;
            r18.xyz = r9.www * r18.xyz + r10.xyz;
            r18.xyz = saturate(r18.xyz * r17.xyz);
            r19.xyz = max(float3(0.000300000014,0.000300000014,0.000300000014), r18.xyz);
            r11.w = dot(r19.xyz, r19.xyz);
            r11.w = rsqrt(r11.w);
            r19.xyz = r19.xyz * r11.www;
            r19.xyz = float3(1.05999994,1.05999994,1.05999994) * r19.xyz;
            r11.w = max(r18.y, r18.z);
            r11.w = max(r18.x, r11.w);
            r11.w = cb0[18].z * r11.w;
            r18.xyz = saturate(cb0[18].zzz * r18.xyz);
            r14.x = dot(r18.xyz, float3(0.212500006,0.715399981,0.0720999986));
            r15.zw = float2(-0.550000012,-0.000300000014) + r14.xx;
            r14.y = saturate(-1.87125754 * r15.z);
            r15.z = r14.y * -2 + 3;
            r14.y = r14.y * r14.y;
            r14.y = r15.z * r14.y;
            r18.xyz = -cb0[11].xyz + cb0[10].xyz;
            r18.xyz = r14.yyy * r18.xyz + cb0[11].xyz;
            r18.xyz = -cb0[9].xyz + r18.xyz;
            r18.xyz = r12.yyy * r18.xyz + cb0[9].xyz;
            r14.y = cb0[10].x + -cb0[9].x;
            r14.y = r12.y * r14.y + cb0[9].x;
            r11.w = log2(r11.w);
            r11.w = r18.y * r11.w;
            r11.w = exp2(r11.w);
            r11.w = min(1, r11.w);
            r15.z = r18.z + -r18.x;
            r11.w = r11.w * r15.z + r18.x;
            r18.xyw = r11.www * r19.xyz;
            r20.xyz = r19.xyz * r14.yyy;
            r20.xyz = float3(1.73199999,1.73199999,1.73199999) * r20.xyz;
            r11.w = dot(r19.xyz, r19.xyz);
            r11.w = sqrt(r11.w);
            r20.xyz = r20.xyz / r11.www;
            r11.w = dot(r19.xyz, float3(0.212500006,0.715399981,0.0720999986));
            r19.xyz = r20.xyz / r11.www;
            r18.xyw = max(r19.xyz, r18.xyw);
            r19.xyz = r18.xyw + r14.xxx;
            r19.xyz = min(r19.xyz, r18.zzz);
            r11.w = -1 + cb0[18].z;
            r11.w = max(0, r11.w);
            r11.w = 0.0158730168 * r11.w;
            r19.xyz = r19.xyz + -r18.xyw;
            r18.xyz = r11.www * r19.xyz + r18.xyw;
            r11.w = -0.000300000014 + r14.y;
            r11.w = 1 / r11.w;
            r11.w = saturate(r15.w * r11.w);
            r14.x = r11.w * -2 + 3;
            r11.w = r11.w * r11.w;
            r11.w = r14.x * r11.w;
            r11.w = rsqrt(r11.w);
            r11.w = 1 / r11.w;
            r18.xyz = r18.xyz + -r14.yyy;
            r18.xyz = r11.www * r18.xyz + r14.yyy;
          } else {
            r19.xyz = r17.xyz * r10.xyz;
            r17.xyz = -r17.xyz * r10.xyz + r17.xyz;
            r17.xyz = r9.www * r17.xyz + r19.xyz;
            r17.xyz = max(float3(0.000300000014,0.000300000014,0.000300000014), r17.xyz);
            r9.w = dot(r17.xyz, r17.xyz);
            r9.w = rsqrt(r9.w);
            r17.xyz = r17.xyz * r9.www;
            r17.xyz = float3(1.05999994,1.05999994,1.05999994) * r17.xyz;
            r9.w = max(r10.y, r10.z);
            r9.w = max(r10.x, r9.w);
            r9.w = cb0[18].z * r9.w;
            r19.xyz = saturate(cb0[18].zzz * r10.xyz);
            r11.w = dot(r19.xyz, float3(0.212500006,0.715399981,0.0720999986));
            r14.xy = float2(-0.550000012,-0.000300000014) + r11.ww;
            r14.x = saturate(-1.87125754 * r14.x);
            r15.z = r14.x * -2 + 3;
            r14.x = r14.x * r14.x;
            r14.x = r15.z * r14.x;
            r19.xyz = -cb0[11].xyz + cb0[10].xyz;
            r19.xyz = r14.xxx * r19.xyz + cb0[11].xyz;
            r19.xyz = -cb0[9].xyz + r19.xyz;
            r19.xyz = r12.yyy * r19.xyz + cb0[9].xyz;
            r14.x = cb0[10].x + -cb0[9].x;
            r14.x = r12.y * r14.x + cb0[9].x;
            r9.w = log2(r9.w);
            r9.w = r19.y * r9.w;
            r9.w = exp2(r9.w);
            r9.w = min(1, r9.w);
            r15.z = r19.z + -r19.x;
            r9.w = r9.w * r15.z + r19.x;
            r19.xyw = r9.www * r17.xyz;
            r20.xyz = r17.xyz * r14.xxx;
            r20.xyz = float3(1.73199999,1.73199999,1.73199999) * r20.xyz;
            r9.w = dot(r17.xyz, r17.xyz);
            r9.w = sqrt(r9.w);
            r20.xyz = r20.xyz / r9.www;
            r9.w = dot(r17.xyz, float3(0.212500006,0.715399981,0.0720999986));
            r17.xyz = r20.xyz / r9.www;
            r17.xyz = max(r17.xyz, r19.xyw);
            r19.xyw = r17.xyz + r11.www;
            r19.xyz = min(r19.zzz, r19.xyw);
            r9.w = -1 + cb0[18].z;
            r9.w = max(0, r9.w);
            r9.w = 0.0158730168 * r9.w;
            r19.xyz = r19.xyz + -r17.xyz;
            r17.xyz = r9.www * r19.xyz + r17.xyz;
            r9.w = -0.000300000014 + r14.x;
            r9.w = 1 / r9.w;
            r9.w = saturate(r14.y * r9.w);
            r11.w = r9.w * -2 + 3;
            r9.w = r9.w * r9.w;
            r9.w = r11.w * r9.w;
            r9.w = rsqrt(r9.w);
            r9.w = 1 / r9.w;
            r17.xyz = r17.xyz + -r14.xxx;
            r18.xyz = r9.www * r17.xyz + r14.xxx;
          }
        } else {
          r9.w = dot(r10.xyz, float3(0.212500006,0.715399981,0.0720999986));
          r17.xyz = r9.www + -r10.xyz;
          r17.xyz = cb0[17].www * r17.xyz + r10.xyz;
          r17.xyz = cb0[17].xyz * r17.xyz;
          r9.w = cb0[18].y ? cb0[18].z : 1;
          r17.xyz = r17.xyz * r9.www;
          r18.xyz = cb0[19].xxx ? r17.xyz : r10.xyz;
        }
        if (cb0[19].y != 0) {
          r17.xyzw = t29.SampleBias(s9_s, r14.zw, -1).xyzw;
          r10.xyz = t29.SampleBias(s0_s, r14.zw, -1).xyz;
          r10.xyz = r10.xyz + -r17.xyz;
          r19.yzw = r17.www * r10.xyz + r17.xyz;
          r9.w = cmp(0 < r19.y);
          if (r9.w != 0) {
            r10.xyz = cb1[19].xyz + -r4.yzw;
            r9.w = dot(r10.xyz, r10.xyz);
            r9.w = rsqrt(r9.w);
            r10.xyz = r10.xyz * r9.www;
            r9.w = dot(r10.xyz, r3.xyz);
            r11.w = cmp(0.000000 != cb4[36].y);
            r17.xyz = cb1[33].xyz + r4.yzw;
            r20.xyz = -cb1[20].xyz * cb4[36].yyy + r17.xyz;
            r17.xyz = cb1[33].xyz + cb1[19].xyz;
            r17.xyz = cb1[22].www * cb1[20].xyz + r17.xyz;
            r21.w = dot(r17.xyz, cb1[20].xyz);
            r20.w = 1;
            r21.xyz = cb1[20].xyz;
            r14.x = dot(r20.xyzw, r21.xyzw);
            r14.y = cmp(0 >= r14.x);
            r17.xyz = r14.xxx * -cb1[20].xyz + r4.yzw;
            r17.xyz = r14.yyy ? r4.yzw : r17.xyz;
            r20.xyz = cb4[13].xyw * r17.yyy;
            r20.xyz = cb4[12].xyw * r17.xxx + r20.xyz;
            r20.xyz = cb4[14].xyw * r17.zzz + r20.xyz;
            r20.xyz = cb4[15].xyw + r20.xyz;
            r14.xy = r20.xy / r20.zz;
            r14.x = 1 + r14.x;
            r14.x = cb1[26].z * r14.x;
            r14.x = 0.5 * r14.x;
            r15.zw = cb1[26].zw + float2(-1,-1);
            r14.x = max(0, r14.x);
            r20.x = min(r14.x, r15.z);
            r14.x = 1 + -r14.y;
            r14.x = cb1[26].w * r14.x;
            r14.x = 0.5 * r14.x;
            r14.x = max(0, r14.x);
            r20.y = min(r14.x, r15.w);
            r21.xyz = r11.www ? r17.xyz : r4.yzw;
            r17.xyz = r11.www ? r20.xyz : v8.xyw;
            r14.xy = -cb1[26].xy + r17.xy;
            r14.xy = (uint2)r14.xy;
            r14.xy = (uint2)r14.xy >> asuint(cb3[25].xx);
            r11.w = mad((int)r14.y, asint(cb3[25].y), (int)r14.x);
            r11.w = mad((int)r11.w, asint(cb3[24].z), asint(cb3[24].y));
            r14.x = cb3[26].x * r17.z;
            r14.x = max(0, r14.x);
            r14.x = min(cb3[26].y, r14.x);
            r14.x = (uint)r14.x;
            r14.x = mad((int)r14.x, asint(cb3[24].z), asint(cb3[24].x));
            r21.w = 1;
            r17.xyz = float3(0,0,0);
            r20.xyz = float3(0,0,0);
            r22.xyz = float3(0,0,0);
            r23.xyz = float3(0,0,0);
            r24.xyz = float3(0,0,0);
            r25.xyz = float3(0,0,0);
            r14.y = 0;
            r15.zw = float2(0,0);
            while (true) {
              r16.w = cmp((uint)r15.w < asuint(cb3[24].z));
              r18.w = ~(int)r15.z;
              r16.w = r16.w ? r18.w : 0;
              if (r16.w == 0) break;
              r16.w = (int)r11.w + (int)r15.w;
              r16.w = t13[r16.w].val[0/4];
              r18.w = (int)r14.x + (int)r15.w;
              r18.w = t13[r18.w].val[0/4];
              r16.w = (int)r16.w & (int)r18.w;
              r18.w = (uint)r15.w << 5;
              r26.xyz = r17.xyz;
              r27.xyz = r20.xyz;
              r28.xyz = r22.xyz;
              r29.xyz = r23.xyz;
              r30.xyz = r24.xyz;
              r31.xyz = r25.xyz;
              r20.w = r14.y;
              r22.w = r15.z;
              r23.w = r16.w;
              while (true) {
                if (r23.w == 0) break;
                r24.w = firstbitlow((uint)r23.w);
                r24.w = (int)r18.w + (int)r24.w;
                r25.w = (int)r23.w + -1;
                r25.w = (int)r23.w & (int)r25.w;
                r24.w = (int)r24.w * 6;
                r32.x = dot(r21.xyzw, cb3[r24.w+1180].xyzw);
                r32.y = dot(r21.xyzw, cb3[r24.w+1181].xyzw);
                r32.z = dot(r21.xyzw, cb3[r24.w+1182].xyzw);
                r33.xyz = -cb3[r24.w+1183].xyz + r32.xyz;
                r33.xyz = saturate(cb3[r24.w+1185].xyz * r33.xyz);
                r32.xyz = cb3[r24.w+1184].xyz + -r32.xyz;
                r32.xyz = saturate(cb3[r24.w+1185].xyz * r32.xyz);
                r26.w = min(r33.y, r33.z);
                r26.w = min(r33.x, r26.w);
                r27.w = min(r32.y, r32.z);
                r27.w = min(r32.x, r27.w);
                r26.w = min(r27.w, r26.w);
                r27.w = cmp(r26.w == 0.000000);
                if (r27.w != 0) {
                  r23.w = r25.w;
                  continue;
                }
                r27.w = r26.w * r26.w;
                r26.w = r26.w * -2 + 3;
                r26.w = r27.w * r26.w;
                r27.w = 1 + -r20.w;
                r28.w = r27.w * r26.w;
                r26.w = r26.w * r27.w + r20.w;
                r24.w = 9 * asint(cb3[r24.w+1185].w);
                r32.x = dot(r21.xyzw, cb2[r24.w+0].xyzw);
                r32.y = dot(r21.xyzw, cb2[r24.w+1].xyzw);
                r27.w = dot(r21.xyzw, cb2[r24.w+2].xyzw);
                r32.z = 0.166666672 * r27.w;
                r32.xyz = max(cb2[r24.w+3].xyz, r32.xyz);
                r32.xyz = min(cb2[r24.w+4].xyz, r32.xyz);
                r32.w = 6 * r32.z;
                r32.xyz = r32.xyw * cb2[r24.w+6].xyz + cb2[r24.w+7].xyz;
                r32.w = 0.166666672 * r32.z;
                r33.xyz = t16.SampleLevel(s1_s, r32.xyw, 0).xyz;
                r33.xyz = cb2[r24.w+5].xyz * r33.xyz;
                r34.xyz = float3(0,0,0.166666672) + r32.xyw;
                r34.xyz = t16.SampleLevel(s1_s, r34.xyz, 0).xyz;
                r34.xyz = cb2[r24.w+5].xyz * r34.xyz;
                r35.xyz = float3(0,0,0.333333343) + r32.xyw;
                r35.xyz = t16.SampleLevel(s1_s, r35.xyz, 0).xyz;
                r35.xyz = cb2[r24.w+5].xyz * r35.xyz;
                r36.xyz = float3(0,0,0.5) + r32.xyw;
                r36.xyz = t16.SampleLevel(s1_s, r36.xyz, 0).xyz;
                r36.xyz = cb2[r24.w+5].xyz * r36.xyz;
                r37.xyz = float3(0,0,0.666666687) + r32.xyw;
                r37.xyz = t16.SampleLevel(s1_s, r37.xyz, 0).xyz;
                r37.xyz = cb2[r24.w+5].xyz * r37.xyz;
                r32.xyz = float3(0,0,0.833333313) + r32.xyw;
                r32.xyz = t16.SampleLevel(s1_s, r32.xyz, 0).xyz;
                r32.xyz = cb2[r24.w+5].xyz * r32.xyz;
                r33.xyz = r28.www * r33.xyz + r26.xyz;
                r34.xyz = r28.www * r34.xyz + r27.xyz;
                r35.xyz = r28.www * r35.xyz + r28.xyz;
                r36.xyz = r28.www * r36.xyz + r29.xyz;
                r37.xyz = r28.www * r37.xyz + r30.xyz;
                r32.xyz = r28.www * r32.xyz + r31.xyz;
                r24.w = cmp(0.99000001 < r26.w);
                if (r24.w != 0) {
                  r26.xyz = r33.xyz;
                  r27.xyz = r34.xyz;
                  r28.xyz = r35.xyz;
                  r29.xyz = r36.xyz;
                  r30.xyz = r37.xyz;
                  r31.xyz = r32.xyz;
                  r20.w = r26.w;
                  r22.w = -1;
                  break;
                }
                r26.xyz = r33.xyz;
                r27.xyz = r34.xyz;
                r28.xyz = r35.xyz;
                r29.xyz = r36.xyz;
                r30.xyz = r37.xyz;
                r31.xyz = r32.xyz;
                r20.w = r26.w;
                r23.w = r25.w;
              }
              r17.xyz = r26.xyz;
              r20.xyz = r27.xyz;
              r22.xyz = r28.xyz;
              r23.xyz = r29.xyz;
              r24.xyz = r30.xyz;
              r25.xyz = r31.xyz;
              r14.y = r20.w;
              r15.z = r22.w;
              r15.w = (int)r15.w + 1;
            }
            r11.w = cmp(r14.y < 0.99000001);
            if (r11.w != 0) {
              r11.w = 1 + -r14.y;
              r21.x = dot(cb3[7].xw, float2(1,1));
              r21.y = dot(cb3[8].xw, float2(1,1));
              r21.z = dot(cb3[9].xw, float2(1,1));
              r17.xyz = r11.www * r21.xyz + r17.xyz;
              r21.x = dot(cb3[7].yw, float2(1,1));
              r21.y = dot(cb3[8].yw, float2(1,1));
              r21.z = dot(cb3[9].yw, float2(1,1));
              r20.xyz = r11.www * r21.xyz + r20.xyz;
              r21.x = dot(cb3[7].zw, float2(1,1));
              r21.y = dot(cb3[8].zw, float2(1,1));
              r21.z = dot(cb3[9].zw, float2(1,1));
              r22.xyz = r11.www * r21.xyz + r22.xyz;
              r21.x = dot(cb3[7].xw, float2(-1,1));
              r21.y = dot(cb3[8].xw, float2(-1,1));
              r21.z = dot(cb3[9].xw, float2(-1,1));
              r23.xyz = r11.www * r21.xyz + r23.xyz;
              r21.x = dot(cb3[7].yw, float2(-1,1));
              r21.y = dot(cb3[8].yw, float2(-1,1));
              r21.z = dot(cb3[9].yw, float2(-1,1));
              r24.xyz = r11.www * r21.xyz + r24.xyz;
              r21.x = dot(cb3[7].zw, float2(-1,1));
              r21.y = dot(cb3[8].zw, float2(-1,1));
              r21.z = dot(cb3[9].zw, float2(-1,1));
              r25.xyz = r11.www * r21.xyz + r25.xyz;
            }
            r21.xyz = r13.yyy * r9.xyz;
            r21.xyz = r13.xxx * v6.xyz + r21.xyz;
            r21.xyz = r13.zzz * r3.xyz + r21.xyz;
            r11.w = dot(r21.xyz, r21.xyz);
            r11.w = rsqrt(r11.w);
            r14.xy = r21.xy * r11.ww;
            r11.w = dot(r17.xyz, float3(0.212500006,0.715399981,0.0720999986));
            r15.zw = max(float2(0,0), r14.xy);
            r16.w = dot(r23.xyz, float3(0.212500006,0.715399981,0.0720999986));
            r14.xy = max(float2(0,0), -r14.xy);
            r16.w = r16.w * r14.x;
            r17.x = r11.w * r15.z + -r16.w;
            r11.w = dot(r20.xyz, float3(0.212500006,0.715399981,0.0720999986));
            r15.z = dot(r24.xyz, float3(0.212500006,0.715399981,0.0720999986));
            r14.y = r15.z * r14.y;
            r17.y = r11.w * r15.w + -r14.y;
            r11.w = dot(r22.xyz, float3(0.212500006,0.715399981,0.0720999986));
            r14.y = dot(r25.xyz, float3(0.212500006,0.715399981,0.0720999986));
            r14.x = r14.y * r14.x;
            r17.z = r11.w * r15.w + -r14.x;
            r17.xyz = r10.xyz * float3(0.00100000005,0.00100000005,0.00100000005) + r17.xyz;
            r11.w = dot(cb3[20].xyz, float3(0.212500006,0.715399981,0.0720999986));
            r17.xyz = cb3[19].xyz * r11.www + r17.xyz;
            r11.w = dot(r17.xyz, r17.xyz);
            r11.w = rsqrt(r11.w);
            r17.xyz = r17.xyz * r11.www;
            r10.x = dot(r10.xyz, r17.xyz);
            r9.w = r10.x + r9.w;
            r19.x = r19.z + r9.w;
            r10.xyz = t26.SampleLevel(s9_s, r19.xw, 0).xyz;
            if (cb0[20].y != 0) {
              r17.xyz = t26.SampleBias(s10_s, r19.xw, -1).xyz;
            } else {
              r17.xyz = t26.SampleBias(s0_s, r19.xw, -1).xyz;
            }
            r17.xyz = r17.xyz + -r10.xyz;
            r10.xyz = r17.www * r17.xyz + r10.xyz;
            r17.xyz = saturate(cb0[18].www * r10.xyz);
            r9.w = dot(r17.xyz, float3(0.212500006,0.715399981,0.0720999986));
            r11.w = max(r10.y, r10.z);
            r11.w = max(r11.w, r10.x);
            r11.w = cb0[18].w * r11.w;
            r11.w = log2(r11.w);
            r11.w = cb0[12].y * r11.w;
            r11.w = exp2(r11.w);
            r11.w = min(1, r11.w);
            r14.x = cb0[12].z + -cb0[12].x;
            r11.w = r11.w * r14.x + cb0[12].x;
            r10.xyz = max(float3(0.000300000014,0.000300000014,0.000300000014), r10.xyz);
            r14.x = dot(r10.xyz, r10.xyz);
            r14.x = rsqrt(r14.x);
            r10.xyz = r14.xxx * r10.xyz;
            r10.xyz = float3(1.05999994,1.05999994,1.05999994) * r10.xyz;
            r17.xyz = r11.www * r10.xyz;
            r19.xzw = cb0[12].xxx * r10.xyz;
            r19.xzw = float3(1.73199999,1.73199999,1.73199999) * r19.xzw;
            r11.w = dot(r10.xyz, r10.xyz);
            r11.w = sqrt(r11.w);
            r19.xzw = r19.xzw / r11.www;
            r10.x = dot(r10.xyz, float3(0.212500006,0.715399981,0.0720999986));
            r10.xyz = r19.xzw / r10.xxx;
            r10.xyz = max(r10.xyz, r17.xyz);
            r17.xyz = r9.www * cb0[18].www + r10.xyz;
            r17.xyz = min(cb0[12].zzz, r17.xyz);
            r11.w = -1 + cb0[18].w;
            r11.w = max(0, r11.w);
            r11.w = r11.w / cb0[11].w;
            r17.xyz = r17.xyz + -r10.xyz;
            r10.xyz = r11.www * r17.xyz + r10.xyz;
            r11.w = -0.000300000014 + cb0[12].x;
            r9.w = -0.000300000014 + r9.w;
            r11.w = 1 / r11.w;
            r9.w = saturate(r11.w * r9.w);
            r11.w = r9.w * -2 + 3;
            r9.w = r9.w * r9.w;
            r9.w = r11.w * r9.w;
            r9.w = rsqrt(r9.w);
            r9.w = 1 / r9.w;
            r10.xyz = -cb0[12].xxx + r10.xyz;
            r10.xyz = r9.www * r10.xyz + cb0[12].xxx;
            r10.xyz = r10.xyz + -r18.xyz;
            r10.xyz = r19.yyy * r10.xyz + r18.xyz;
            r9.w = 1 + -r19.y;
            r12.y = r12.y * r9.w;
          } else {
            r10.xyz = r18.xyz;
          }
        } else {
          r10.xyz = r18.xyz;
        }
        r9.w = cmp(0 < cb0[15].w);
        if (r9.w != 0) {
          r9.w = -0.0784313753 + r10.w;
          r9.w = saturate(1.08510637 * r9.w);
          r10.w = t23.SampleBias(s0_s, r14.zw, -1).x;
          r10.w = min(cb0[16].z, r10.w);
          r10.w = 1 + -r10.w;
          r11.w = cb0[15].w * r10.w;
          r10.w = r11.w * -0.5 + r10.w;
          r11.w = -0.5 + r6.z;
          r11.w = r11.w + r11.w;
          r14.x = -1 + cb0[15].w;
          r14.x = saturate(-6.66666794 * r14.x);
          r14.y = r14.x * -2 + 3;
          r14.x = r14.x * r14.x;
          r14.x = r14.y * r14.x;
          r11.w = r14.x * r11.w;
          r11.w = saturate(cb0[15].w * r11.w + cb0[15].w);
          r14.x = cmp(0 < cb0[16].y);
          r14.x = r14.x ? 0.5 : 0.25;
          r14.x = cb0[16].y * r14.x + 0.5;
          r14.x = 0.5 * r14.x;
          r14.x = cb0[19].z ? 0.5 : r14.x;
          r14.y = cb0[16].x * cb0[16].x;
          r9.w = log2(r9.w);
          r9.w = r14.y * r9.w;
          r9.w = exp2(r9.w);
          r9.w = r11.w + -r9.w;
          r9.w = max(0, r9.w);
          r14.y = r9.w + r9.w;
          r14.y = min(1, r14.y);
          r14.y = cb0[16].y * r11.w + r14.y;
          r14.y = -r14.y + r10.w;
          r14.y = saturate(10 * r14.y);
          r15.z = r14.y * -2 + 3;
          r14.y = r14.y * r14.y;
          r14.y = r15.z * r14.y;
          r15.z = r10.w * 0.400000006 + -0.5;
          r15.z = r11.w * r15.z + 0.699999988;
          r17.xyz = -r15.zzz + r10.xyz;
          r17.xyz = r14.yyy * r17.xyz + r15.zzz;
          r17.xyz = cb0[19].zzz ? r17.xyz : r10.xyz;
          r14.y = 1 + r14.x;
          r9.w = saturate(r9.w * r14.y + -r14.x);
          r9.w = r10.w + -r9.w;
          r9.w = saturate(10 * r9.w);
          r14.x = r9.w * -2 + 3;
          r9.w = r9.w * r9.w;
          r9.w = r14.x * r9.w;
          r15.x = r15.x * r9.w;
          r14.xy = float2(0.300000012,2.85714293) * r11.ww;
          r19.xyz = r17.xyz * r10.www + -r17.xyz;
          r10.xyz = r14.xxx * r19.xyz + r17.xyz;
          r9.w = asint(cb0[19].w) | asint(cb0[19].x);
          r14.x = min(1, r14.y);
          r14.y = r14.x * -2 + 3;
          r14.x = r14.x * r14.x;
          r14.x = r14.y * r14.x;
          r10.w = cmp(r14.x >= r10.w);
          r10.w = r10.w ? 1.000000 : 0;
          r14.x = 0.800000012 + -r12.x;
          r10.w = r10.w * r14.x + r12.x;
          r12.x = r9.w ? r12.x : r10.w;
        } else {
          r11.w = cb0[15].w;
        }
        r14.xy = float2(-0.5,-0.5) + r14.zw;
        r15.zw = -r14.xy + r13.xy;
        r13.xy = r15.xx * r15.zw + r14.xy;
        if (r7.w != 0) {
          r7.w = saturate(2.22222233 * r6.w);
          r9.w = rsqrt(r7.w);
          r9.w = 1 / r9.w;
          r10.w = r9.w + -r14.w;
          r14.x = cmp(r9.w < r14.w);
          if (r14.x != 0) {
            r14.x = log2(abs(r10.w));
            r14.x = 0.200000003 * r14.x;
            r14.x = exp2(r14.x);
            r14.x = 1 + -r14.x;
            r15.x = r15.x * r14.x;
            r10.xyz = float3(0,0,0);
          } else {
            r6.w = saturate(1.11111116 * r6.w);
            r9.w = r10.w + r9.w;
            r9.w = abs(r10.w) * 0.300000012 + r9.w;
            r14.x = log2(r14.w);
            r14.x = 0.200000003 * r14.x;
            r14.x = exp2(r14.x);
            r9.w = -1 + r9.w;
            r14.y = r14.x * r9.w + 1;
            r9.w = cmp(r14.y < 1);
            if (r9.w != 0) {
              r14.x = r14.z;
              r14.xy = saturate(r14.xy);
              r17.xyzw = t25.SampleBias(s0_s, r14.xy, -1).xyzw;
              r9.w = dot(r17.xyz, float3(0.298999995,0.587000012,0.114));
              r14.x = 0.300000012 + -r9.w;
              r9.w = r14.x * 0.800000012 + r9.w;
              r10.w = log2(abs(r10.w));
              r14.xy = float2(0.200000003,0.100000001) * r10.ww;
              r14.xy = exp2(r14.xy);
              r10.w = saturate(12.75 * r17.w);
              r15.z = 1 + -r14.y;
              r7.w = r7.w * r15.z + r14.y;
              r17.xyz = r10.xyz * r7.www;
              r19.xyz = r9.www * r14.xxx + -r17.xyz;
              r10.xyz = r10.www * r19.xyz + r17.xyz;
              r15.x = max(r15.x, r10.w);
              r17.xyz = float3(0,0,1) + -r13.xyz;
              r13.xyz = r10.www * r17.xyz + r13.xyz;
              r12.y = r10.w * -r12.y + r12.y;
              r9.w = 0.800000012 + -r12.x;
              r12.x = r10.w * r9.w + r12.x;
              r9.w = 1 + -r15.y;
              r15.y = r10.w * r9.w + r15.y;
              r7.w = r7.w + -r8.w;
              r8.w = r10.w * r7.w + r8.w;
            } else {
              r13.w = r13.z;
              r13.xyz = r13.xyw;
            }
            r7.w = cmp(r6.w >= 0.5);
            r7.w = r7.w ? 1.000000 : 0;
            r6.w = -1 + r6.w;
            r6.w = -2 * r6.w;
            r6.w = min(1, r6.w);
            r9.w = r6.w * -2 + 3;
            r6.w = r6.w * r6.w;
            r6.w = r9.w * r6.w;
            r6.w = log2(r6.w);
            r6.w = 20 * r6.w;
            r6.w = exp2(r6.w);
            r6.w = r7.w * r6.w;
            r17.xyz = r10.xyz * r6.www;
            r10.xyz = r17.xyz * float3(9,9,9) + r10.xyz;
          }
        }
        if (r5.w == 0) {
          r17.xyz = r18.xyz * r12.www;
          r17.xyz = r17.xyz + r17.xyz;
          r17.xyz = cb0[20].www ? r17.xyz : float3(0,0,0);
          r5.w = cb4[39].z + -cb0[21].x;
          r6.w = cmp(r5.w < 2);
          r5.w = -r5.w * 0.5 + 1;
          r7.w = r5.w * r5.w;
          r7.w = r7.w * r7.w;
          r18.xyz = r5.www * r7.www + r10.xyz;
          r10.xyz = r6.www ? r18.xyz : r10.xyz;
          r12.z = r15.y * r15.x;
          r15.yzw = r10.xyz + r10.xyz;
          r15.yzw = cb0[13].zzz ? r15.yzw : r10.xyz;
          r14.xy = float2(8,8) * r14.zw;
          r14.xy = floor(r14.xy);
          r5.w = r14.x + r14.y;
          r5.w = 0.5 * r5.w;
          r5.w = frac(r5.w);
          r6.w = dot(r15.yzw, float3(0.212500006,0.715399981,0.0720999986));
          r6.w = saturate(0.600000024 * r6.w);
          r6.w = 0.200000003 + r6.w;
          r5.w = r5.w * 0.200200006 + r6.w;
          r5.w = r5.w * r2.w;
          r14.z = 0.899999976 * r12.z;
          r15.yzw = cb0[13].xxx ? r5.www : r15.yzw;
          r18.xyz = cb0[13].xxx ? float3(0,0,1) : r13.xyz;
          r14.xy = float2(0.800000012,0);
          r14.xyz = cb0[13].xxx ? r14.xyz : r12.xyz;
          r19.xyz = cb0[13].xxx ? float3(0,0,0) : r16.xyz;
          r10.xyz = saturate(r1.yyy ? r15.yzw : r10.xyz);
          r13.xyz = r1.yyy ? r18.xyz : r13.xyz;
          r15.yzw = r1.yyy ? r19.xyz : r16.xyz;
          r12.xyz = r1.yyy ? r14.xyz : r12.xyz;
          r10.xyz = r10.xyz + -r5.xyz;
          r5.xyz = r12.zzz * r10.xyz + r5.xyz;
          r10.xyz = r13.xyz + -r7.xyz;
          r10.xyz = r12.zzz * r10.xyz + r7.xyz;
          r1.y = dot(r10.xyz, r10.xyz);
          r1.y = rsqrt(r1.y);
          r7.xyz = r10.xyz * r1.yyy;
          r1.y = r12.y + -r3.w;
          r3.w = r12.z * r1.y + r3.w;
          r10.xy = r12.xx + -r0.xy;
          r0.xy = r12.zz * r10.xy + r0.xy;
          r1.y = r8.w + -r2.w;
          r2.w = r15.x * r1.y + r2.w;
          r10.xyz = r12.zzz * r15.yzw;
          r1.y = r12.z * 0.0199999996 + 0.0199999996;
          r6.x = r12.z * -r6.x + r6.x;
          r12.xyw = r12.zzz * r17.xyz;
          r5.w = max(0, r12.z);
          r6.w = 1 + -r11.w;
          r6.w = r12.z * r6.w;
          r6.w = max(0, r6.w);
          r0.z = cb4[3].y ? r12.z : v4.w;
        } else {
          r1.y = 0.0199999996;
          r10.xyz = float3(0,0,0);
          r12.xyw = float3(0,0,0);
          r5.w = 0;
          r6.w = 0;
        }
      } else {
        r1.y = 0.0199999996;
        r10.xyz = float3(0,0,0);
        r12.xyw = float3(0,0,0);
        r5.w = 0;
        r6.w = 0;
      }
    } else {
      r10.xyz = float3(0,0,0);
      r12.xyw = float3(0,0,0);
      r0.z = v4.w;
      r1.y = 0.0199999996;
      r5.w = 0;
      r6.w = 0;
    }
    r7.w = asint(cb0[0].y) | asint(cb0[21].y);
    if (r7.w != 0) {
      r7.w = cb4[3].y ? 0 : r0.z;
      r13.xy = cmp(cb0[22].xy == float2(0,0));
      r8.w = (int)r13.y | (int)r13.x;
      r9.w = cmp(r6.y == 0.000000);
      r8.w = (int)r8.w | (int)r9.w;
      if (r8.w == 0) {
        r8.w = cmp(asint(cb0[12].w) == 2);
        r13.xy = float2(-0.5,-0.5) + v3.wz;
        r13.xy = -cb0[21].wz + r13.xy;
        r13.xy = abs(cb0[22].xx) * r13.xy;
        r9.w = 6.28318024 * cb0[22].z;
        sincos(r9.w, r14.x, r15.x);
        r13.zw = r14.xx * r13.xy;
        r16.x = r13.y * r15.x + -r13.z;
        r16.y = r13.x * r15.x + r13.w;
        r13.xy = float2(0.5,0.5) + r16.xy;
        r16.xyzw = saturate(r13.xyxy);
        r13.xy = cmp(r13.xy != r16.xy);
        r9.w = (int)r13.y | (int)r13.x;
        r10.w = cmp(asint(cb0[13].x) == 0);
        r10.w = r8.w ? r10.w : 0;
        r11.w = cb4[39].z + -cb0[13].y;
        r10.w = r10.w ? r11.w : 0.899999976;
        r11.w = cmp(r10.w < 0.899999976);
        r13.xyzw = t30.SampleBias(s0_s, r16.zw, -1).xyzw;
        r12.z = saturate(12.75 * r13.w);
        r17.x = r12.z * r6.y;
        t30.GetDimensions(0, fDest.x, fDest.y, fDest.z);
        r14.yz = fDest.xy;
        r14.yz = float2(1,1) / r14.yz;
        r15.yz = float2(1,1) + -r14.yz;
        r14.yz = max(r16.zw, r14.yz);
        r14.yz = min(r14.yz, r15.yz);
        r14.y = t30.CalculateLevelOfDetail(s0_s, r14.yz);
        r14.z = saturate(-3 + r14.y);
        r14.z = 1 + -r14.z;
        r14.w = cmp(0 < r14.z);
        if (r14.w != 0) {
          r15.yz = float2(-0.5,-0.5) + r16.zw;
          r18.xyz = cb1[21].yzx * cb1[20].zxy;
          r18.xyz = cb1[20].yzx * cb1[21].zxy + -r18.xyz;
          r14.w = dot(r18.xyz, -r11.xyz);
          r15.w = dot(cb1[21].xyz, r11.xyz);
          r16.x = r15.w * r14.x;
          r16.x = r14.w * r15.x + -r16.x;
          r15.x = r15.w * r15.x;
          r16.y = r14.w * r14.x + r15.x;
          r14.xw = -r16.xy * float2(0.00999999978,0.00999999978) + r15.yz;
          r14.xw = saturate(float2(0.5,0.5) + r14.xw);
          r14.x = t30.SampleBias(s0_s, r14.xw, 1).w;
          r14.x = saturate(12.75 * r14.x);
          r14.x = r14.x * r6.y;
          r14.x = 0.699999988 * r14.x;
          r14.x = max(r17.x, r14.x);
          r12.z = -r12.z * r6.y + r14.x;
          r17.z = r14.z * r12.z + r17.x;
          r17.xy = r17.zx;
        } else {
          r17.y = 1;
        }
        r12.z = cmp(0 >= r17.x);
        r14.x = ~(int)r11.w;
        r12.z = r12.z ? r14.x : 0;
        r9.w = (int)r9.w | (int)r12.z;
        r15.xyzw = t32.SampleBias(s0_s, r16.zw, -1).zxyw;
        r12.z = r15.y + r15.z;
        r18.x = -1.00392163 + r12.z;
        r18.y = r15.y + -r15.z;
        r12.z = 1 + -abs(r18.x);
        r18.z = r12.z + -abs(r18.y);
        r12.z = dot(r18.xyz, r18.xyz);
        r12.z = rsqrt(r12.z);
        r18.xyz = r18.xyz * r12.zzz;
        r12.z = max(3, r14.y);
        r14.xy = t20.SampleLevel(s0_s, r1.zw, r12.z).xy;
        r14.z = r14.x + r14.y;
        r19.x = -1.00392163 + r14.z;
        r19.y = r14.x + -r14.y;
        r14.x = 1 + -abs(r19.x);
        r19.z = r14.x + -abs(r19.y);
        r14.x = dot(r19.xyz, r19.xyz);
        r14.x = rsqrt(r14.x);
        r14.xyz = r19.xyz * r14.xxx;
        r18.w = -r18.y;
        r18.xyz = r18.xwz * r17.xxx;
        r14.w = -r14.y;
        r14.xyz = r18.xyz * float3(2,2,2) + r14.xwz;
        r14.w = dot(r14.xyz, r14.xyz);
        r14.w = rsqrt(r14.w);
        r14.xyz = r14.xyz * r14.www;
        r12.z = t21.SampleLevel(s0_s, r1.zw, r12.z).x;
        r12.z = log2(r12.z);
        r12.z = 0.75 * r12.z;
        r12.z = exp2(r12.z);
        r16.x = r17.y * 0.5 + 0.5;
        r12.z = min(r16.x, r12.z);
        r15.y = cb0[26].x ? 1 : 0;
        if (cb0[27].x != 0) {
          r16.x = t34.SampleBias(s0_s, r16.zw, -1).w;
          r16.x = 1 + -r16.x;
          r16.y = cmp(0 != r16.x);
          if (r16.y != 0) {
            r16.y = cb4[2].x ? 2.5 : 1.75;
            r16.y = cb0[27].z * r16.y;
            r18.xyz = cb1[19].xyz + -r4.yzw;
            r17.z = dot(r18.xyz, r18.xyz);
            r17.z = rsqrt(r17.z);
            r18.xyz = r18.xyz * r17.zzz;
            r17.zw = r16.zw * r16.yy;
            r19.xy = float2(0.5,0.5) + r16.zw;
            r19.xy = r19.xy * r16.yy;
            r19.zw = ddx_coarse(r17.zw);
            r20.xy = ddy_coarse(r17.zw);
            r19.zw = max(r20.xy, r19.zw);
            r16.y = min(r19.z, r19.w);
            r16.y = saturate(-r16.y * 40 + 1);
            r20.xyz = t33.Sample(s9_s, r17.zw).xyw;
            r17.z = r20.x + r20.y;
            r21.x = -1.00392163 + r17.z;
            r21.y = r20.x + -r20.y;
            r17.z = 1 + -abs(r21.x);
            r21.z = r17.z + -abs(r21.y);
            r17.z = dot(r21.xyz, r21.xyz);
            r17.z = rsqrt(r17.z);
            r20.xyw = r21.xyz * r17.zzz;
            r20.xyw = r20.xyw * r20.www;
            r21.xyz = r20.yyy * r9.xyz;
            r21.xyz = r20.xxx * v6.xyz + r21.xyz;
            r21.xyz = r20.www * r3.xyz + r21.xyz;
            r17.z = dot(r21.xyz, r21.xyz);
            r17.z = rsqrt(r17.z);
            r21.xyz = r21.xyz * r17.zzz;
            r17.z = dot(r18.xyz, r21.xyz);
            r17.z = r17.z + r17.z;
            r21.xyz = r21.xyz * -r17.zzz + r18.xyz;
            r21.xyz = float3(12,12,12) * r21.xyz;
            r21.xyz = sin(r21.xyz);
            r22.xyz = max(float3(0,0,0), -r21.xyz);
            r17.z = dot(r22.xyz, float3(0.212500006,0.715399981,0.0720999986));
            r17.z = r17.z * r17.z;
            r22.xyz = saturate(float3(0.149999976,0.149999976,0.149999976) + -r21.xyz);
            r17.w = dot(r22.xyz, float3(0.212500006,0.715399981,0.0720999986));
            r17.w = 0.25 * r17.w;
            r17.z = r17.z * r17.z + r17.w;
            r21.xyz = float3(-0.99000001,-0.99000001,-0.99000001) + r21.xyz;
            r21.xyz = max(float3(0,0,0), r21.xyz);
            r21.xyz = float3(100.000099,100.000099,100.000099) * r21.xyz;
            r22.xyz = r21.yzx * r21.yzx;
            r21.xyz = r22.xyz * r22.xyz + r21.xyz;
            r21.xyz = r21.xyz * float3(3,3,3) + r17.zzz;
            r21.xyz = r21.xyz * r20.zzz;
            r16.y = r16.y * r16.x;
            r16.y = 0.0399999991 * r16.y;
            r17.zw = r20.xy * r16.yy + r14.xy;
            r19.xyz = t33.SampleLevel(s2_s, r19.xy, 0).xyw;
            r18.w = r19.x + r19.y;
            r20.x = -1.00392163 + r18.w;
            r20.y = r19.x + -r19.y;
            r18.w = 1 + -abs(r20.x);
            r20.z = r18.w + -abs(r20.y);
            r18.w = dot(r20.xyz, r20.xyz);
            r18.w = rsqrt(r18.w);
            r19.xyw = r20.xyz * r18.www;
            r20.xyz = r19.yyy * r9.xyz;
            r20.xyz = r19.xxx * v6.xyz + r20.xyz;
            r20.xyz = r19.www * r3.xyz + r20.xyz;
            r18.w = dot(r20.xyz, r20.xyz);
            r18.w = rsqrt(r18.w);
            r20.xyz = r20.xyz * r18.www;
            r18.w = dot(r18.xyz, r20.xyz);
            r18.w = r18.w + r18.w;
            r18.xyz = r20.xyz * -r18.www + r18.xyz;
            r18.xyz = float3(12,12,12) * r18.xyz;
            r18.xyz = sin(r18.xyz);
            r20.xyz = max(float3(0,0,0), -r18.xyz);
            r18.w = dot(r20.xyz, float3(0.212500006,0.715399981,0.0720999986));
            r18.w = r18.w * r18.w;
            r20.xyz = saturate(float3(0.149999976,0.149999976,0.149999976) + -r18.xyz);
            r19.w = dot(r20.xyz, float3(0.212500006,0.715399981,0.0720999986));
            r19.w = 0.25 * r19.w;
            r18.w = r18.w * r18.w + r19.w;
            r18.xyz = float3(-0.99000001,-0.99000001,-0.99000001) + r18.xyz;
            r18.xyz = max(float3(0,0,0), r18.xyz);
            r18.xyz = float3(100.000099,100.000099,100.000099) * r18.xyz;
            r20.xyz = r18.yzx * r18.yzx;
            r18.xyz = r20.xyz * r20.xyz + r18.xyz;
            r18.xyz = r18.xyz * float3(3,3,3) + r18.www;
            r18.xyz = r18.xyz * r19.zzz;
            r18.xyz = max(r21.xyz, r18.xyz);
            r20.xyz = saturate(r13.xyz);
            r18.w = dot(r20.xyz, float3(0.212500006,0.715399981,0.0720999986));
            r19.w = max(r13.y, r13.z);
            r19.w = max(r19.w, r13.x);
            r19.w = log2(r19.w);
            r19.w = cb0[9].y * r19.w;
            r19.w = exp2(r19.w);
            r19.w = min(1, r19.w);
            r20.x = cb0[9].z + -cb0[9].x;
            r19.w = r19.w * r20.x + cb0[9].x;
            r20.xyz = max(float3(0.000300000014,0.000300000014,0.000300000014), r13.xyz);
            r20.w = dot(r20.xyz, r20.xyz);
            r20.w = rsqrt(r20.w);
            r20.xyz = r20.xyz * r20.www;
            r20.xyz = float3(1.05999994,1.05999994,1.05999994) * r20.xyz;
            r21.xyz = r20.xyz * r19.www;
            r22.xyz = cb0[9].xxx * r20.xyz;
            r22.xyz = float3(1.73199999,1.73199999,1.73199999) * r22.xyz;
            r19.w = dot(r20.xyz, r20.xyz);
            r19.w = sqrt(r19.w);
            r22.xyz = r22.xyz / r19.www;
            r19.w = dot(r20.xyz, float3(0.212500006,0.715399981,0.0720999986));
            r20.xyz = r22.xyz / r19.www;
            r20.xyz = max(r20.xyz, r21.xyz);
            r19.w = -0.000300000014 + cb0[9].x;
            r18.w = -0.000300000014 + r18.w;
            r19.w = 1 / r19.w;
            r18.w = saturate(r19.w * r18.w);
            r19.w = r18.w * -2 + 3;
            r18.w = r18.w * r18.w;
            r18.w = r19.w * r18.w;
            r18.w = rsqrt(r18.w);
            r18.w = 1 / r18.w;
            r20.xyz = -cb0[9].xxx + r20.xyz;
            r20.xyz = r18.www * r20.xyz + cb0[9].xxx;
            r20.xyz = cb0[25].xxx ? r20.xyz : r13.xyz;
            r20.xyz = cb0[25].www * r20.xyz;
            r18.xyz = r20.xyz * r18.xyz;
            r19.xy = r19.xy * r16.yy;
            r14.xy = r19.xy * r19.zz + r17.zw;
            r16.y = 0.5 * r16.x;
            r15.y = max(r16.y, r15.y);
            r18.xyz = r18.xyz * r16.xxx;
          } else {
            r18.xyz = r10.xyz;
          }
        } else {
          r18.xyz = r10.xyz;
        }
        if (cb0[25].x != 0) {
          r19.xyz = float3(-1,-1,-1) + cb0[24].xyz;
          r19.xyz = r15.yyy * r19.xyz + float3(1,1,1);
          r16.x = cb0[24].w * r15.y;
          if (cb0[25].y != 0) {
            r16.y = dot(r13.xyz, float3(0.212500006,0.715399981,0.0720999986));
            r20.xyz = r16.yyy + -r13.xyz;
            r20.xyz = r16.xxx * r20.xyz + r13.xyz;
            r20.xyz = saturate(r20.xyz * r19.xyz);
            r21.xyz = max(float3(0.000300000014,0.000300000014,0.000300000014), r20.xyz);
            r16.y = dot(r21.xyz, r21.xyz);
            r16.y = rsqrt(r16.y);
            r21.xyz = r21.xyz * r16.yyy;
            r21.xyz = float3(1.05999994,1.05999994,1.05999994) * r21.xyz;
            r16.y = max(r20.y, r20.z);
            r16.y = max(r20.x, r16.y);
            r16.y = cb0[25].z * r16.y;
            r20.xyz = saturate(cb0[25].zzz * r20.xyz);
            r17.z = dot(r20.xyz, float3(0.212500006,0.715399981,0.0720999986));
            r20.xy = float2(-0.550000012,-0.000300000014) + r17.zz;
            r17.w = saturate(-1.87125754 * r20.x);
            r18.w = r17.w * -2 + 3;
            r17.w = r17.w * r17.w;
            r17.w = r18.w * r17.w;
            r20.xzw = -cb0[11].xyz + cb0[10].xyz;
            r20.xzw = r17.www * r20.xzw + cb0[11].xyz;
            r20.xzw = -cb0[9].xyz + r20.xzw;
            r20.xzw = r15.yyy * r20.xzw + cb0[9].xyz;
            r17.w = cb0[10].x + -cb0[9].x;
            r17.w = r15.y * r17.w + cb0[9].x;
            r16.y = log2(r16.y);
            r16.y = r20.z * r16.y;
            r16.y = exp2(r16.y);
            r16.y = min(1, r16.y);
            r18.w = r20.w + -r20.x;
            r16.y = r16.y * r18.w + r20.x;
            r22.xyz = r16.yyy * r21.xyz;
            r23.xyz = r21.xyz * r17.www;
            r23.xyz = float3(1.73199999,1.73199999,1.73199999) * r23.xyz;
            r16.y = dot(r21.xyz, r21.xyz);
            r16.y = sqrt(r16.y);
            r23.xyz = r23.xyz / r16.yyy;
            r16.y = dot(r21.xyz, float3(0.212500006,0.715399981,0.0720999986));
            r21.xyz = r23.xyz / r16.yyy;
            r21.xyz = max(r21.xyz, r22.xyz);
            r22.xyz = r21.xyz + r17.zzz;
            r20.xzw = min(r22.xyz, r20.www);
            r16.y = -1 + cb0[25].z;
            r16.y = max(0, r16.y);
            r16.y = 0.0158730168 * r16.y;
            r20.xzw = r20.xzw + -r21.xyz;
            r20.xzw = r16.yyy * r20.xzw + r21.xyz;
            r16.y = -0.000300000014 + r17.w;
            r16.y = 1 / r16.y;
            r16.y = saturate(r20.y * r16.y);
            r17.z = r16.y * -2 + 3;
            r16.y = r16.y * r16.y;
            r16.y = r17.z * r16.y;
            r16.y = rsqrt(r16.y);
            r16.y = 1 / r16.y;
            r20.xyz = r20.xzw + -r17.www;
            r20.xyz = r16.yyy * r20.xyz + r17.www;
          } else {
            r21.xyz = r19.xyz * r13.xyz;
            r19.xyz = -r19.xyz * r13.xyz + r19.xyz;
            r19.xyz = r16.xxx * r19.xyz + r21.xyz;
            r19.xyz = max(float3(0.000300000014,0.000300000014,0.000300000014), r19.xyz);
            r16.x = dot(r19.xyz, r19.xyz);
            r16.x = rsqrt(r16.x);
            r19.xyz = r19.xyz * r16.xxx;
            r19.xyz = float3(1.05999994,1.05999994,1.05999994) * r19.xyz;
            r16.x = max(r13.y, r13.z);
            r16.x = max(r16.x, r13.x);
            r16.x = cb0[25].z * r16.x;
            r21.xyz = saturate(cb0[25].zzz * r13.xyz);
            r16.y = dot(r21.xyz, float3(0.212500006,0.715399981,0.0720999986));
            r17.zw = float2(-0.550000012,-0.000300000014) + r16.yy;
            r17.z = saturate(-1.87125754 * r17.z);
            r18.w = r17.z * -2 + 3;
            r17.z = r17.z * r17.z;
            r17.z = r18.w * r17.z;
            r21.xyz = -cb0[11].xyz + cb0[10].xyz;
            r21.xyz = r17.zzz * r21.xyz + cb0[11].xyz;
            r21.xyz = -cb0[9].xyz + r21.xyz;
            r21.xyz = r15.yyy * r21.xyz + cb0[9].xyz;
            r17.z = cb0[10].x + -cb0[9].x;
            r17.z = r15.y * r17.z + cb0[9].x;
            r16.x = log2(r16.x);
            r16.x = r21.y * r16.x;
            r16.x = exp2(r16.x);
            r16.x = min(1, r16.x);
            r18.w = r21.z + -r21.x;
            r16.x = r16.x * r18.w + r21.x;
            r21.xyw = r16.xxx * r19.xyz;
            r22.xyz = r19.xyz * r17.zzz;
            r22.xyz = float3(1.73199999,1.73199999,1.73199999) * r22.xyz;
            r16.x = dot(r19.xyz, r19.xyz);
            r16.x = sqrt(r16.x);
            r22.xyz = r22.xyz / r16.xxx;
            r16.x = dot(r19.xyz, float3(0.212500006,0.715399981,0.0720999986));
            r19.xyz = r22.xyz / r16.xxx;
            r19.xyz = max(r19.xyz, r21.xyw);
            r21.xyw = r19.xyz + r16.yyy;
            r21.xyz = min(r21.zzz, r21.xyw);
            r16.x = -1 + cb0[25].z;
            r16.x = max(0, r16.x);
            r16.x = 0.0158730168 * r16.x;
            r21.xyz = r21.xyz + -r19.xyz;
            r19.xyz = r16.xxx * r21.xyz + r19.xyz;
            r16.x = -0.000300000014 + r17.z;
            r16.x = 1 / r16.x;
            r16.x = saturate(r17.w * r16.x);
            r16.y = r16.x * -2 + 3;
            r16.x = r16.x * r16.x;
            r16.x = r16.y * r16.x;
            r16.x = rsqrt(r16.x);
            r16.x = 1 / r16.x;
            r19.xyz = r19.xyz + -r17.zzz;
            r20.xyz = r16.xxx * r19.xyz + r17.zzz;
          }
        } else {
          r16.x = dot(r13.xyz, float3(0.212500006,0.715399981,0.0720999986));
          r19.xyz = r16.xxx + -r13.xyz;
          r19.xyz = cb0[24].www * r19.xyz + r13.xyz;
          r19.xyz = cb0[24].xyz * r19.xyz;
          r16.x = cb0[25].y ? cb0[25].z : 1;
          r19.xyz = r19.xyz * r16.xxx;
          r20.xyz = cb0[26].xxx ? r19.xyz : r13.xyz;
        }
        if (cb0[26].y != 0) {
          r19.xyzw = t34.SampleBias(s9_s, r16.zw, -1).xyzw;
          r13.xyz = t34.SampleBias(s0_s, r16.zw, -1).xyz;
          r13.xyz = r13.xyz + -r19.xyz;
          r21.yzw = r19.www * r13.xyz + r19.xyz;
          r13.x = cmp(0 < r21.y);
          if (r13.x != 0) {
            r13.xyz = cb1[19].xyz + -r4.yzw;
            r16.x = dot(r13.xyz, r13.xyz);
            r16.x = rsqrt(r16.x);
            r13.xyz = r16.xxx * r13.xyz;
            r16.x = dot(r13.xyz, r3.xyz);
            r16.y = cmp(0.000000 != cb4[36].y);
            r19.xyz = cb1[33].xyz + r4.yzw;
            r22.xyz = -cb1[20].xyz * cb4[36].yyy + r19.xyz;
            r19.xyz = cb1[33].xyz + cb1[19].xyz;
            r19.xyz = cb1[22].www * cb1[20].xyz + r19.xyz;
            r23.w = dot(r19.xyz, cb1[20].xyz);
            r22.w = 1;
            r23.xyz = cb1[20].xyz;
            r17.z = dot(r22.xyzw, r23.xyzw);
            r17.w = cmp(0 >= r17.z);
            r19.xyz = r17.zzz * -cb1[20].xyz + r4.yzw;
            r19.xyz = r17.www ? r4.yzw : r19.xyz;
            r22.xyz = cb4[13].xyw * r19.yyy;
            r22.xyz = cb4[12].xyw * r19.xxx + r22.xyz;
            r22.xyz = cb4[14].xyw * r19.zzz + r22.xyz;
            r22.xyz = cb4[15].xyw + r22.xyz;
            r17.zw = r22.xy / r22.zz;
            r17.z = 1 + r17.z;
            r17.z = cb1[26].z * r17.z;
            r17.z = 0.5 * r17.z;
            r23.xy = cb1[26].zw + float2(-1,-1);
            r17.z = max(0, r17.z);
            r22.x = min(r17.z, r23.x);
            r17.z = 1 + -r17.w;
            r17.z = cb1[26].w * r17.z;
            r17.z = 0.5 * r17.z;
            r17.z = max(0, r17.z);
            r22.y = min(r17.z, r23.y);
            r23.xyz = r16.yyy ? r19.xyz : r4.yzw;
            r19.xyz = r16.yyy ? r22.xyz : v8.xyw;
            r17.zw = -cb1[26].xy + r19.xy;
            r17.zw = (uint2)r17.zw;
            r17.zw = (uint2)r17.zw >> asuint(cb3[25].xx);
            r16.y = mad((int)r17.w, asint(cb3[25].y), (int)r17.z);
            r16.y = mad((int)r16.y, asint(cb3[24].z), asint(cb3[24].y));
            r17.z = cb3[26].x * r19.z;
            r17.z = max(0, r17.z);
            r17.z = min(cb3[26].y, r17.z);
            r17.z = (uint)r17.z;
            r17.z = mad((int)r17.z, asint(cb3[24].z), asint(cb3[24].x));
            r23.w = 1;
            r19.xyz = float3(0,0,0);
            r22.xyz = float3(0,0,0);
            r24.xyz = float3(0,0,0);
            r25.xyz = float3(0,0,0);
            r26.xyz = float3(0,0,0);
            r27.xyz = float3(0,0,0);
            r17.w = 0;
            r18.w = 0;
            r20.w = 0;
            while (true) {
              r22.w = cmp((uint)r20.w < asuint(cb3[24].z));
              r24.w = ~(int)r18.w;
              r22.w = r22.w ? r24.w : 0;
              if (r22.w == 0) break;
              r22.w = (int)r16.y + (int)r20.w;
              r22.w = t13[r22.w].val[0/4];
              r24.w = (int)r17.z + (int)r20.w;
              r24.w = t13[r24.w].val[0/4];
              r22.w = (int)r22.w & (int)r24.w;
              r24.w = (uint)r20.w << 5;
              r28.xyz = r19.xyz;
              r29.xyz = r22.xyz;
              r30.xyz = r24.xyz;
              r31.xyz = r25.xyz;
              r32.xyz = r26.xyz;
              r33.xyz = r27.xyz;
              r25.w = r17.w;
              r26.w = r18.w;
              r27.w = r22.w;
              while (true) {
                if (r27.w == 0) break;
                r28.w = firstbitlow((uint)r27.w);
                r28.w = (int)r24.w + (int)r28.w;
                r29.w = (int)r27.w + -1;
                r29.w = (int)r27.w & (int)r29.w;
                r28.w = (int)r28.w * 6;
                r34.x = dot(r23.xyzw, cb3[r28.w+1180].xyzw);
                r34.y = dot(r23.xyzw, cb3[r28.w+1181].xyzw);
                r34.z = dot(r23.xyzw, cb3[r28.w+1182].xyzw);
                r35.xyz = -cb3[r28.w+1183].xyz + r34.xyz;
                r35.xyz = saturate(cb3[r28.w+1185].xyz * r35.xyz);
                r34.xyz = cb3[r28.w+1184].xyz + -r34.xyz;
                r34.xyz = saturate(cb3[r28.w+1185].xyz * r34.xyz);
                r30.w = min(r35.y, r35.z);
                r30.w = min(r35.x, r30.w);
                r31.w = min(r34.y, r34.z);
                r31.w = min(r34.x, r31.w);
                r30.w = min(r31.w, r30.w);
                r31.w = cmp(r30.w == 0.000000);
                if (r31.w != 0) {
                  r27.w = r29.w;
                  continue;
                }
                r31.w = r30.w * r30.w;
                r30.w = r30.w * -2 + 3;
                r30.w = r31.w * r30.w;
                r31.w = 1 + -r25.w;
                r32.w = r31.w * r30.w;
                r30.w = r30.w * r31.w + r25.w;
                r28.w = 9 * asint(cb3[r28.w+1185].w);
                r34.x = dot(r23.xyzw, cb2[r28.w+0].xyzw);
                r34.y = dot(r23.xyzw, cb2[r28.w+1].xyzw);
                r31.w = dot(r23.xyzw, cb2[r28.w+2].xyzw);
                r34.z = 0.166666672 * r31.w;
                r34.xyz = max(cb2[r28.w+3].xyz, r34.xyz);
                r34.xyz = min(cb2[r28.w+4].xyz, r34.xyz);
                r34.w = 6 * r34.z;
                r34.xyz = r34.xyw * cb2[r28.w+6].xyz + cb2[r28.w+7].xyz;
                r34.w = 0.166666672 * r34.z;
                r35.xyz = t16.SampleLevel(s1_s, r34.xyw, 0).xyz;
                r35.xyz = cb2[r28.w+5].xyz * r35.xyz;
                r36.xyz = float3(0,0,0.166666672) + r34.xyw;
                r36.xyz = t16.SampleLevel(s1_s, r36.xyz, 0).xyz;
                r36.xyz = cb2[r28.w+5].xyz * r36.xyz;
                r37.xyz = float3(0,0,0.333333343) + r34.xyw;
                r37.xyz = t16.SampleLevel(s1_s, r37.xyz, 0).xyz;
                r37.xyz = cb2[r28.w+5].xyz * r37.xyz;
                r38.xyz = float3(0,0,0.5) + r34.xyw;
                r38.xyz = t16.SampleLevel(s1_s, r38.xyz, 0).xyz;
                r38.xyz = cb2[r28.w+5].xyz * r38.xyz;
                r39.xyz = float3(0,0,0.666666687) + r34.xyw;
                r39.xyz = t16.SampleLevel(s1_s, r39.xyz, 0).xyz;
                r39.xyz = cb2[r28.w+5].xyz * r39.xyz;
                r34.xyz = float3(0,0,0.833333313) + r34.xyw;
                r34.xyz = t16.SampleLevel(s1_s, r34.xyz, 0).xyz;
                r34.xyz = cb2[r28.w+5].xyz * r34.xyz;
                r35.xyz = r32.www * r35.xyz + r28.xyz;
                r36.xyz = r32.www * r36.xyz + r29.xyz;
                r37.xyz = r32.www * r37.xyz + r30.xyz;
                r38.xyz = r32.www * r38.xyz + r31.xyz;
                r39.xyz = r32.www * r39.xyz + r32.xyz;
                r34.xyz = r32.www * r34.xyz + r33.xyz;
                r28.w = cmp(0.99000001 < r30.w);
                if (r28.w != 0) {
                  r28.xyz = r35.xyz;
                  r29.xyz = r36.xyz;
                  r30.xyz = r37.xyz;
                  r31.xyz = r38.xyz;
                  r32.xyz = r39.xyz;
                  r33.xyz = r34.xyz;
                  r25.w = r30.w;
                  r26.w = -1;
                  break;
                }
                r28.xyz = r35.xyz;
                r29.xyz = r36.xyz;
                r30.xyz = r37.xyz;
                r31.xyz = r38.xyz;
                r32.xyz = r39.xyz;
                r33.xyz = r34.xyz;
                r25.w = r30.w;
                r27.w = r29.w;
              }
              r19.xyz = r28.xyz;
              r22.xyz = r29.xyz;
              r24.xyz = r30.xyz;
              r25.xyz = r31.xyz;
              r26.xyz = r32.xyz;
              r27.xyz = r33.xyz;
              r17.w = r25.w;
              r18.w = r26.w;
              r20.w = (int)r20.w + 1;
            }
            r16.y = cmp(r17.w < 0.99000001);
            if (r16.y != 0) {
              r16.y = 1 + -r17.w;
              r23.x = dot(cb3[7].xw, float2(1,1));
              r23.y = dot(cb3[8].xw, float2(1,1));
              r23.z = dot(cb3[9].xw, float2(1,1));
              r19.xyz = r16.yyy * r23.xyz + r19.xyz;
              r23.x = dot(cb3[7].yw, float2(1,1));
              r23.y = dot(cb3[8].yw, float2(1,1));
              r23.z = dot(cb3[9].yw, float2(1,1));
              r22.xyz = r16.yyy * r23.xyz + r22.xyz;
              r23.x = dot(cb3[7].zw, float2(1,1));
              r23.y = dot(cb3[8].zw, float2(1,1));
              r23.z = dot(cb3[9].zw, float2(1,1));
              r24.xyz = r16.yyy * r23.xyz + r24.xyz;
              r23.x = dot(cb3[7].xw, float2(-1,1));
              r23.y = dot(cb3[8].xw, float2(-1,1));
              r23.z = dot(cb3[9].xw, float2(-1,1));
              r25.xyz = r16.yyy * r23.xyz + r25.xyz;
              r23.x = dot(cb3[7].yw, float2(-1,1));
              r23.y = dot(cb3[8].yw, float2(-1,1));
              r23.z = dot(cb3[9].yw, float2(-1,1));
              r26.xyz = r16.yyy * r23.xyz + r26.xyz;
              r23.x = dot(cb3[7].zw, float2(-1,1));
              r23.y = dot(cb3[8].zw, float2(-1,1));
              r23.z = dot(cb3[9].zw, float2(-1,1));
              r27.xyz = r16.yyy * r23.xyz + r27.xyz;
            }
            r23.xyz = r14.yyy * r9.xyz;
            r23.xyz = r14.xxx * v6.xyz + r23.xyz;
            r23.xyz = r14.zzz * r3.xyz + r23.xyz;
            r16.y = dot(r23.xyz, r23.xyz);
            r16.y = rsqrt(r16.y);
            r17.zw = r23.xy * r16.yy;
            r16.y = dot(r19.xyz, float3(0.212500006,0.715399981,0.0720999986));
            r19.xy = max(float2(0,0), r17.zw);
            r18.w = dot(r25.xyz, float3(0.212500006,0.715399981,0.0720999986));
            r17.zw = max(float2(0,0), -r17.zw);
            r18.w = r18.w * r17.z;
            r23.x = r16.y * r19.x + -r18.w;
            r16.y = dot(r22.xyz, float3(0.212500006,0.715399981,0.0720999986));
            r18.w = dot(r26.xyz, float3(0.212500006,0.715399981,0.0720999986));
            r17.w = r18.w * r17.w;
            r23.y = r16.y * r19.y + -r17.w;
            r16.y = dot(r24.xyz, float3(0.212500006,0.715399981,0.0720999986));
            r17.w = dot(r27.xyz, float3(0.212500006,0.715399981,0.0720999986));
            r17.z = r17.w * r17.z;
            r23.z = r16.y * r19.y + -r17.z;
            r19.xyz = r13.xyz * float3(0.00100000005,0.00100000005,0.00100000005) + r23.xyz;
            r16.y = dot(cb3[20].xyz, float3(0.212500006,0.715399981,0.0720999986));
            r19.xyz = cb3[19].xyz * r16.yyy + r19.xyz;
            r16.y = dot(r19.xyz, r19.xyz);
            r16.y = rsqrt(r16.y);
            r19.xyz = r19.xyz * r16.yyy;
            r13.x = dot(r13.xyz, r19.xyz);
            r13.x = r16.x + r13.x;
            r21.x = r21.z + r13.x;
            r13.xyz = t31.SampleLevel(s9_s, r21.xw, 0).xyz;
            if (cb0[27].y != 0) {
              r19.xyz = t31.SampleBias(s10_s, r21.xw, -1).xyz;
            } else {
              r19.xyz = t31.SampleBias(s0_s, r21.xw, -1).xyz;
            }
            r19.xyz = r19.xyz + -r13.xyz;
            r13.xyz = r19.www * r19.xyz + r13.xyz;
            r19.xyz = saturate(cb0[25].www * r13.xyz);
            r16.x = dot(r19.xyz, float3(0.212500006,0.715399981,0.0720999986));
            r16.y = max(r13.y, r13.z);
            r16.y = max(r16.y, r13.x);
            r16.y = cb0[25].w * r16.y;
            r16.y = log2(r16.y);
            r16.y = cb0[12].y * r16.y;
            r16.y = exp2(r16.y);
            r16.y = min(1, r16.y);
            r17.z = cb0[12].z + -cb0[12].x;
            r16.y = r16.y * r17.z + cb0[12].x;
            r13.xyz = max(float3(0.000300000014,0.000300000014,0.000300000014), r13.xyz);
            r17.z = dot(r13.xyz, r13.xyz);
            r17.z = rsqrt(r17.z);
            r13.xyz = r17.zzz * r13.xyz;
            r13.xyz = float3(1.05999994,1.05999994,1.05999994) * r13.xyz;
            r19.xyz = r16.yyy * r13.xyz;
            r21.xzw = cb0[12].xxx * r13.xyz;
            r21.xzw = float3(1.73199999,1.73199999,1.73199999) * r21.xzw;
            r16.y = dot(r13.xyz, r13.xyz);
            r16.y = sqrt(r16.y);
            r21.xzw = r21.xzw / r16.yyy;
            r13.x = dot(r13.xyz, float3(0.212500006,0.715399981,0.0720999986));
            r13.xyz = r21.xzw / r13.xxx;
            r13.xyz = max(r13.xyz, r19.xyz);
            r19.xyz = r16.xxx * cb0[25].www + r13.xyz;
            r19.xyz = min(cb0[12].zzz, r19.xyz);
            r16.y = -1 + cb0[25].w;
            r16.y = max(0, r16.y);
            r16.y = r16.y / cb0[11].w;
            r19.xyz = r19.xyz + -r13.xyz;
            r13.xyz = r16.yyy * r19.xyz + r13.xyz;
            r16.y = -0.000300000014 + cb0[12].x;
            r16.x = -0.000300000014 + r16.x;
            r16.y = 1 / r16.y;
            r16.x = saturate(r16.x * r16.y);
            r16.y = r16.x * -2 + 3;
            r16.x = r16.x * r16.x;
            r16.x = r16.y * r16.x;
            r16.x = rsqrt(r16.x);
            r16.x = 1 / r16.x;
            r13.xyz = -cb0[12].xxx + r13.xyz;
            r13.xyz = r16.xxx * r13.xyz + cb0[12].xxx;
            r13.xyz = r13.xyz + -r20.xyz;
            r13.xyz = r21.yyy * r13.xyz + r20.xyz;
            r16.x = 1 + -r21.y;
            r15.y = r16.x * r15.y;
          } else {
            r13.xyz = r20.xyz;
          }
        } else {
          r13.xyz = r20.xyz;
        }
        r16.x = cmp(0 < cb0[22].w);
        if (r16.x != 0) {
          r13.w = -0.0784313753 + r13.w;
          r13.w = saturate(1.08510637 * r13.w);
          r16.x = t23.SampleBias(s0_s, r16.zw, -1).x;
          r16.x = min(cb0[23].z, r16.x);
          r16.x = 1 + -r16.x;
          r16.y = cb0[22].w * r16.x;
          r16.x = r16.y * -0.5 + r16.x;
          r16.y = -0.5 + r6.z;
          r16.y = r16.y + r16.y;
          r17.z = -1 + cb0[22].w;
          r17.z = saturate(-6.66666794 * r17.z);
          r17.w = r17.z * -2 + 3;
          r17.z = r17.z * r17.z;
          r17.z = r17.w * r17.z;
          r16.y = r17.z * r16.y;
          r16.y = saturate(cb0[22].w * r16.y + cb0[22].w);
          r17.z = cmp(0 < cb0[23].y);
          r17.z = r17.z ? 0.5 : 0.25;
          r17.z = cb0[23].y * r17.z + 0.5;
          r17.z = 0.5 * r17.z;
          r17.z = cb0[26].z ? 0.5 : r17.z;
          r17.w = cb0[23].x * cb0[23].x;
          r13.w = log2(r13.w);
          r13.w = r17.w * r13.w;
          r13.w = exp2(r13.w);
          r13.w = r16.y + -r13.w;
          r13.w = max(0, r13.w);
          r17.w = r13.w + r13.w;
          r17.w = min(1, r17.w);
          r17.w = cb0[23].y * r16.y + r17.w;
          r17.w = -r17.w + r16.x;
          r17.w = saturate(10 * r17.w);
          r18.w = r17.w * -2 + 3;
          r17.w = r17.w * r17.w;
          r17.w = r18.w * r17.w;
          r18.w = r16.x * 0.400000006 + -0.5;
          r18.w = r16.y * r18.w + 0.699999988;
          r19.xyz = -r18.www + r13.xyz;
          r19.xyz = r17.www * r19.xyz + r18.www;
          r19.xyz = cb0[26].zzz ? r19.xyz : r13.xyz;
          r17.w = 1 + r17.z;
          r13.w = saturate(r13.w * r17.w + -r17.z);
          r13.w = r16.x + -r13.w;
          r13.w = saturate(10 * r13.w);
          r17.z = r13.w * -2 + 3;
          r13.w = r13.w * r13.w;
          r13.w = r17.z * r13.w;
          r17.x = r17.x * r13.w;
          r17.zw = float2(0.300000012,2.85714293) * r16.yy;
          r21.xyz = r19.xyz * r16.xxx + -r19.xyz;
          r13.xyz = r17.zzz * r21.xyz + r19.xyz;
          r13.w = asint(cb0[26].w) | asint(cb0[26].x);
          r17.z = min(1, r17.w);
          r17.w = r17.z * -2 + 3;
          r17.z = r17.z * r17.z;
          r17.z = r17.w * r17.z;
          r16.x = cmp(r17.z >= r16.x);
          r16.x = r16.x ? 1.000000 : 0;
          r17.z = 0.800000012 + -r15.x;
          r16.x = r16.x * r17.z + r15.x;
          r15.x = r13.w ? r15.x : r16.x;
        } else {
          r16.y = cb0[22].w;
        }
        r17.zw = float2(-0.5,-0.5) + r16.zw;
        r19.xy = -r17.zw + r14.xy;
        r14.xy = r17.xx * r19.xy + r17.zw;
        if (r11.w != 0) {
          r11.w = saturate(2.22222233 * r10.w);
          r13.w = rsqrt(r11.w);
          r13.w = 1 / r13.w;
          r16.x = r13.w + -r16.w;
          r17.z = cmp(r13.w < r16.w);
          if (r17.z != 0) {
            r17.z = log2(abs(r16.x));
            r17.z = 0.200000003 * r17.z;
            r17.z = exp2(r17.z);
            r17.z = 1 + -r17.z;
            r17.x = r17.x * r17.z;
            r13.xyz = float3(0,0,0);
          } else {
            r10.w = saturate(1.11111116 * r10.w);
            r13.w = r16.x + r13.w;
            r13.w = abs(r16.x) * 0.300000012 + r13.w;
            r17.z = log2(r16.w);
            r17.z = 0.200000003 * r17.z;
            r17.z = exp2(r17.z);
            r13.w = -1 + r13.w;
            r19.y = r17.z * r13.w + 1;
            r13.w = cmp(r19.y < 1);
            if (r13.w != 0) {
              r19.x = r16.z;
              r19.xy = saturate(r19.xy);
              r19.xyzw = t30.SampleBias(s0_s, r19.xy, -1).xyzw;
              r13.w = dot(r19.xyz, float3(0.298999995,0.587000012,0.114));
              r17.z = 0.300000012 + -r13.w;
              r13.w = r17.z * 0.800000012 + r13.w;
              r16.x = log2(abs(r16.x));
              r17.zw = float2(0.200000003,0.100000001) * r16.xx;
              r17.zw = exp2(r17.zw);
              r16.x = saturate(12.75 * r19.w);
              r18.w = 1 + -r17.w;
              r11.w = r11.w * r18.w + r17.w;
              r19.xyz = r13.xyz * r11.www;
              r21.xyz = r13.www * r17.zzz + -r19.xyz;
              r13.xyz = r16.xxx * r21.xyz + r19.xyz;
              r17.x = max(r17.x, r16.x);
              r19.xyz = float3(0,0,1) + -r14.xyz;
              r14.xyz = r16.xxx * r19.xyz + r14.xyz;
              r15.y = r16.x * -r15.y + r15.y;
              r13.w = 0.800000012 + -r15.x;
              r15.x = r16.x * r13.w + r15.x;
              r13.w = 1 + -r17.y;
              r17.y = r16.x * r13.w + r17.y;
              r11.w = r11.w + -r12.z;
              r12.z = r16.x * r11.w + r12.z;
            } else {
              r14.w = r14.z;
              r14.xyz = r14.xyw;
            }
            r11.w = cmp(r10.w >= 0.5);
            r11.w = r11.w ? 1.000000 : 0;
            r10.w = -1 + r10.w;
            r10.w = -2 * r10.w;
            r10.w = min(1, r10.w);
            r13.w = r10.w * -2 + 3;
            r10.w = r10.w * r10.w;
            r10.w = r13.w * r10.w;
            r10.w = log2(r10.w);
            r10.w = 20 * r10.w;
            r10.w = exp2(r10.w);
            r10.w = r11.w * r10.w;
            r19.xyz = r13.xyz * r10.www;
            r13.xyz = r19.xyz * float3(9,9,9) + r13.xyz;
          }
        }
        if (r9.w == 0) {
          r19.xyz = r20.xyz * r15.www;
          r19.xyz = r19.xyz + r19.xyz;
          r19.xyz = cb0[27].www ? r19.xyz : float3(0,0,0);
          r9.w = cb4[39].z + -cb0[28].x;
          r10.w = cmp(r9.w < 2);
          r9.w = -r9.w * 0.5 + 1;
          r11.w = r9.w * r9.w;
          r11.w = r11.w * r11.w;
          r20.xyz = r9.www * r11.www + r13.xyz;
          r13.xyz = r10.www ? r20.xyz : r13.xyz;
          r15.z = r17.y * r17.x;
          r17.yzw = r13.xyz + r13.xyz;
          r17.yzw = cb0[13].zzz ? r17.yzw : r13.xyz;
          r16.xz = float2(8,8) * r16.zw;
          r16.xz = floor(r16.xz);
          r9.w = r16.x + r16.z;
          r9.w = 0.5 * r9.w;
          r9.w = frac(r9.w);
          r10.w = dot(r17.yzw, float3(0.212500006,0.715399981,0.0720999986));
          r10.w = saturate(0.600000024 * r10.w);
          r10.w = 0.200000003 + r10.w;
          r9.w = r9.w * 0.200200006 + r10.w;
          r9.w = r9.w * r2.w;
          r20.z = 0.899999976 * r15.z;
          r16.xzw = cb0[13].xxx ? r9.www : r17.yzw;
          r17.yzw = cb0[13].xxx ? float3(0,0,1) : r14.xyz;
          r20.xy = float2(0.800000012,0);
          r20.xyz = cb0[13].xxx ? r20.xyz : r15.xyz;
          r21.xyz = cb0[13].xxx ? float3(0,0,0) : r18.xyz;
          r13.xyz = saturate(r8.www ? r16.xzw : r13.xyz);
          r14.xyz = r8.www ? r17.yzw : r14.xyz;
          r16.xzw = r8.www ? r21.xyz : r18.xyz;
          r15.xyz = r8.www ? r20.xyz : r15.xyz;
          r13.xyz = r13.xyz + -r5.xyz;
          r5.xyz = r15.zzz * r13.xyz + r5.xyz;
          r13.xyz = r14.xyz + -r7.xyz;
          r13.xyz = r15.zzz * r13.xyz + r7.xyz;
          r8.w = dot(r13.xyz, r13.xyz);
          r8.w = rsqrt(r8.w);
          r7.xyz = r13.xyz * r8.www;
          r8.w = r15.y + -r3.w;
          r3.w = r15.z * r8.w + r3.w;
          r13.xy = r15.xx + -r0.xy;
          r0.xy = r15.zz * r13.xy + r0.xy;
          r8.w = r12.z + -r2.w;
          r2.w = r17.x * r8.w + r2.w;
          r13.xyz = r16.xzw + -r10.xyz;
          r10.xyz = r15.zzz * r13.xyz + r10.xyz;
          r8.w = 0.0399999991 + -r1.y;
          r1.y = r15.z * r8.w + r1.y;
          r6.x = r15.z * -r6.x + r6.x;
          r13.xyz = r19.xyz + -r12.xyw;
          r12.xyw = r15.zzz * r13.xyz + r12.xyw;
          r5.w = max(r15.z, r5.w);
          r8.w = 1 + -r16.y;
          r8.w = r15.z * r8.w;
          r6.w = max(r8.w, r6.w);
          r0.z = cb4[3].y ? r15.z : r0.z;
        } else {
          r0.z = r7.w;
        }
      } else {
        r0.z = r7.w;
      }
    }
    r7.w = asint(cb0[0].y) | asint(cb0[28].y);
    if (r7.w != 0) {
      r7.w = cb4[3].y ? 0 : r0.z;
      r13.xy = cmp(cb0[29].xy == float2(0,0));
      r8.w = (int)r13.y | (int)r13.x;
      r9.w = cmp(r6.y == 0.000000);
      r8.w = (int)r8.w | (int)r9.w;
      if (r8.w == 0) {
        r8.w = cmp(asint(cb0[12].w) == 3);
        r13.xy = float2(-0.5,-0.5) + v3.wz;
        r13.xy = -cb0[28].wz + r13.xy;
        r13.xy = abs(cb0[29].xx) * r13.xy;
        r9.w = 6.28318024 * cb0[29].z;
        sincos(r9.w, r14.x, r15.x);
        r13.zw = r14.xx * r13.xy;
        r16.x = r13.y * r15.x + -r13.z;
        r16.y = r13.x * r15.x + r13.w;
        r13.xy = float2(0.5,0.5) + r16.xy;
        r16.xyzw = saturate(r13.xyxy);
        r13.xy = cmp(r13.xy != r16.xy);
        r9.w = (int)r13.y | (int)r13.x;
        r10.w = cmp(asint(cb0[13].x) == 0);
        r10.w = r8.w ? r10.w : 0;
        r11.w = cb4[39].z + -cb0[13].y;
        r10.w = r10.w ? r11.w : 0.899999976;
        r11.w = cmp(r10.w < 0.899999976);
        r13.xyzw = t35.SampleBias(s0_s, r16.zw, -1).xyzw;
        r12.z = saturate(12.75 * r13.w);
        r17.x = r12.z * r6.y;
        t35.GetDimensions(0, fDest.x, fDest.y, fDest.z);
        r14.yz = fDest.xy;
        r14.yz = float2(1,1) / r14.yz;
        r15.yz = float2(1,1) + -r14.yz;
        r14.yz = max(r16.zw, r14.yz);
        r14.yz = min(r14.yz, r15.yz);
        r14.y = t35.CalculateLevelOfDetail(s0_s, r14.yz);
        r14.z = saturate(-3 + r14.y);
        r14.z = 1 + -r14.z;
        r14.w = cmp(0 < r14.z);
        if (r14.w != 0) {
          r15.yz = float2(-0.5,-0.5) + r16.zw;
          r18.xyz = cb1[21].yzx * cb1[20].zxy;
          r18.xyz = cb1[20].yzx * cb1[21].zxy + -r18.xyz;
          r14.w = dot(r18.xyz, -r11.xyz);
          r15.w = dot(cb1[21].xyz, r11.xyz);
          r16.x = r15.w * r14.x;
          r16.x = r14.w * r15.x + -r16.x;
          r15.x = r15.w * r15.x;
          r16.y = r14.w * r14.x + r15.x;
          r14.xw = -r16.xy * float2(0.00999999978,0.00999999978) + r15.yz;
          r14.xw = saturate(float2(0.5,0.5) + r14.xw);
          r14.x = t35.SampleBias(s0_s, r14.xw, 1).w;
          r14.x = saturate(12.75 * r14.x);
          r14.x = r14.x * r6.y;
          r14.x = 0.699999988 * r14.x;
          r14.x = max(r17.x, r14.x);
          r12.z = -r12.z * r6.y + r14.x;
          r17.z = r14.z * r12.z + r17.x;
          r17.xy = r17.zx;
        } else {
          r17.y = 1;
        }
        r12.z = cmp(0 >= r17.x);
        r14.x = ~(int)r11.w;
        r12.z = r12.z ? r14.x : 0;
        r9.w = (int)r9.w | (int)r12.z;
        r15.xyzw = t37.SampleBias(s0_s, r16.zw, -1).zxyw;
        r12.z = r15.y + r15.z;
        r18.x = -1.00392163 + r12.z;
        r18.y = r15.y + -r15.z;
        r12.z = 1 + -abs(r18.x);
        r18.z = r12.z + -abs(r18.y);
        r12.z = dot(r18.xyz, r18.xyz);
        r12.z = rsqrt(r12.z);
        r18.xyz = r18.xyz * r12.zzz;
        r12.z = max(3, r14.y);
        r14.xy = t20.SampleLevel(s0_s, r1.zw, r12.z).xy;
        r14.z = r14.x + r14.y;
        r19.x = -1.00392163 + r14.z;
        r19.y = r14.x + -r14.y;
        r14.x = 1 + -abs(r19.x);
        r19.z = r14.x + -abs(r19.y);
        r14.x = dot(r19.xyz, r19.xyz);
        r14.x = rsqrt(r14.x);
        r14.xyz = r19.xyz * r14.xxx;
        r18.w = -r18.y;
        r18.xyz = r18.xwz * r17.xxx;
        r14.w = -r14.y;
        r14.xyz = r18.xyz * float3(2,2,2) + r14.xwz;
        r14.w = dot(r14.xyz, r14.xyz);
        r14.w = rsqrt(r14.w);
        r14.xyz = r14.xyz * r14.www;
        r12.z = t21.SampleLevel(s0_s, r1.zw, r12.z).x;
        r12.z = log2(r12.z);
        r12.z = 0.75 * r12.z;
        r12.z = exp2(r12.z);
        r16.x = r17.y * 0.5 + 0.5;
        r12.z = min(r16.x, r12.z);
        r15.y = cb0[33].x ? 1 : 0;
        if (cb0[34].x != 0) {
          r16.x = t39.SampleBias(s0_s, r16.zw, -1).w;
          r16.x = 1 + -r16.x;
          r16.y = cmp(0 != r16.x);
          if (r16.y != 0) {
            r16.y = cb4[2].x ? 2.5 : 1.75;
            r16.y = cb0[34].z * r16.y;
            r18.xyz = cb1[19].xyz + -r4.yzw;
            r17.z = dot(r18.xyz, r18.xyz);
            r17.z = rsqrt(r17.z);
            r18.xyz = r18.xyz * r17.zzz;
            r17.zw = r16.zw * r16.yy;
            r19.xy = float2(0.5,0.5) + r16.zw;
            r19.xy = r19.xy * r16.yy;
            r19.zw = ddx_coarse(r17.zw);
            r20.xy = ddy_coarse(r17.zw);
            r19.zw = max(r20.xy, r19.zw);
            r16.y = min(r19.z, r19.w);
            r16.y = saturate(-r16.y * 40 + 1);
            r20.xyz = t38.Sample(s9_s, r17.zw).xyw;
            r17.z = r20.x + r20.y;
            r21.x = -1.00392163 + r17.z;
            r21.y = r20.x + -r20.y;
            r17.z = 1 + -abs(r21.x);
            r21.z = r17.z + -abs(r21.y);
            r17.z = dot(r21.xyz, r21.xyz);
            r17.z = rsqrt(r17.z);
            r20.xyw = r21.xyz * r17.zzz;
            r20.xyw = r20.xyw * r20.www;
            r21.xyz = r20.yyy * r9.xyz;
            r21.xyz = r20.xxx * v6.xyz + r21.xyz;
            r21.xyz = r20.www * r3.xyz + r21.xyz;
            r17.z = dot(r21.xyz, r21.xyz);
            r17.z = rsqrt(r17.z);
            r21.xyz = r21.xyz * r17.zzz;
            r17.z = dot(r18.xyz, r21.xyz);
            r17.z = r17.z + r17.z;
            r21.xyz = r21.xyz * -r17.zzz + r18.xyz;
            r21.xyz = float3(12,12,12) * r21.xyz;
            r21.xyz = sin(r21.xyz);
            r22.xyz = max(float3(0,0,0), -r21.xyz);
            r17.z = dot(r22.xyz, float3(0.212500006,0.715399981,0.0720999986));
            r17.z = r17.z * r17.z;
            r22.xyz = saturate(float3(0.149999976,0.149999976,0.149999976) + -r21.xyz);
            r17.w = dot(r22.xyz, float3(0.212500006,0.715399981,0.0720999986));
            r17.w = 0.25 * r17.w;
            r17.z = r17.z * r17.z + r17.w;
            r21.xyz = float3(-0.99000001,-0.99000001,-0.99000001) + r21.xyz;
            r21.xyz = max(float3(0,0,0), r21.xyz);
            r21.xyz = float3(100.000099,100.000099,100.000099) * r21.xyz;
            r22.xyz = r21.yzx * r21.yzx;
            r21.xyz = r22.xyz * r22.xyz + r21.xyz;
            r21.xyz = r21.xyz * float3(3,3,3) + r17.zzz;
            r21.xyz = r21.xyz * r20.zzz;
            r16.y = r16.y * r16.x;
            r16.y = 0.0399999991 * r16.y;
            r17.zw = r20.xy * r16.yy + r14.xy;
            r19.xyz = t38.SampleLevel(s2_s, r19.xy, 0).xyw;
            r18.w = r19.x + r19.y;
            r20.x = -1.00392163 + r18.w;
            r20.y = r19.x + -r19.y;
            r18.w = 1 + -abs(r20.x);
            r20.z = r18.w + -abs(r20.y);
            r18.w = dot(r20.xyz, r20.xyz);
            r18.w = rsqrt(r18.w);
            r19.xyw = r20.xyz * r18.www;
            r20.xyz = r19.yyy * r9.xyz;
            r20.xyz = r19.xxx * v6.xyz + r20.xyz;
            r20.xyz = r19.www * r3.xyz + r20.xyz;
            r18.w = dot(r20.xyz, r20.xyz);
            r18.w = rsqrt(r18.w);
            r20.xyz = r20.xyz * r18.www;
            r18.w = dot(r18.xyz, r20.xyz);
            r18.w = r18.w + r18.w;
            r18.xyz = r20.xyz * -r18.www + r18.xyz;
            r18.xyz = float3(12,12,12) * r18.xyz;
            r18.xyz = sin(r18.xyz);
            r20.xyz = max(float3(0,0,0), -r18.xyz);
            r18.w = dot(r20.xyz, float3(0.212500006,0.715399981,0.0720999986));
            r18.w = r18.w * r18.w;
            r20.xyz = saturate(float3(0.149999976,0.149999976,0.149999976) + -r18.xyz);
            r19.w = dot(r20.xyz, float3(0.212500006,0.715399981,0.0720999986));
            r19.w = 0.25 * r19.w;
            r18.w = r18.w * r18.w + r19.w;
            r18.xyz = float3(-0.99000001,-0.99000001,-0.99000001) + r18.xyz;
            r18.xyz = max(float3(0,0,0), r18.xyz);
            r18.xyz = float3(100.000099,100.000099,100.000099) * r18.xyz;
            r20.xyz = r18.yzx * r18.yzx;
            r18.xyz = r20.xyz * r20.xyz + r18.xyz;
            r18.xyz = r18.xyz * float3(3,3,3) + r18.www;
            r18.xyz = r18.xyz * r19.zzz;
            r18.xyz = max(r21.xyz, r18.xyz);
            r20.xyz = saturate(r13.xyz);
            r18.w = dot(r20.xyz, float3(0.212500006,0.715399981,0.0720999986));
            r19.w = max(r13.y, r13.z);
            r19.w = max(r19.w, r13.x);
            r19.w = log2(r19.w);
            r19.w = cb0[9].y * r19.w;
            r19.w = exp2(r19.w);
            r19.w = min(1, r19.w);
            r20.x = cb0[9].z + -cb0[9].x;
            r19.w = r19.w * r20.x + cb0[9].x;
            r20.xyz = max(float3(0.000300000014,0.000300000014,0.000300000014), r13.xyz);
            r20.w = dot(r20.xyz, r20.xyz);
            r20.w = rsqrt(r20.w);
            r20.xyz = r20.xyz * r20.www;
            r20.xyz = float3(1.05999994,1.05999994,1.05999994) * r20.xyz;
            r21.xyz = r20.xyz * r19.www;
            r22.xyz = cb0[9].xxx * r20.xyz;
            r22.xyz = float3(1.73199999,1.73199999,1.73199999) * r22.xyz;
            r19.w = dot(r20.xyz, r20.xyz);
            r19.w = sqrt(r19.w);
            r22.xyz = r22.xyz / r19.www;
            r19.w = dot(r20.xyz, float3(0.212500006,0.715399981,0.0720999986));
            r20.xyz = r22.xyz / r19.www;
            r20.xyz = max(r20.xyz, r21.xyz);
            r19.w = -0.000300000014 + cb0[9].x;
            r18.w = -0.000300000014 + r18.w;
            r19.w = 1 / r19.w;
            r18.w = saturate(r19.w * r18.w);
            r19.w = r18.w * -2 + 3;
            r18.w = r18.w * r18.w;
            r18.w = r19.w * r18.w;
            r18.w = rsqrt(r18.w);
            r18.w = 1 / r18.w;
            r20.xyz = -cb0[9].xxx + r20.xyz;
            r20.xyz = r18.www * r20.xyz + cb0[9].xxx;
            r20.xyz = cb0[32].xxx ? r20.xyz : r13.xyz;
            r20.xyz = cb0[32].www * r20.xyz;
            r18.xyz = r20.xyz * r18.xyz;
            r19.xy = r19.xy * r16.yy;
            r14.xy = r19.xy * r19.zz + r17.zw;
            r16.y = 0.5 * r16.x;
            r15.y = max(r16.y, r15.y);
            r18.xyz = r18.xyz * r16.xxx;
          } else {
            r18.xyz = r10.xyz;
          }
        } else {
          r18.xyz = r10.xyz;
        }
        if (cb0[32].x != 0) {
          r19.xyz = float3(-1,-1,-1) + cb0[31].xyz;
          r19.xyz = r15.yyy * r19.xyz + float3(1,1,1);
          r16.x = cb0[31].w * r15.y;
          if (cb0[32].y != 0) {
            r16.y = dot(r13.xyz, float3(0.212500006,0.715399981,0.0720999986));
            r20.xyz = r16.yyy + -r13.xyz;
            r20.xyz = r16.xxx * r20.xyz + r13.xyz;
            r20.xyz = saturate(r20.xyz * r19.xyz);
            r21.xyz = max(float3(0.000300000014,0.000300000014,0.000300000014), r20.xyz);
            r16.y = dot(r21.xyz, r21.xyz);
            r16.y = rsqrt(r16.y);
            r21.xyz = r21.xyz * r16.yyy;
            r21.xyz = float3(1.05999994,1.05999994,1.05999994) * r21.xyz;
            r16.y = max(r20.y, r20.z);
            r16.y = max(r20.x, r16.y);
            r16.y = cb0[32].z * r16.y;
            r20.xyz = saturate(cb0[32].zzz * r20.xyz);
            r17.z = dot(r20.xyz, float3(0.212500006,0.715399981,0.0720999986));
            r20.xy = float2(-0.550000012,-0.000300000014) + r17.zz;
            r17.w = saturate(-1.87125754 * r20.x);
            r18.w = r17.w * -2 + 3;
            r17.w = r17.w * r17.w;
            r17.w = r18.w * r17.w;
            r20.xzw = -cb0[11].xyz + cb0[10].xyz;
            r20.xzw = r17.www * r20.xzw + cb0[11].xyz;
            r20.xzw = -cb0[9].xyz + r20.xzw;
            r20.xzw = r15.yyy * r20.xzw + cb0[9].xyz;
            r17.w = cb0[10].x + -cb0[9].x;
            r17.w = r15.y * r17.w + cb0[9].x;
            r16.y = log2(r16.y);
            r16.y = r20.z * r16.y;
            r16.y = exp2(r16.y);
            r16.y = min(1, r16.y);
            r18.w = r20.w + -r20.x;
            r16.y = r16.y * r18.w + r20.x;
            r22.xyz = r16.yyy * r21.xyz;
            r23.xyz = r21.xyz * r17.www;
            r23.xyz = float3(1.73199999,1.73199999,1.73199999) * r23.xyz;
            r16.y = dot(r21.xyz, r21.xyz);
            r16.y = sqrt(r16.y);
            r23.xyz = r23.xyz / r16.yyy;
            r16.y = dot(r21.xyz, float3(0.212500006,0.715399981,0.0720999986));
            r21.xyz = r23.xyz / r16.yyy;
            r21.xyz = max(r21.xyz, r22.xyz);
            r22.xyz = r21.xyz + r17.zzz;
            r20.xzw = min(r22.xyz, r20.www);
            r16.y = -1 + cb0[32].z;
            r16.y = max(0, r16.y);
            r16.y = 0.0158730168 * r16.y;
            r20.xzw = r20.xzw + -r21.xyz;
            r20.xzw = r16.yyy * r20.xzw + r21.xyz;
            r16.y = -0.000300000014 + r17.w;
            r16.y = 1 / r16.y;
            r16.y = saturate(r20.y * r16.y);
            r17.z = r16.y * -2 + 3;
            r16.y = r16.y * r16.y;
            r16.y = r17.z * r16.y;
            r16.y = rsqrt(r16.y);
            r16.y = 1 / r16.y;
            r20.xyz = r20.xzw + -r17.www;
            r20.xyz = r16.yyy * r20.xyz + r17.www;
          } else {
            r21.xyz = r19.xyz * r13.xyz;
            r19.xyz = -r19.xyz * r13.xyz + r19.xyz;
            r19.xyz = r16.xxx * r19.xyz + r21.xyz;
            r19.xyz = max(float3(0.000300000014,0.000300000014,0.000300000014), r19.xyz);
            r16.x = dot(r19.xyz, r19.xyz);
            r16.x = rsqrt(r16.x);
            r19.xyz = r19.xyz * r16.xxx;
            r19.xyz = float3(1.05999994,1.05999994,1.05999994) * r19.xyz;
            r16.x = max(r13.y, r13.z);
            r16.x = max(r16.x, r13.x);
            r16.x = cb0[32].z * r16.x;
            r21.xyz = saturate(cb0[32].zzz * r13.xyz);
            r16.y = dot(r21.xyz, float3(0.212500006,0.715399981,0.0720999986));
            r17.zw = float2(-0.550000012,-0.000300000014) + r16.yy;
            r17.z = saturate(-1.87125754 * r17.z);
            r18.w = r17.z * -2 + 3;
            r17.z = r17.z * r17.z;
            r17.z = r18.w * r17.z;
            r21.xyz = -cb0[11].xyz + cb0[10].xyz;
            r21.xyz = r17.zzz * r21.xyz + cb0[11].xyz;
            r21.xyz = -cb0[9].xyz + r21.xyz;
            r21.xyz = r15.yyy * r21.xyz + cb0[9].xyz;
            r17.z = cb0[10].x + -cb0[9].x;
            r17.z = r15.y * r17.z + cb0[9].x;
            r16.x = log2(r16.x);
            r16.x = r21.y * r16.x;
            r16.x = exp2(r16.x);
            r16.x = min(1, r16.x);
            r18.w = r21.z + -r21.x;
            r16.x = r16.x * r18.w + r21.x;
            r21.xyw = r16.xxx * r19.xyz;
            r22.xyz = r19.xyz * r17.zzz;
            r22.xyz = float3(1.73199999,1.73199999,1.73199999) * r22.xyz;
            r16.x = dot(r19.xyz, r19.xyz);
            r16.x = sqrt(r16.x);
            r22.xyz = r22.xyz / r16.xxx;
            r16.x = dot(r19.xyz, float3(0.212500006,0.715399981,0.0720999986));
            r19.xyz = r22.xyz / r16.xxx;
            r19.xyz = max(r19.xyz, r21.xyw);
            r21.xyw = r19.xyz + r16.yyy;
            r21.xyz = min(r21.zzz, r21.xyw);
            r16.x = -1 + cb0[32].z;
            r16.x = max(0, r16.x);
            r16.x = 0.0158730168 * r16.x;
            r21.xyz = r21.xyz + -r19.xyz;
            r19.xyz = r16.xxx * r21.xyz + r19.xyz;
            r16.x = -0.000300000014 + r17.z;
            r16.x = 1 / r16.x;
            r16.x = saturate(r17.w * r16.x);
            r16.y = r16.x * -2 + 3;
            r16.x = r16.x * r16.x;
            r16.x = r16.y * r16.x;
            r16.x = rsqrt(r16.x);
            r16.x = 1 / r16.x;
            r19.xyz = r19.xyz + -r17.zzz;
            r20.xyz = r16.xxx * r19.xyz + r17.zzz;
          }
        } else {
          r16.x = dot(r13.xyz, float3(0.212500006,0.715399981,0.0720999986));
          r19.xyz = r16.xxx + -r13.xyz;
          r19.xyz = cb0[31].www * r19.xyz + r13.xyz;
          r19.xyz = cb0[31].xyz * r19.xyz;
          r16.x = cb0[32].y ? cb0[32].z : 1;
          r19.xyz = r19.xyz * r16.xxx;
          r20.xyz = cb0[33].xxx ? r19.xyz : r13.xyz;
        }
        if (cb0[33].y != 0) {
          r19.xyzw = t39.SampleBias(s9_s, r16.zw, -1).xyzw;
          r13.xyz = t39.SampleBias(s0_s, r16.zw, -1).xyz;
          r13.xyz = r13.xyz + -r19.xyz;
          r21.yzw = r19.www * r13.xyz + r19.xyz;
          r13.x = cmp(0 < r21.y);
          if (r13.x != 0) {
            r13.xyz = cb1[19].xyz + -r4.yzw;
            r16.x = dot(r13.xyz, r13.xyz);
            r16.x = rsqrt(r16.x);
            r13.xyz = r16.xxx * r13.xyz;
            r16.x = dot(r13.xyz, r3.xyz);
            r16.y = cmp(0.000000 != cb4[36].y);
            r19.xyz = cb1[33].xyz + r4.yzw;
            r22.xyz = -cb1[20].xyz * cb4[36].yyy + r19.xyz;
            r19.xyz = cb1[33].xyz + cb1[19].xyz;
            r19.xyz = cb1[22].www * cb1[20].xyz + r19.xyz;
            r23.w = dot(r19.xyz, cb1[20].xyz);
            r22.w = 1;
            r23.xyz = cb1[20].xyz;
            r17.z = dot(r22.xyzw, r23.xyzw);
            r17.w = cmp(0 >= r17.z);
            r19.xyz = r17.zzz * -cb1[20].xyz + r4.yzw;
            r19.xyz = r17.www ? r4.yzw : r19.xyz;
            r22.xyz = cb4[13].xyw * r19.yyy;
            r22.xyz = cb4[12].xyw * r19.xxx + r22.xyz;
            r22.xyz = cb4[14].xyw * r19.zzz + r22.xyz;
            r22.xyz = cb4[15].xyw + r22.xyz;
            r17.zw = r22.xy / r22.zz;
            r17.z = 1 + r17.z;
            r17.z = cb1[26].z * r17.z;
            r17.z = 0.5 * r17.z;
            r23.xy = cb1[26].zw + float2(-1,-1);
            r17.z = max(0, r17.z);
            r22.x = min(r17.z, r23.x);
            r17.z = 1 + -r17.w;
            r17.z = cb1[26].w * r17.z;
            r17.z = 0.5 * r17.z;
            r17.z = max(0, r17.z);
            r22.y = min(r17.z, r23.y);
            r23.xyz = r16.yyy ? r19.xyz : r4.yzw;
            r19.xyz = r16.yyy ? r22.xyz : v8.xyw;
            r17.zw = -cb1[26].xy + r19.xy;
            r17.zw = (uint2)r17.zw;
            r17.zw = (uint2)r17.zw >> asuint(cb3[25].xx);
            r16.y = mad((int)r17.w, asint(cb3[25].y), (int)r17.z);
            r16.y = mad((int)r16.y, asint(cb3[24].z), asint(cb3[24].y));
            r17.z = cb3[26].x * r19.z;
            r17.z = max(0, r17.z);
            r17.z = min(cb3[26].y, r17.z);
            r17.z = (uint)r17.z;
            r17.z = mad((int)r17.z, asint(cb3[24].z), asint(cb3[24].x));
            r23.w = 1;
            r19.xyz = float3(0,0,0);
            r22.xyz = float3(0,0,0);
            r24.xyz = float3(0,0,0);
            r25.xyz = float3(0,0,0);
            r26.xyz = float3(0,0,0);
            r27.xyz = float3(0,0,0);
            r17.w = 0;
            r18.w = 0;
            r20.w = 0;
            while (true) {
              r22.w = cmp((uint)r20.w < asuint(cb3[24].z));
              r24.w = ~(int)r18.w;
              r22.w = r22.w ? r24.w : 0;
              if (r22.w == 0) break;
              r22.w = (int)r16.y + (int)r20.w;
              r22.w = t13[r22.w].val[0/4];
              r24.w = (int)r17.z + (int)r20.w;
              r24.w = t13[r24.w].val[0/4];
              r22.w = (int)r22.w & (int)r24.w;
              r24.w = (uint)r20.w << 5;
              r28.xyz = r19.xyz;
              r29.xyz = r22.xyz;
              r30.xyz = r24.xyz;
              r31.xyz = r25.xyz;
              r32.xyz = r26.xyz;
              r33.xyz = r27.xyz;
              r25.w = r17.w;
              r26.w = r18.w;
              r27.w = r22.w;
              while (true) {
                if (r27.w == 0) break;
                r28.w = firstbitlow((uint)r27.w);
                r28.w = (int)r24.w + (int)r28.w;
                r29.w = (int)r27.w + -1;
                r29.w = (int)r27.w & (int)r29.w;
                r28.w = (int)r28.w * 6;
                r34.x = dot(r23.xyzw, cb3[r28.w+1180].xyzw);
                r34.y = dot(r23.xyzw, cb3[r28.w+1181].xyzw);
                r34.z = dot(r23.xyzw, cb3[r28.w+1182].xyzw);
                r35.xyz = -cb3[r28.w+1183].xyz + r34.xyz;
                r35.xyz = saturate(cb3[r28.w+1185].xyz * r35.xyz);
                r34.xyz = cb3[r28.w+1184].xyz + -r34.xyz;
                r34.xyz = saturate(cb3[r28.w+1185].xyz * r34.xyz);
                r30.w = min(r35.y, r35.z);
                r30.w = min(r35.x, r30.w);
                r31.w = min(r34.y, r34.z);
                r31.w = min(r34.x, r31.w);
                r30.w = min(r31.w, r30.w);
                r31.w = cmp(r30.w == 0.000000);
                if (r31.w != 0) {
                  r27.w = r29.w;
                  continue;
                }
                r31.w = r30.w * r30.w;
                r30.w = r30.w * -2 + 3;
                r30.w = r31.w * r30.w;
                r31.w = 1 + -r25.w;
                r32.w = r31.w * r30.w;
                r30.w = r30.w * r31.w + r25.w;
                r28.w = 9 * asint(cb3[r28.w+1185].w);
                r34.x = dot(r23.xyzw, cb2[r28.w+0].xyzw);
                r34.y = dot(r23.xyzw, cb2[r28.w+1].xyzw);
                r31.w = dot(r23.xyzw, cb2[r28.w+2].xyzw);
                r34.z = 0.166666672 * r31.w;
                r34.xyz = max(cb2[r28.w+3].xyz, r34.xyz);
                r34.xyz = min(cb2[r28.w+4].xyz, r34.xyz);
                r34.w = 6 * r34.z;
                r34.xyz = r34.xyw * cb2[r28.w+6].xyz + cb2[r28.w+7].xyz;
                r34.w = 0.166666672 * r34.z;
                r35.xyz = t16.SampleLevel(s1_s, r34.xyw, 0).xyz;
                r35.xyz = cb2[r28.w+5].xyz * r35.xyz;
                r36.xyz = float3(0,0,0.166666672) + r34.xyw;
                r36.xyz = t16.SampleLevel(s1_s, r36.xyz, 0).xyz;
                r36.xyz = cb2[r28.w+5].xyz * r36.xyz;
                r37.xyz = float3(0,0,0.333333343) + r34.xyw;
                r37.xyz = t16.SampleLevel(s1_s, r37.xyz, 0).xyz;
                r37.xyz = cb2[r28.w+5].xyz * r37.xyz;
                r38.xyz = float3(0,0,0.5) + r34.xyw;
                r38.xyz = t16.SampleLevel(s1_s, r38.xyz, 0).xyz;
                r38.xyz = cb2[r28.w+5].xyz * r38.xyz;
                r39.xyz = float3(0,0,0.666666687) + r34.xyw;
                r39.xyz = t16.SampleLevel(s1_s, r39.xyz, 0).xyz;
                r39.xyz = cb2[r28.w+5].xyz * r39.xyz;
                r34.xyz = float3(0,0,0.833333313) + r34.xyw;
                r34.xyz = t16.SampleLevel(s1_s, r34.xyz, 0).xyz;
                r34.xyz = cb2[r28.w+5].xyz * r34.xyz;
                r35.xyz = r32.www * r35.xyz + r28.xyz;
                r36.xyz = r32.www * r36.xyz + r29.xyz;
                r37.xyz = r32.www * r37.xyz + r30.xyz;
                r38.xyz = r32.www * r38.xyz + r31.xyz;
                r39.xyz = r32.www * r39.xyz + r32.xyz;
                r34.xyz = r32.www * r34.xyz + r33.xyz;
                r28.w = cmp(0.99000001 < r30.w);
                if (r28.w != 0) {
                  r28.xyz = r35.xyz;
                  r29.xyz = r36.xyz;
                  r30.xyz = r37.xyz;
                  r31.xyz = r38.xyz;
                  r32.xyz = r39.xyz;
                  r33.xyz = r34.xyz;
                  r25.w = r30.w;
                  r26.w = -1;
                  break;
                }
                r28.xyz = r35.xyz;
                r29.xyz = r36.xyz;
                r30.xyz = r37.xyz;
                r31.xyz = r38.xyz;
                r32.xyz = r39.xyz;
                r33.xyz = r34.xyz;
                r25.w = r30.w;
                r27.w = r29.w;
              }
              r19.xyz = r28.xyz;
              r22.xyz = r29.xyz;
              r24.xyz = r30.xyz;
              r25.xyz = r31.xyz;
              r26.xyz = r32.xyz;
              r27.xyz = r33.xyz;
              r17.w = r25.w;
              r18.w = r26.w;
              r20.w = (int)r20.w + 1;
            }
            r16.y = cmp(r17.w < 0.99000001);
            if (r16.y != 0) {
              r16.y = 1 + -r17.w;
              r23.x = dot(cb3[7].xw, float2(1,1));
              r23.y = dot(cb3[8].xw, float2(1,1));
              r23.z = dot(cb3[9].xw, float2(1,1));
              r19.xyz = r16.yyy * r23.xyz + r19.xyz;
              r23.x = dot(cb3[7].yw, float2(1,1));
              r23.y = dot(cb3[8].yw, float2(1,1));
              r23.z = dot(cb3[9].yw, float2(1,1));
              r22.xyz = r16.yyy * r23.xyz + r22.xyz;
              r23.x = dot(cb3[7].zw, float2(1,1));
              r23.y = dot(cb3[8].zw, float2(1,1));
              r23.z = dot(cb3[9].zw, float2(1,1));
              r24.xyz = r16.yyy * r23.xyz + r24.xyz;
              r23.x = dot(cb3[7].xw, float2(-1,1));
              r23.y = dot(cb3[8].xw, float2(-1,1));
              r23.z = dot(cb3[9].xw, float2(-1,1));
              r25.xyz = r16.yyy * r23.xyz + r25.xyz;
              r23.x = dot(cb3[7].yw, float2(-1,1));
              r23.y = dot(cb3[8].yw, float2(-1,1));
              r23.z = dot(cb3[9].yw, float2(-1,1));
              r26.xyz = r16.yyy * r23.xyz + r26.xyz;
              r23.x = dot(cb3[7].zw, float2(-1,1));
              r23.y = dot(cb3[8].zw, float2(-1,1));
              r23.z = dot(cb3[9].zw, float2(-1,1));
              r27.xyz = r16.yyy * r23.xyz + r27.xyz;
            }
            r23.xyz = r14.yyy * r9.xyz;
            r23.xyz = r14.xxx * v6.xyz + r23.xyz;
            r23.xyz = r14.zzz * r3.xyz + r23.xyz;
            r16.y = dot(r23.xyz, r23.xyz);
            r16.y = rsqrt(r16.y);
            r17.zw = r23.xy * r16.yy;
            r16.y = dot(r19.xyz, float3(0.212500006,0.715399981,0.0720999986));
            r19.xy = max(float2(0,0), r17.zw);
            r18.w = dot(r25.xyz, float3(0.212500006,0.715399981,0.0720999986));
            r17.zw = max(float2(0,0), -r17.zw);
            r18.w = r18.w * r17.z;
            r23.x = r16.y * r19.x + -r18.w;
            r16.y = dot(r22.xyz, float3(0.212500006,0.715399981,0.0720999986));
            r18.w = dot(r26.xyz, float3(0.212500006,0.715399981,0.0720999986));
            r17.w = r18.w * r17.w;
            r23.y = r16.y * r19.y + -r17.w;
            r16.y = dot(r24.xyz, float3(0.212500006,0.715399981,0.0720999986));
            r17.w = dot(r27.xyz, float3(0.212500006,0.715399981,0.0720999986));
            r17.z = r17.w * r17.z;
            r23.z = r16.y * r19.y + -r17.z;
            r19.xyz = r13.xyz * float3(0.00100000005,0.00100000005,0.00100000005) + r23.xyz;
            r16.y = dot(cb3[20].xyz, float3(0.212500006,0.715399981,0.0720999986));
            r19.xyz = cb3[19].xyz * r16.yyy + r19.xyz;
            r16.y = dot(r19.xyz, r19.xyz);
            r16.y = rsqrt(r16.y);
            r19.xyz = r19.xyz * r16.yyy;
            r13.x = dot(r13.xyz, r19.xyz);
            r13.x = r16.x + r13.x;
            r21.x = r21.z + r13.x;
            r13.xyz = t36.SampleLevel(s9_s, r21.xw, 0).xyz;
            if (cb0[34].y != 0) {
              r19.xyz = t36.SampleBias(s10_s, r21.xw, -1).xyz;
            } else {
              r19.xyz = t36.SampleBias(s0_s, r21.xw, -1).xyz;
            }
            r19.xyz = r19.xyz + -r13.xyz;
            r13.xyz = r19.www * r19.xyz + r13.xyz;
            r19.xyz = saturate(cb0[32].www * r13.xyz);
            r16.x = dot(r19.xyz, float3(0.212500006,0.715399981,0.0720999986));
            r16.y = max(r13.y, r13.z);
            r16.y = max(r16.y, r13.x);
            r16.y = cb0[32].w * r16.y;
            r16.y = log2(r16.y);
            r16.y = cb0[12].y * r16.y;
            r16.y = exp2(r16.y);
            r16.y = min(1, r16.y);
            r17.z = cb0[12].z + -cb0[12].x;
            r16.y = r16.y * r17.z + cb0[12].x;
            r13.xyz = max(float3(0.000300000014,0.000300000014,0.000300000014), r13.xyz);
            r17.z = dot(r13.xyz, r13.xyz);
            r17.z = rsqrt(r17.z);
            r13.xyz = r17.zzz * r13.xyz;
            r13.xyz = float3(1.05999994,1.05999994,1.05999994) * r13.xyz;
            r19.xyz = r16.yyy * r13.xyz;
            r21.xzw = cb0[12].xxx * r13.xyz;
            r21.xzw = float3(1.73199999,1.73199999,1.73199999) * r21.xzw;
            r16.y = dot(r13.xyz, r13.xyz);
            r16.y = sqrt(r16.y);
            r21.xzw = r21.xzw / r16.yyy;
            r13.x = dot(r13.xyz, float3(0.212500006,0.715399981,0.0720999986));
            r13.xyz = r21.xzw / r13.xxx;
            r13.xyz = max(r13.xyz, r19.xyz);
            r19.xyz = r16.xxx * cb0[32].www + r13.xyz;
            r19.xyz = min(cb0[12].zzz, r19.xyz);
            r16.y = -1 + cb0[32].w;
            r16.y = max(0, r16.y);
            r16.y = r16.y / cb0[11].w;
            r19.xyz = r19.xyz + -r13.xyz;
            r13.xyz = r16.yyy * r19.xyz + r13.xyz;
            r16.y = -0.000300000014 + cb0[12].x;
            r16.x = -0.000300000014 + r16.x;
            r16.y = 1 / r16.y;
            r16.x = saturate(r16.x * r16.y);
            r16.y = r16.x * -2 + 3;
            r16.x = r16.x * r16.x;
            r16.x = r16.y * r16.x;
            r16.x = rsqrt(r16.x);
            r16.x = 1 / r16.x;
            r13.xyz = -cb0[12].xxx + r13.xyz;
            r13.xyz = r16.xxx * r13.xyz + cb0[12].xxx;
            r13.xyz = r13.xyz + -r20.xyz;
            r13.xyz = r21.yyy * r13.xyz + r20.xyz;
            r16.x = 1 + -r21.y;
            r15.y = r16.x * r15.y;
          } else {
            r13.xyz = r20.xyz;
          }
        } else {
          r13.xyz = r20.xyz;
        }
        r16.x = cmp(0 < cb0[29].w);
        if (r16.x != 0) {
          r13.w = -0.0784313753 + r13.w;
          r13.w = saturate(1.08510637 * r13.w);
          r16.x = t23.SampleBias(s0_s, r16.zw, -1).x;
          r16.x = min(cb0[30].z, r16.x);
          r16.x = 1 + -r16.x;
          r16.y = cb0[29].w * r16.x;
          r16.x = r16.y * -0.5 + r16.x;
          r16.y = -0.5 + r6.z;
          r16.y = r16.y + r16.y;
          r17.z = -1 + cb0[29].w;
          r17.z = saturate(-6.66666794 * r17.z);
          r17.w = r17.z * -2 + 3;
          r17.z = r17.z * r17.z;
          r17.z = r17.w * r17.z;
          r16.y = r17.z * r16.y;
          r16.y = saturate(cb0[29].w * r16.y + cb0[29].w);
          r17.z = cmp(0 < cb0[30].y);
          r17.z = r17.z ? 0.5 : 0.25;
          r17.z = cb0[30].y * r17.z + 0.5;
          r17.z = 0.5 * r17.z;
          r17.z = cb0[33].z ? 0.5 : r17.z;
          r17.w = cb0[30].x * cb0[30].x;
          r13.w = log2(r13.w);
          r13.w = r17.w * r13.w;
          r13.w = exp2(r13.w);
          r13.w = r16.y + -r13.w;
          r13.w = max(0, r13.w);
          r17.w = r13.w + r13.w;
          r17.w = min(1, r17.w);
          r17.w = cb0[30].y * r16.y + r17.w;
          r17.w = -r17.w + r16.x;
          r17.w = saturate(10 * r17.w);
          r18.w = r17.w * -2 + 3;
          r17.w = r17.w * r17.w;
          r17.w = r18.w * r17.w;
          r18.w = r16.x * 0.400000006 + -0.5;
          r18.w = r16.y * r18.w + 0.699999988;
          r19.xyz = -r18.www + r13.xyz;
          r19.xyz = r17.www * r19.xyz + r18.www;
          r19.xyz = cb0[33].zzz ? r19.xyz : r13.xyz;
          r17.w = 1 + r17.z;
          r13.w = saturate(r13.w * r17.w + -r17.z);
          r13.w = r16.x + -r13.w;
          r13.w = saturate(10 * r13.w);
          r17.z = r13.w * -2 + 3;
          r13.w = r13.w * r13.w;
          r13.w = r17.z * r13.w;
          r17.x = r17.x * r13.w;
          r17.zw = float2(0.300000012,2.85714293) * r16.yy;
          r21.xyz = r19.xyz * r16.xxx + -r19.xyz;
          r13.xyz = r17.zzz * r21.xyz + r19.xyz;
          r13.w = asint(cb0[33].w) | asint(cb0[33].x);
          r17.z = min(1, r17.w);
          r17.w = r17.z * -2 + 3;
          r17.z = r17.z * r17.z;
          r17.z = r17.w * r17.z;
          r16.x = cmp(r17.z >= r16.x);
          r16.x = r16.x ? 1.000000 : 0;
          r17.z = 0.800000012 + -r15.x;
          r16.x = r16.x * r17.z + r15.x;
          r15.x = r13.w ? r15.x : r16.x;
        } else {
          r16.y = cb0[29].w;
        }
        r17.zw = float2(-0.5,-0.5) + r16.zw;
        r19.xy = -r17.zw + r14.xy;
        r14.xy = r17.xx * r19.xy + r17.zw;
        if (r11.w != 0) {
          r11.w = saturate(2.22222233 * r10.w);
          r13.w = rsqrt(r11.w);
          r13.w = 1 / r13.w;
          r16.x = r13.w + -r16.w;
          r17.z = cmp(r13.w < r16.w);
          if (r17.z != 0) {
            r17.z = log2(abs(r16.x));
            r17.z = 0.200000003 * r17.z;
            r17.z = exp2(r17.z);
            r17.z = 1 + -r17.z;
            r17.x = r17.x * r17.z;
            r13.xyz = float3(0,0,0);
          } else {
            r10.w = saturate(1.11111116 * r10.w);
            r13.w = r16.x + r13.w;
            r13.w = abs(r16.x) * 0.300000012 + r13.w;
            r17.z = log2(r16.w);
            r17.z = 0.200000003 * r17.z;
            r17.z = exp2(r17.z);
            r13.w = -1 + r13.w;
            r19.y = r17.z * r13.w + 1;
            r13.w = cmp(r19.y < 1);
            if (r13.w != 0) {
              r19.x = r16.z;
              r19.xy = saturate(r19.xy);
              r19.xyzw = t35.SampleBias(s0_s, r19.xy, -1).xyzw;
              r13.w = dot(r19.xyz, float3(0.298999995,0.587000012,0.114));
              r17.z = 0.300000012 + -r13.w;
              r13.w = r17.z * 0.800000012 + r13.w;
              r16.x = log2(abs(r16.x));
              r17.zw = float2(0.200000003,0.100000001) * r16.xx;
              r17.zw = exp2(r17.zw);
              r16.x = saturate(12.75 * r19.w);
              r18.w = 1 + -r17.w;
              r11.w = r11.w * r18.w + r17.w;
              r19.xyz = r13.xyz * r11.www;
              r21.xyz = r13.www * r17.zzz + -r19.xyz;
              r13.xyz = r16.xxx * r21.xyz + r19.xyz;
              r17.x = max(r17.x, r16.x);
              r19.xyz = float3(0,0,1) + -r14.xyz;
              r14.xyz = r16.xxx * r19.xyz + r14.xyz;
              r15.y = r16.x * -r15.y + r15.y;
              r13.w = 0.800000012 + -r15.x;
              r15.x = r16.x * r13.w + r15.x;
              r13.w = 1 + -r17.y;
              r17.y = r16.x * r13.w + r17.y;
              r11.w = r11.w + -r12.z;
              r12.z = r16.x * r11.w + r12.z;
            } else {
              r14.w = r14.z;
              r14.xyz = r14.xyw;
            }
            r11.w = cmp(r10.w >= 0.5);
            r11.w = r11.w ? 1.000000 : 0;
            r10.w = -1 + r10.w;
            r10.w = -2 * r10.w;
            r10.w = min(1, r10.w);
            r13.w = r10.w * -2 + 3;
            r10.w = r10.w * r10.w;
            r10.w = r13.w * r10.w;
            r10.w = log2(r10.w);
            r10.w = 20 * r10.w;
            r10.w = exp2(r10.w);
            r10.w = r11.w * r10.w;
            r19.xyz = r13.xyz * r10.www;
            r13.xyz = r19.xyz * float3(9,9,9) + r13.xyz;
          }
        }
        if (r9.w == 0) {
          r19.xyz = r20.xyz * r15.www;
          r19.xyz = r19.xyz + r19.xyz;
          r19.xyz = cb0[34].www ? r19.xyz : float3(0,0,0);
          r9.w = cb4[39].z + -cb0[35].x;
          r10.w = cmp(r9.w < 2);
          r9.w = -r9.w * 0.5 + 1;
          r11.w = r9.w * r9.w;
          r11.w = r11.w * r11.w;
          r20.xyz = r9.www * r11.www + r13.xyz;
          r13.xyz = r10.www ? r20.xyz : r13.xyz;
          r15.z = r17.y * r17.x;
          r17.yzw = r13.xyz + r13.xyz;
          r17.yzw = cb0[13].zzz ? r17.yzw : r13.xyz;
          r16.xz = float2(8,8) * r16.zw;
          r16.xz = floor(r16.xz);
          r9.w = r16.x + r16.z;
          r9.w = 0.5 * r9.w;
          r9.w = frac(r9.w);
          r10.w = dot(r17.yzw, float3(0.212500006,0.715399981,0.0720999986));
          r10.w = saturate(0.600000024 * r10.w);
          r10.w = 0.200000003 + r10.w;
          r9.w = r9.w * 0.200200006 + r10.w;
          r9.w = r9.w * r2.w;
          r20.z = 0.899999976 * r15.z;
          r16.xzw = cb0[13].xxx ? r9.www : r17.yzw;
          r17.yzw = cb0[13].xxx ? float3(0,0,1) : r14.xyz;
          r20.xy = float2(0.800000012,0);
          r20.xyz = cb0[13].xxx ? r20.xyz : r15.xyz;
          r21.xyz = cb0[13].xxx ? float3(0,0,0) : r18.xyz;
          r13.xyz = saturate(r8.www ? r16.xzw : r13.xyz);
          r14.xyz = r8.www ? r17.yzw : r14.xyz;
          r16.xzw = r8.www ? r21.xyz : r18.xyz;
          r15.xyz = r8.www ? r20.xyz : r15.xyz;
          r13.xyz = r13.xyz + -r5.xyz;
          r5.xyz = r15.zzz * r13.xyz + r5.xyz;
          r13.xyz = r14.xyz + -r7.xyz;
          r13.xyz = r15.zzz * r13.xyz + r7.xyz;
          r8.w = dot(r13.xyz, r13.xyz);
          r8.w = rsqrt(r8.w);
          r7.xyz = r13.xyz * r8.www;
          r8.w = r15.y + -r3.w;
          r3.w = r15.z * r8.w + r3.w;
          r13.xy = r15.xx + -r0.xy;
          r0.xy = r15.zz * r13.xy + r0.xy;
          r8.w = r12.z + -r2.w;
          r2.w = r17.x * r8.w + r2.w;
          r13.xyz = r16.xzw + -r10.xyz;
          r10.xyz = r15.zzz * r13.xyz + r10.xyz;
          r8.w = 0.0399999991 + -r1.y;
          r1.y = r15.z * r8.w + r1.y;
          r6.x = r15.z * -r6.x + r6.x;
          r13.xyz = r19.xyz + -r12.xyw;
          r12.xyw = r15.zzz * r13.xyz + r12.xyw;
          r5.w = max(r15.z, r5.w);
          r8.w = 1 + -r16.y;
          r8.w = r15.z * r8.w;
          r6.w = max(r8.w, r6.w);
          r0.z = cb4[3].y ? r15.z : r0.z;
        } else {
          r0.z = r7.w;
        }
      } else {
        r0.z = r7.w;
      }
    }
    r7.w = asint(cb0[0].y) | asint(cb0[35].y);
    if (r7.w != 0) {
      r7.w = cb4[3].y ? 0 : r0.z;
      r13.xy = cmp(cb0[36].xy == float2(0,0));
      r8.w = (int)r13.y | (int)r13.x;
      r9.w = cmp(r6.y == 0.000000);
      r8.w = (int)r8.w | (int)r9.w;
      if (r8.w == 0) {
        r8.w = cmp(asint(cb0[12].w) == 4);
        r13.xy = float2(-0.5,-0.5) + v3.wz;
        r13.xy = -cb0[35].wz + r13.xy;
        r13.xy = abs(cb0[36].xx) * r13.xy;
        r9.w = 6.28318024 * cb0[36].z;
        sincos(r9.w, r14.x, r15.x);
        r13.zw = r14.xx * r13.xy;
        r16.x = r13.y * r15.x + -r13.z;
        r16.y = r13.x * r15.x + r13.w;
        r13.xy = float2(0.5,0.5) + r16.xy;
        r16.xyzw = saturate(r13.xyxy);
        r13.xy = cmp(r13.xy != r16.xy);
        r9.w = (int)r13.y | (int)r13.x;
        r10.w = cmp(asint(cb0[13].x) == 0);
        r10.w = r8.w ? r10.w : 0;
        r11.w = cb4[39].z + -cb0[13].y;
        r10.w = r10.w ? r11.w : 0.899999976;
        r11.w = cmp(r10.w < 0.899999976);
        r13.xyzw = t40.SampleBias(s0_s, r16.zw, -1).xyzw;
        r12.z = saturate(12.75 * r13.w);
        r17.x = r12.z * r6.y;
        t40.GetDimensions(0, fDest.x, fDest.y, fDest.z);
        r14.yz = fDest.xy;
        r14.yz = float2(1,1) / r14.yz;
        r15.yz = float2(1,1) + -r14.yz;
        r14.yz = max(r16.zw, r14.yz);
        r14.yz = min(r14.yz, r15.yz);
        r14.y = t40.CalculateLevelOfDetail(s0_s, r14.yz);
        r14.z = saturate(-3 + r14.y);
        r14.z = 1 + -r14.z;
        r14.w = cmp(0 < r14.z);
        if (r14.w != 0) {
          r15.yz = float2(-0.5,-0.5) + r16.zw;
          r18.xyz = cb1[21].yzx * cb1[20].zxy;
          r18.xyz = cb1[20].yzx * cb1[21].zxy + -r18.xyz;
          r14.w = dot(r18.xyz, -r11.xyz);
          r15.w = dot(cb1[21].xyz, r11.xyz);
          r16.x = r15.w * r14.x;
          r16.x = r14.w * r15.x + -r16.x;
          r15.x = r15.w * r15.x;
          r16.y = r14.w * r14.x + r15.x;
          r14.xw = -r16.xy * float2(0.00999999978,0.00999999978) + r15.yz;
          r14.xw = saturate(float2(0.5,0.5) + r14.xw);
          r14.x = t40.SampleBias(s0_s, r14.xw, 1).w;
          r14.x = saturate(12.75 * r14.x);
          r14.x = r14.x * r6.y;
          r14.x = 0.699999988 * r14.x;
          r14.x = max(r17.x, r14.x);
          r12.z = -r12.z * r6.y + r14.x;
          r17.z = r14.z * r12.z + r17.x;
          r17.xy = r17.zx;
        } else {
          r17.y = 1;
        }
        r12.z = cmp(0 >= r17.x);
        r14.x = ~(int)r11.w;
        r12.z = r12.z ? r14.x : 0;
        r9.w = (int)r9.w | (int)r12.z;
        r15.xyzw = t42.SampleBias(s0_s, r16.zw, -1).zxyw;
        r12.z = r15.y + r15.z;
        r18.x = -1.00392163 + r12.z;
        r18.y = r15.y + -r15.z;
        r12.z = 1 + -abs(r18.x);
        r18.z = r12.z + -abs(r18.y);
        r12.z = dot(r18.xyz, r18.xyz);
        r12.z = rsqrt(r12.z);
        r18.xyz = r18.xyz * r12.zzz;
        r12.z = max(3, r14.y);
        r14.xy = t20.SampleLevel(s0_s, r1.zw, r12.z).xy;
        r14.z = r14.x + r14.y;
        r19.x = -1.00392163 + r14.z;
        r19.y = r14.x + -r14.y;
        r14.x = 1 + -abs(r19.x);
        r19.z = r14.x + -abs(r19.y);
        r14.x = dot(r19.xyz, r19.xyz);
        r14.x = rsqrt(r14.x);
        r14.xyz = r19.xyz * r14.xxx;
        r18.w = -r18.y;
        r18.xyz = r18.xwz * r17.xxx;
        r14.w = -r14.y;
        r14.xyz = r18.xyz * float3(2,2,2) + r14.xwz;
        r14.w = dot(r14.xyz, r14.xyz);
        r14.w = rsqrt(r14.w);
        r14.xyz = r14.xyz * r14.www;
        r12.z = t21.SampleLevel(s0_s, r1.zw, r12.z).x;
        r12.z = log2(r12.z);
        r12.z = 0.75 * r12.z;
        r12.z = exp2(r12.z);
        r16.x = r17.y * 0.5 + 0.5;
        r12.z = min(r16.x, r12.z);
        r15.y = cb0[40].x ? 1 : 0;
        if (cb0[41].x != 0) {
          r16.x = t44.SampleBias(s0_s, r16.zw, -1).w;
          r16.x = 1 + -r16.x;
          r16.y = cmp(0 != r16.x);
          if (r16.y != 0) {
            r16.y = cb4[2].x ? 2.5 : 1.75;
            r16.y = cb0[41].z * r16.y;
            r18.xyz = cb1[19].xyz + -r4.yzw;
            r17.z = dot(r18.xyz, r18.xyz);
            r17.z = rsqrt(r17.z);
            r18.xyz = r18.xyz * r17.zzz;
            r17.zw = r16.zw * r16.yy;
            r19.xy = float2(0.5,0.5) + r16.zw;
            r19.xy = r19.xy * r16.yy;
            r19.zw = ddx_coarse(r17.zw);
            r20.xy = ddy_coarse(r17.zw);
            r19.zw = max(r20.xy, r19.zw);
            r16.y = min(r19.z, r19.w);
            r16.y = saturate(-r16.y * 40 + 1);
            r20.xyz = t43.Sample(s9_s, r17.zw).xyw;
            r17.z = r20.x + r20.y;
            r21.x = -1.00392163 + r17.z;
            r21.y = r20.x + -r20.y;
            r17.z = 1 + -abs(r21.x);
            r21.z = r17.z + -abs(r21.y);
            r17.z = dot(r21.xyz, r21.xyz);
            r17.z = rsqrt(r17.z);
            r20.xyw = r21.xyz * r17.zzz;
            r20.xyw = r20.xyw * r20.www;
            r21.xyz = r20.yyy * r9.xyz;
            r21.xyz = r20.xxx * v6.xyz + r21.xyz;
            r21.xyz = r20.www * r3.xyz + r21.xyz;
            r17.z = dot(r21.xyz, r21.xyz);
            r17.z = rsqrt(r17.z);
            r21.xyz = r21.xyz * r17.zzz;
            r17.z = dot(r18.xyz, r21.xyz);
            r17.z = r17.z + r17.z;
            r21.xyz = r21.xyz * -r17.zzz + r18.xyz;
            r21.xyz = float3(12,12,12) * r21.xyz;
            r21.xyz = sin(r21.xyz);
            r22.xyz = max(float3(0,0,0), -r21.xyz);
            r17.z = dot(r22.xyz, float3(0.212500006,0.715399981,0.0720999986));
            r17.z = r17.z * r17.z;
            r22.xyz = saturate(float3(0.149999976,0.149999976,0.149999976) + -r21.xyz);
            r17.w = dot(r22.xyz, float3(0.212500006,0.715399981,0.0720999986));
            r17.w = 0.25 * r17.w;
            r17.z = r17.z * r17.z + r17.w;
            r21.xyz = float3(-0.99000001,-0.99000001,-0.99000001) + r21.xyz;
            r21.xyz = max(float3(0,0,0), r21.xyz);
            r21.xyz = float3(100.000099,100.000099,100.000099) * r21.xyz;
            r22.xyz = r21.yzx * r21.yzx;
            r21.xyz = r22.xyz * r22.xyz + r21.xyz;
            r21.xyz = r21.xyz * float3(3,3,3) + r17.zzz;
            r21.xyz = r21.xyz * r20.zzz;
            r16.y = r16.y * r16.x;
            r16.y = 0.0399999991 * r16.y;
            r17.zw = r20.xy * r16.yy + r14.xy;
            r19.xyz = t43.SampleLevel(s2_s, r19.xy, 0).xyw;
            r18.w = r19.x + r19.y;
            r20.x = -1.00392163 + r18.w;
            r20.y = r19.x + -r19.y;
            r18.w = 1 + -abs(r20.x);
            r20.z = r18.w + -abs(r20.y);
            r18.w = dot(r20.xyz, r20.xyz);
            r18.w = rsqrt(r18.w);
            r19.xyw = r20.xyz * r18.www;
            r20.xyz = r19.yyy * r9.xyz;
            r20.xyz = r19.xxx * v6.xyz + r20.xyz;
            r20.xyz = r19.www * r3.xyz + r20.xyz;
            r18.w = dot(r20.xyz, r20.xyz);
            r18.w = rsqrt(r18.w);
            r20.xyz = r20.xyz * r18.www;
            r18.w = dot(r18.xyz, r20.xyz);
            r18.w = r18.w + r18.w;
            r18.xyz = r20.xyz * -r18.www + r18.xyz;
            r18.xyz = float3(12,12,12) * r18.xyz;
            r18.xyz = sin(r18.xyz);
            r20.xyz = max(float3(0,0,0), -r18.xyz);
            r18.w = dot(r20.xyz, float3(0.212500006,0.715399981,0.0720999986));
            r18.w = r18.w * r18.w;
            r20.xyz = saturate(float3(0.149999976,0.149999976,0.149999976) + -r18.xyz);
            r19.w = dot(r20.xyz, float3(0.212500006,0.715399981,0.0720999986));
            r19.w = 0.25 * r19.w;
            r18.w = r18.w * r18.w + r19.w;
            r18.xyz = float3(-0.99000001,-0.99000001,-0.99000001) + r18.xyz;
            r18.xyz = max(float3(0,0,0), r18.xyz);
            r18.xyz = float3(100.000099,100.000099,100.000099) * r18.xyz;
            r20.xyz = r18.yzx * r18.yzx;
            r18.xyz = r20.xyz * r20.xyz + r18.xyz;
            r18.xyz = r18.xyz * float3(3,3,3) + r18.www;
            r18.xyz = r18.xyz * r19.zzz;
            r18.xyz = max(r21.xyz, r18.xyz);
            r20.xyz = saturate(r13.xyz);
            r18.w = dot(r20.xyz, float3(0.212500006,0.715399981,0.0720999986));
            r19.w = max(r13.y, r13.z);
            r19.w = max(r19.w, r13.x);
            r19.w = log2(r19.w);
            r19.w = cb0[9].y * r19.w;
            r19.w = exp2(r19.w);
            r19.w = min(1, r19.w);
            r20.x = cb0[9].z + -cb0[9].x;
            r19.w = r19.w * r20.x + cb0[9].x;
            r20.xyz = max(float3(0.000300000014,0.000300000014,0.000300000014), r13.xyz);
            r20.w = dot(r20.xyz, r20.xyz);
            r20.w = rsqrt(r20.w);
            r20.xyz = r20.xyz * r20.www;
            r20.xyz = float3(1.05999994,1.05999994,1.05999994) * r20.xyz;
            r21.xyz = r20.xyz * r19.www;
            r22.xyz = cb0[9].xxx * r20.xyz;
            r22.xyz = float3(1.73199999,1.73199999,1.73199999) * r22.xyz;
            r19.w = dot(r20.xyz, r20.xyz);
            r19.w = sqrt(r19.w);
            r22.xyz = r22.xyz / r19.www;
            r19.w = dot(r20.xyz, float3(0.212500006,0.715399981,0.0720999986));
            r20.xyz = r22.xyz / r19.www;
            r20.xyz = max(r20.xyz, r21.xyz);
            r19.w = -0.000300000014 + cb0[9].x;
            r18.w = -0.000300000014 + r18.w;
            r19.w = 1 / r19.w;
            r18.w = saturate(r19.w * r18.w);
            r19.w = r18.w * -2 + 3;
            r18.w = r18.w * r18.w;
            r18.w = r19.w * r18.w;
            r18.w = rsqrt(r18.w);
            r18.w = 1 / r18.w;
            r20.xyz = -cb0[9].xxx + r20.xyz;
            r20.xyz = r18.www * r20.xyz + cb0[9].xxx;
            r20.xyz = cb0[39].xxx ? r20.xyz : r13.xyz;
            r20.xyz = cb0[39].www * r20.xyz;
            r18.xyz = r20.xyz * r18.xyz;
            r19.xy = r19.xy * r16.yy;
            r14.xy = r19.xy * r19.zz + r17.zw;
            r16.y = 0.5 * r16.x;
            r15.y = max(r16.y, r15.y);
            r18.xyz = r18.xyz * r16.xxx;
          } else {
            r18.xyz = r10.xyz;
          }
        } else {
          r18.xyz = r10.xyz;
        }
        if (cb0[39].x != 0) {
          r19.xyz = float3(-1,-1,-1) + cb0[38].xyz;
          r19.xyz = r15.yyy * r19.xyz + float3(1,1,1);
          r16.x = cb0[38].w * r15.y;
          if (cb0[39].y != 0) {
            r16.y = dot(r13.xyz, float3(0.212500006,0.715399981,0.0720999986));
            r20.xyz = r16.yyy + -r13.xyz;
            r20.xyz = r16.xxx * r20.xyz + r13.xyz;
            r20.xyz = saturate(r20.xyz * r19.xyz);
            r21.xyz = max(float3(0.000300000014,0.000300000014,0.000300000014), r20.xyz);
            r16.y = dot(r21.xyz, r21.xyz);
            r16.y = rsqrt(r16.y);
            r21.xyz = r21.xyz * r16.yyy;
            r21.xyz = float3(1.05999994,1.05999994,1.05999994) * r21.xyz;
            r16.y = max(r20.y, r20.z);
            r16.y = max(r20.x, r16.y);
            r16.y = cb0[39].z * r16.y;
            r20.xyz = saturate(cb0[39].zzz * r20.xyz);
            r17.z = dot(r20.xyz, float3(0.212500006,0.715399981,0.0720999986));
            r20.xy = float2(-0.550000012,-0.000300000014) + r17.zz;
            r17.w = saturate(-1.87125754 * r20.x);
            r18.w = r17.w * -2 + 3;
            r17.w = r17.w * r17.w;
            r17.w = r18.w * r17.w;
            r20.xzw = -cb0[11].xyz + cb0[10].xyz;
            r20.xzw = r17.www * r20.xzw + cb0[11].xyz;
            r20.xzw = -cb0[9].xyz + r20.xzw;
            r20.xzw = r15.yyy * r20.xzw + cb0[9].xyz;
            r17.w = cb0[10].x + -cb0[9].x;
            r17.w = r15.y * r17.w + cb0[9].x;
            r16.y = log2(r16.y);
            r16.y = r20.z * r16.y;
            r16.y = exp2(r16.y);
            r16.y = min(1, r16.y);
            r18.w = r20.w + -r20.x;
            r16.y = r16.y * r18.w + r20.x;
            r22.xyz = r16.yyy * r21.xyz;
            r23.xyz = r21.xyz * r17.www;
            r23.xyz = float3(1.73199999,1.73199999,1.73199999) * r23.xyz;
            r16.y = dot(r21.xyz, r21.xyz);
            r16.y = sqrt(r16.y);
            r23.xyz = r23.xyz / r16.yyy;
            r16.y = dot(r21.xyz, float3(0.212500006,0.715399981,0.0720999986));
            r21.xyz = r23.xyz / r16.yyy;
            r21.xyz = max(r21.xyz, r22.xyz);
            r22.xyz = r21.xyz + r17.zzz;
            r20.xzw = min(r22.xyz, r20.www);
            r16.y = -1 + cb0[39].z;
            r16.y = max(0, r16.y);
            r16.y = 0.0158730168 * r16.y;
            r20.xzw = r20.xzw + -r21.xyz;
            r20.xzw = r16.yyy * r20.xzw + r21.xyz;
            r16.y = -0.000300000014 + r17.w;
            r16.y = 1 / r16.y;
            r16.y = saturate(r20.y * r16.y);
            r17.z = r16.y * -2 + 3;
            r16.y = r16.y * r16.y;
            r16.y = r17.z * r16.y;
            r16.y = rsqrt(r16.y);
            r16.y = 1 / r16.y;
            r20.xyz = r20.xzw + -r17.www;
            r20.xyz = r16.yyy * r20.xyz + r17.www;
          } else {
            r21.xyz = r19.xyz * r13.xyz;
            r19.xyz = -r19.xyz * r13.xyz + r19.xyz;
            r19.xyz = r16.xxx * r19.xyz + r21.xyz;
            r19.xyz = max(float3(0.000300000014,0.000300000014,0.000300000014), r19.xyz);
            r16.x = dot(r19.xyz, r19.xyz);
            r16.x = rsqrt(r16.x);
            r19.xyz = r19.xyz * r16.xxx;
            r19.xyz = float3(1.05999994,1.05999994,1.05999994) * r19.xyz;
            r16.x = max(r13.y, r13.z);
            r16.x = max(r16.x, r13.x);
            r16.x = cb0[39].z * r16.x;
            r21.xyz = saturate(cb0[39].zzz * r13.xyz);
            r16.y = dot(r21.xyz, float3(0.212500006,0.715399981,0.0720999986));
            r17.zw = float2(-0.550000012,-0.000300000014) + r16.yy;
            r17.z = saturate(-1.87125754 * r17.z);
            r18.w = r17.z * -2 + 3;
            r17.z = r17.z * r17.z;
            r17.z = r18.w * r17.z;
            r21.xyz = -cb0[11].xyz + cb0[10].xyz;
            r21.xyz = r17.zzz * r21.xyz + cb0[11].xyz;
            r21.xyz = -cb0[9].xyz + r21.xyz;
            r21.xyz = r15.yyy * r21.xyz + cb0[9].xyz;
            r17.z = cb0[10].x + -cb0[9].x;
            r17.z = r15.y * r17.z + cb0[9].x;
            r16.x = log2(r16.x);
            r16.x = r21.y * r16.x;
            r16.x = exp2(r16.x);
            r16.x = min(1, r16.x);
            r18.w = r21.z + -r21.x;
            r16.x = r16.x * r18.w + r21.x;
            r21.xyw = r16.xxx * r19.xyz;
            r22.xyz = r19.xyz * r17.zzz;
            r22.xyz = float3(1.73199999,1.73199999,1.73199999) * r22.xyz;
            r16.x = dot(r19.xyz, r19.xyz);
            r16.x = sqrt(r16.x);
            r22.xyz = r22.xyz / r16.xxx;
            r16.x = dot(r19.xyz, float3(0.212500006,0.715399981,0.0720999986));
            r19.xyz = r22.xyz / r16.xxx;
            r19.xyz = max(r19.xyz, r21.xyw);
            r21.xyw = r19.xyz + r16.yyy;
            r21.xyz = min(r21.zzz, r21.xyw);
            r16.x = -1 + cb0[39].z;
            r16.x = max(0, r16.x);
            r16.x = 0.0158730168 * r16.x;
            r21.xyz = r21.xyz + -r19.xyz;
            r19.xyz = r16.xxx * r21.xyz + r19.xyz;
            r16.x = -0.000300000014 + r17.z;
            r16.x = 1 / r16.x;
            r16.x = saturate(r17.w * r16.x);
            r16.y = r16.x * -2 + 3;
            r16.x = r16.x * r16.x;
            r16.x = r16.y * r16.x;
            r16.x = rsqrt(r16.x);
            r16.x = 1 / r16.x;
            r19.xyz = r19.xyz + -r17.zzz;
            r20.xyz = r16.xxx * r19.xyz + r17.zzz;
          }
        } else {
          r16.x = dot(r13.xyz, float3(0.212500006,0.715399981,0.0720999986));
          r19.xyz = r16.xxx + -r13.xyz;
          r19.xyz = cb0[38].www * r19.xyz + r13.xyz;
          r19.xyz = cb0[38].xyz * r19.xyz;
          r16.x = cb0[39].y ? cb0[39].z : 1;
          r19.xyz = r19.xyz * r16.xxx;
          r20.xyz = cb0[40].xxx ? r19.xyz : r13.xyz;
        }
        if (cb0[40].y != 0) {
          r19.xyzw = t44.SampleBias(s9_s, r16.zw, -1).xyzw;
          r13.xyz = t44.SampleBias(s0_s, r16.zw, -1).xyz;
          r13.xyz = r13.xyz + -r19.xyz;
          r21.yzw = r19.www * r13.xyz + r19.xyz;
          r13.x = cmp(0 < r21.y);
          if (r13.x != 0) {
            r13.xyz = cb1[19].xyz + -r4.yzw;
            r16.x = dot(r13.xyz, r13.xyz);
            r16.x = rsqrt(r16.x);
            r13.xyz = r16.xxx * r13.xyz;
            r16.x = dot(r13.xyz, r3.xyz);
            r16.y = cmp(0.000000 != cb4[36].y);
            r19.xyz = cb1[33].xyz + r4.yzw;
            r22.xyz = -cb1[20].xyz * cb4[36].yyy + r19.xyz;
            r19.xyz = cb1[33].xyz + cb1[19].xyz;
            r19.xyz = cb1[22].www * cb1[20].xyz + r19.xyz;
            r23.w = dot(r19.xyz, cb1[20].xyz);
            r22.w = 1;
            r23.xyz = cb1[20].xyz;
            r17.z = dot(r22.xyzw, r23.xyzw);
            r17.w = cmp(0 >= r17.z);
            r19.xyz = r17.zzz * -cb1[20].xyz + r4.yzw;
            r19.xyz = r17.www ? r4.yzw : r19.xyz;
            r22.xyz = cb4[13].xyw * r19.yyy;
            r22.xyz = cb4[12].xyw * r19.xxx + r22.xyz;
            r22.xyz = cb4[14].xyw * r19.zzz + r22.xyz;
            r22.xyz = cb4[15].xyw + r22.xyz;
            r17.zw = r22.xy / r22.zz;
            r17.z = 1 + r17.z;
            r17.z = cb1[26].z * r17.z;
            r17.z = 0.5 * r17.z;
            r23.xy = cb1[26].zw + float2(-1,-1);
            r17.z = max(0, r17.z);
            r22.x = min(r17.z, r23.x);
            r17.z = 1 + -r17.w;
            r17.z = cb1[26].w * r17.z;
            r17.z = 0.5 * r17.z;
            r17.z = max(0, r17.z);
            r22.y = min(r17.z, r23.y);
            r23.xyz = r16.yyy ? r19.xyz : r4.yzw;
            r19.xyz = r16.yyy ? r22.xyz : v8.xyw;
            r17.zw = -cb1[26].xy + r19.xy;
            r17.zw = (uint2)r17.zw;
            r17.zw = (uint2)r17.zw >> asuint(cb3[25].xx);
            r16.y = mad((int)r17.w, asint(cb3[25].y), (int)r17.z);
            r16.y = mad((int)r16.y, asint(cb3[24].z), asint(cb3[24].y));
            r17.z = cb3[26].x * r19.z;
            r17.z = max(0, r17.z);
            r17.z = min(cb3[26].y, r17.z);
            r17.z = (uint)r17.z;
            r17.z = mad((int)r17.z, asint(cb3[24].z), asint(cb3[24].x));
            r23.w = 1;
            r19.xyz = float3(0,0,0);
            r22.xyz = float3(0,0,0);
            r24.xyz = float3(0,0,0);
            r25.xyz = float3(0,0,0);
            r26.xyz = float3(0,0,0);
            r27.xyz = float3(0,0,0);
            r17.w = 0;
            r18.w = 0;
            r20.w = 0;
            while (true) {
              r22.w = cmp((uint)r20.w < asuint(cb3[24].z));
              r24.w = ~(int)r18.w;
              r22.w = r22.w ? r24.w : 0;
              if (r22.w == 0) break;
              r22.w = (int)r16.y + (int)r20.w;
              r22.w = t13[r22.w].val[0/4];
              r24.w = (int)r17.z + (int)r20.w;
              r24.w = t13[r24.w].val[0/4];
              r22.w = (int)r22.w & (int)r24.w;
              r24.w = (uint)r20.w << 5;
              r28.xyz = r19.xyz;
              r29.xyz = r22.xyz;
              r30.xyz = r24.xyz;
              r31.xyz = r25.xyz;
              r32.xyz = r26.xyz;
              r33.xyz = r27.xyz;
              r25.w = r17.w;
              r26.w = r18.w;
              r27.w = r22.w;
              while (true) {
                if (r27.w == 0) break;
                r28.w = firstbitlow((uint)r27.w);
                r28.w = (int)r24.w + (int)r28.w;
                r29.w = (int)r27.w + -1;
                r29.w = (int)r27.w & (int)r29.w;
                r28.w = (int)r28.w * 6;
                r34.x = dot(r23.xyzw, cb3[r28.w+1180].xyzw);
                r34.y = dot(r23.xyzw, cb3[r28.w+1181].xyzw);
                r34.z = dot(r23.xyzw, cb3[r28.w+1182].xyzw);
                r35.xyz = -cb3[r28.w+1183].xyz + r34.xyz;
                r35.xyz = saturate(cb3[r28.w+1185].xyz * r35.xyz);
                r34.xyz = cb3[r28.w+1184].xyz + -r34.xyz;
                r34.xyz = saturate(cb3[r28.w+1185].xyz * r34.xyz);
                r30.w = min(r35.y, r35.z);
                r30.w = min(r35.x, r30.w);
                r31.w = min(r34.y, r34.z);
                r31.w = min(r34.x, r31.w);
                r30.w = min(r31.w, r30.w);
                r31.w = cmp(r30.w == 0.000000);
                if (r31.w != 0) {
                  r27.w = r29.w;
                  continue;
                }
                r31.w = r30.w * r30.w;
                r30.w = r30.w * -2 + 3;
                r30.w = r31.w * r30.w;
                r31.w = 1 + -r25.w;
                r32.w = r31.w * r30.w;
                r30.w = r30.w * r31.w + r25.w;
                r28.w = 9 * asint(cb3[r28.w+1185].w);
                r34.x = dot(r23.xyzw, cb2[r28.w+0].xyzw);
                r34.y = dot(r23.xyzw, cb2[r28.w+1].xyzw);
                r31.w = dot(r23.xyzw, cb2[r28.w+2].xyzw);
                r34.z = 0.166666672 * r31.w;
                r34.xyz = max(cb2[r28.w+3].xyz, r34.xyz);
                r34.xyz = min(cb2[r28.w+4].xyz, r34.xyz);
                r34.w = 6 * r34.z;
                r34.xyz = r34.xyw * cb2[r28.w+6].xyz + cb2[r28.w+7].xyz;
                r34.w = 0.166666672 * r34.z;
                r35.xyz = t16.SampleLevel(s1_s, r34.xyw, 0).xyz;
                r35.xyz = cb2[r28.w+5].xyz * r35.xyz;
                r36.xyz = float3(0,0,0.166666672) + r34.xyw;
                r36.xyz = t16.SampleLevel(s1_s, r36.xyz, 0).xyz;
                r36.xyz = cb2[r28.w+5].xyz * r36.xyz;
                r37.xyz = float3(0,0,0.333333343) + r34.xyw;
                r37.xyz = t16.SampleLevel(s1_s, r37.xyz, 0).xyz;
                r37.xyz = cb2[r28.w+5].xyz * r37.xyz;
                r38.xyz = float3(0,0,0.5) + r34.xyw;
                r38.xyz = t16.SampleLevel(s1_s, r38.xyz, 0).xyz;
                r38.xyz = cb2[r28.w+5].xyz * r38.xyz;
                r39.xyz = float3(0,0,0.666666687) + r34.xyw;
                r39.xyz = t16.SampleLevel(s1_s, r39.xyz, 0).xyz;
                r39.xyz = cb2[r28.w+5].xyz * r39.xyz;
                r34.xyz = float3(0,0,0.833333313) + r34.xyw;
                r34.xyz = t16.SampleLevel(s1_s, r34.xyz, 0).xyz;
                r34.xyz = cb2[r28.w+5].xyz * r34.xyz;
                r35.xyz = r32.www * r35.xyz + r28.xyz;
                r36.xyz = r32.www * r36.xyz + r29.xyz;
                r37.xyz = r32.www * r37.xyz + r30.xyz;
                r38.xyz = r32.www * r38.xyz + r31.xyz;
                r39.xyz = r32.www * r39.xyz + r32.xyz;
                r34.xyz = r32.www * r34.xyz + r33.xyz;
                r28.w = cmp(0.99000001 < r30.w);
                if (r28.w != 0) {
                  r28.xyz = r35.xyz;
                  r29.xyz = r36.xyz;
                  r30.xyz = r37.xyz;
                  r31.xyz = r38.xyz;
                  r32.xyz = r39.xyz;
                  r33.xyz = r34.xyz;
                  r25.w = r30.w;
                  r26.w = -1;
                  break;
                }
                r28.xyz = r35.xyz;
                r29.xyz = r36.xyz;
                r30.xyz = r37.xyz;
                r31.xyz = r38.xyz;
                r32.xyz = r39.xyz;
                r33.xyz = r34.xyz;
                r25.w = r30.w;
                r27.w = r29.w;
              }
              r19.xyz = r28.xyz;
              r22.xyz = r29.xyz;
              r24.xyz = r30.xyz;
              r25.xyz = r31.xyz;
              r26.xyz = r32.xyz;
              r27.xyz = r33.xyz;
              r17.w = r25.w;
              r18.w = r26.w;
              r20.w = (int)r20.w + 1;
            }
            r16.y = cmp(r17.w < 0.99000001);
            if (r16.y != 0) {
              r16.y = 1 + -r17.w;
              r23.x = dot(cb3[7].xw, float2(1,1));
              r23.y = dot(cb3[8].xw, float2(1,1));
              r23.z = dot(cb3[9].xw, float2(1,1));
              r19.xyz = r16.yyy * r23.xyz + r19.xyz;
              r23.x = dot(cb3[7].yw, float2(1,1));
              r23.y = dot(cb3[8].yw, float2(1,1));
              r23.z = dot(cb3[9].yw, float2(1,1));
              r22.xyz = r16.yyy * r23.xyz + r22.xyz;
              r23.x = dot(cb3[7].zw, float2(1,1));
              r23.y = dot(cb3[8].zw, float2(1,1));
              r23.z = dot(cb3[9].zw, float2(1,1));
              r24.xyz = r16.yyy * r23.xyz + r24.xyz;
              r23.x = dot(cb3[7].xw, float2(-1,1));
              r23.y = dot(cb3[8].xw, float2(-1,1));
              r23.z = dot(cb3[9].xw, float2(-1,1));
              r25.xyz = r16.yyy * r23.xyz + r25.xyz;
              r23.x = dot(cb3[7].yw, float2(-1,1));
              r23.y = dot(cb3[8].yw, float2(-1,1));
              r23.z = dot(cb3[9].yw, float2(-1,1));
              r26.xyz = r16.yyy * r23.xyz + r26.xyz;
              r23.x = dot(cb3[7].zw, float2(-1,1));
              r23.y = dot(cb3[8].zw, float2(-1,1));
              r23.z = dot(cb3[9].zw, float2(-1,1));
              r27.xyz = r16.yyy * r23.xyz + r27.xyz;
            }
            r23.xyz = r14.yyy * r9.xyz;
            r23.xyz = r14.xxx * v6.xyz + r23.xyz;
            r23.xyz = r14.zzz * r3.xyz + r23.xyz;
            r16.y = dot(r23.xyz, r23.xyz);
            r16.y = rsqrt(r16.y);
            r17.zw = r23.xy * r16.yy;
            r16.y = dot(r19.xyz, float3(0.212500006,0.715399981,0.0720999986));
            r19.xy = max(float2(0,0), r17.zw);
            r18.w = dot(r25.xyz, float3(0.212500006,0.715399981,0.0720999986));
            r17.zw = max(float2(0,0), -r17.zw);
            r18.w = r18.w * r17.z;
            r23.x = r16.y * r19.x + -r18.w;
            r16.y = dot(r22.xyz, float3(0.212500006,0.715399981,0.0720999986));
            r18.w = dot(r26.xyz, float3(0.212500006,0.715399981,0.0720999986));
            r17.w = r18.w * r17.w;
            r23.y = r16.y * r19.y + -r17.w;
            r16.y = dot(r24.xyz, float3(0.212500006,0.715399981,0.0720999986));
            r17.w = dot(r27.xyz, float3(0.212500006,0.715399981,0.0720999986));
            r17.z = r17.w * r17.z;
            r23.z = r16.y * r19.y + -r17.z;
            r19.xyz = r13.xyz * float3(0.00100000005,0.00100000005,0.00100000005) + r23.xyz;
            r16.y = dot(cb3[20].xyz, float3(0.212500006,0.715399981,0.0720999986));
            r19.xyz = cb3[19].xyz * r16.yyy + r19.xyz;
            r16.y = dot(r19.xyz, r19.xyz);
            r16.y = rsqrt(r16.y);
            r19.xyz = r19.xyz * r16.yyy;
            r13.x = dot(r13.xyz, r19.xyz);
            r13.x = r16.x + r13.x;
            r21.x = r21.z + r13.x;
            r13.xyz = t41.SampleLevel(s9_s, r21.xw, 0).xyz;
            if (cb0[41].y != 0) {
              r19.xyz = t41.SampleBias(s10_s, r21.xw, -1).xyz;
            } else {
              r19.xyz = t41.SampleBias(s0_s, r21.xw, -1).xyz;
            }
            r19.xyz = r19.xyz + -r13.xyz;
            r13.xyz = r19.www * r19.xyz + r13.xyz;
            r19.xyz = saturate(cb0[39].www * r13.xyz);
            r16.x = dot(r19.xyz, float3(0.212500006,0.715399981,0.0720999986));
            r16.y = max(r13.y, r13.z);
            r16.y = max(r16.y, r13.x);
            r16.y = cb0[39].w * r16.y;
            r16.y = log2(r16.y);
            r16.y = cb0[12].y * r16.y;
            r16.y = exp2(r16.y);
            r16.y = min(1, r16.y);
            r17.z = cb0[12].z + -cb0[12].x;
            r16.y = r16.y * r17.z + cb0[12].x;
            r13.xyz = max(float3(0.000300000014,0.000300000014,0.000300000014), r13.xyz);
            r17.z = dot(r13.xyz, r13.xyz);
            r17.z = rsqrt(r17.z);
            r13.xyz = r17.zzz * r13.xyz;
            r13.xyz = float3(1.05999994,1.05999994,1.05999994) * r13.xyz;
            r19.xyz = r16.yyy * r13.xyz;
            r21.xzw = cb0[12].xxx * r13.xyz;
            r21.xzw = float3(1.73199999,1.73199999,1.73199999) * r21.xzw;
            r16.y = dot(r13.xyz, r13.xyz);
            r16.y = sqrt(r16.y);
            r21.xzw = r21.xzw / r16.yyy;
            r13.x = dot(r13.xyz, float3(0.212500006,0.715399981,0.0720999986));
            r13.xyz = r21.xzw / r13.xxx;
            r13.xyz = max(r13.xyz, r19.xyz);
            r19.xyz = r16.xxx * cb0[39].www + r13.xyz;
            r19.xyz = min(cb0[12].zzz, r19.xyz);
            r16.y = -1 + cb0[39].w;
            r16.y = max(0, r16.y);
            r16.y = r16.y / cb0[11].w;
            r19.xyz = r19.xyz + -r13.xyz;
            r13.xyz = r16.yyy * r19.xyz + r13.xyz;
            r16.y = -0.000300000014 + cb0[12].x;
            r16.x = -0.000300000014 + r16.x;
            r16.y = 1 / r16.y;
            r16.x = saturate(r16.x * r16.y);
            r16.y = r16.x * -2 + 3;
            r16.x = r16.x * r16.x;
            r16.x = r16.y * r16.x;
            r16.x = rsqrt(r16.x);
            r16.x = 1 / r16.x;
            r13.xyz = -cb0[12].xxx + r13.xyz;
            r13.xyz = r16.xxx * r13.xyz + cb0[12].xxx;
            r13.xyz = r13.xyz + -r20.xyz;
            r13.xyz = r21.yyy * r13.xyz + r20.xyz;
            r16.x = 1 + -r21.y;
            r15.y = r16.x * r15.y;
          } else {
            r13.xyz = r20.xyz;
          }
        } else {
          r13.xyz = r20.xyz;
        }
        r16.x = cmp(0 < cb0[36].w);
        if (r16.x != 0) {
          r13.w = -0.0784313753 + r13.w;
          r13.w = saturate(1.08510637 * r13.w);
          r16.x = t23.SampleBias(s0_s, r16.zw, -1).x;
          r16.x = min(cb0[37].z, r16.x);
          r16.x = 1 + -r16.x;
          r16.y = cb0[36].w * r16.x;
          r16.x = r16.y * -0.5 + r16.x;
          r16.y = -0.5 + r6.z;
          r16.y = r16.y + r16.y;
          r17.z = -1 + cb0[36].w;
          r17.z = saturate(-6.66666794 * r17.z);
          r17.w = r17.z * -2 + 3;
          r17.z = r17.z * r17.z;
          r17.z = r17.w * r17.z;
          r16.y = r17.z * r16.y;
          r16.y = saturate(cb0[36].w * r16.y + cb0[36].w);
          r17.z = cmp(0 < cb0[37].y);
          r17.z = r17.z ? 0.5 : 0.25;
          r17.z = cb0[37].y * r17.z + 0.5;
          r17.z = 0.5 * r17.z;
          r17.z = cb0[40].z ? 0.5 : r17.z;
          r17.w = cb0[37].x * cb0[37].x;
          r13.w = log2(r13.w);
          r13.w = r17.w * r13.w;
          r13.w = exp2(r13.w);
          r13.w = r16.y + -r13.w;
          r13.w = max(0, r13.w);
          r17.w = r13.w + r13.w;
          r17.w = min(1, r17.w);
          r17.w = cb0[37].y * r16.y + r17.w;
          r17.w = -r17.w + r16.x;
          r17.w = saturate(10 * r17.w);
          r18.w = r17.w * -2 + 3;
          r17.w = r17.w * r17.w;
          r17.w = r18.w * r17.w;
          r18.w = r16.x * 0.400000006 + -0.5;
          r18.w = r16.y * r18.w + 0.699999988;
          r19.xyz = -r18.www + r13.xyz;
          r19.xyz = r17.www * r19.xyz + r18.www;
          r19.xyz = cb0[40].zzz ? r19.xyz : r13.xyz;
          r17.w = 1 + r17.z;
          r13.w = saturate(r13.w * r17.w + -r17.z);
          r13.w = r16.x + -r13.w;
          r13.w = saturate(10 * r13.w);
          r17.z = r13.w * -2 + 3;
          r13.w = r13.w * r13.w;
          r13.w = r17.z * r13.w;
          r17.x = r17.x * r13.w;
          r17.zw = float2(0.300000012,2.85714293) * r16.yy;
          r21.xyz = r19.xyz * r16.xxx + -r19.xyz;
          r13.xyz = r17.zzz * r21.xyz + r19.xyz;
          r13.w = asint(cb0[40].w) | asint(cb0[40].x);
          r17.z = min(1, r17.w);
          r17.w = r17.z * -2 + 3;
          r17.z = r17.z * r17.z;
          r17.z = r17.w * r17.z;
          r16.x = cmp(r17.z >= r16.x);
          r16.x = r16.x ? 1.000000 : 0;
          r17.z = 0.800000012 + -r15.x;
          r16.x = r16.x * r17.z + r15.x;
          r15.x = r13.w ? r15.x : r16.x;
        } else {
          r16.y = cb0[36].w;
        }
        r17.zw = float2(-0.5,-0.5) + r16.zw;
        r19.xy = -r17.zw + r14.xy;
        r14.xy = r17.xx * r19.xy + r17.zw;
        if (r11.w != 0) {
          r11.w = saturate(2.22222233 * r10.w);
          r13.w = rsqrt(r11.w);
          r13.w = 1 / r13.w;
          r16.x = r13.w + -r16.w;
          r17.z = cmp(r13.w < r16.w);
          if (r17.z != 0) {
            r17.z = log2(abs(r16.x));
            r17.z = 0.200000003 * r17.z;
            r17.z = exp2(r17.z);
            r17.z = 1 + -r17.z;
            r17.x = r17.x * r17.z;
            r13.xyz = float3(0,0,0);
          } else {
            r10.w = saturate(1.11111116 * r10.w);
            r13.w = r16.x + r13.w;
            r13.w = abs(r16.x) * 0.300000012 + r13.w;
            r17.z = log2(r16.w);
            r17.z = 0.200000003 * r17.z;
            r17.z = exp2(r17.z);
            r13.w = -1 + r13.w;
            r19.y = r17.z * r13.w + 1;
            r13.w = cmp(r19.y < 1);
            if (r13.w != 0) {
              r19.x = r16.z;
              r19.xy = saturate(r19.xy);
              r19.xyzw = t40.SampleBias(s0_s, r19.xy, -1).xyzw;
              r13.w = dot(r19.xyz, float3(0.298999995,0.587000012,0.114));
              r17.z = 0.300000012 + -r13.w;
              r13.w = r17.z * 0.800000012 + r13.w;
              r16.x = log2(abs(r16.x));
              r17.zw = float2(0.200000003,0.100000001) * r16.xx;
              r17.zw = exp2(r17.zw);
              r16.x = saturate(12.75 * r19.w);
              r18.w = 1 + -r17.w;
              r11.w = r11.w * r18.w + r17.w;
              r19.xyz = r13.xyz * r11.www;
              r21.xyz = r13.www * r17.zzz + -r19.xyz;
              r13.xyz = r16.xxx * r21.xyz + r19.xyz;
              r17.x = max(r17.x, r16.x);
              r19.xyz = float3(0,0,1) + -r14.xyz;
              r14.xyz = r16.xxx * r19.xyz + r14.xyz;
              r15.y = r16.x * -r15.y + r15.y;
              r13.w = 0.800000012 + -r15.x;
              r15.x = r16.x * r13.w + r15.x;
              r13.w = 1 + -r17.y;
              r17.y = r16.x * r13.w + r17.y;
              r11.w = r11.w + -r12.z;
              r12.z = r16.x * r11.w + r12.z;
            } else {
              r14.w = r14.z;
              r14.xyz = r14.xyw;
            }
            r11.w = cmp(r10.w >= 0.5);
            r11.w = r11.w ? 1.000000 : 0;
            r10.w = -1 + r10.w;
            r10.w = -2 * r10.w;
            r10.w = min(1, r10.w);
            r13.w = r10.w * -2 + 3;
            r10.w = r10.w * r10.w;
            r10.w = r13.w * r10.w;
            r10.w = log2(r10.w);
            r10.w = 20 * r10.w;
            r10.w = exp2(r10.w);
            r10.w = r11.w * r10.w;
            r19.xyz = r13.xyz * r10.www;
            r13.xyz = r19.xyz * float3(9,9,9) + r13.xyz;
          }
        }
        if (r9.w == 0) {
          r19.xyz = r20.xyz * r15.www;
          r19.xyz = r19.xyz + r19.xyz;
          r19.xyz = cb0[41].www ? r19.xyz : float3(0,0,0);
          r9.w = cb4[39].z + -cb0[42].x;
          r10.w = cmp(r9.w < 2);
          r9.w = -r9.w * 0.5 + 1;
          r11.w = r9.w * r9.w;
          r11.w = r11.w * r11.w;
          r20.xyz = r9.www * r11.www + r13.xyz;
          r13.xyz = r10.www ? r20.xyz : r13.xyz;
          r15.z = r17.y * r17.x;
          r17.yzw = r13.xyz + r13.xyz;
          r17.yzw = cb0[13].zzz ? r17.yzw : r13.xyz;
          r16.xz = float2(8,8) * r16.zw;
          r16.xz = floor(r16.xz);
          r9.w = r16.x + r16.z;
          r9.w = 0.5 * r9.w;
          r9.w = frac(r9.w);
          r10.w = dot(r17.yzw, float3(0.212500006,0.715399981,0.0720999986));
          r10.w = saturate(0.600000024 * r10.w);
          r10.w = 0.200000003 + r10.w;
          r9.w = r9.w * 0.200200006 + r10.w;
          r9.w = r9.w * r2.w;
          r20.z = 0.899999976 * r15.z;
          r16.xzw = cb0[13].xxx ? r9.www : r17.yzw;
          r17.yzw = cb0[13].xxx ? float3(0,0,1) : r14.xyz;
          r20.xy = float2(0.800000012,0);
          r20.xyz = cb0[13].xxx ? r20.xyz : r15.xyz;
          r21.xyz = cb0[13].xxx ? float3(0,0,0) : r18.xyz;
          r13.xyz = saturate(r8.www ? r16.xzw : r13.xyz);
          r14.xyz = r8.www ? r17.yzw : r14.xyz;
          r16.xzw = r8.www ? r21.xyz : r18.xyz;
          r15.xyz = r8.www ? r20.xyz : r15.xyz;
          r13.xyz = r13.xyz + -r5.xyz;
          r5.xyz = r15.zzz * r13.xyz + r5.xyz;
          r13.xyz = r14.xyz + -r7.xyz;
          r13.xyz = r15.zzz * r13.xyz + r7.xyz;
          r8.w = dot(r13.xyz, r13.xyz);
          r8.w = rsqrt(r8.w);
          r7.xyz = r13.xyz * r8.www;
          r8.w = r15.y + -r3.w;
          r3.w = r15.z * r8.w + r3.w;
          r13.xy = r15.xx + -r0.xy;
          r0.xy = r15.zz * r13.xy + r0.xy;
          r8.w = r12.z + -r2.w;
          r2.w = r17.x * r8.w + r2.w;
          r13.xyz = r16.xzw + -r10.xyz;
          r10.xyz = r15.zzz * r13.xyz + r10.xyz;
          r8.w = 0.0399999991 + -r1.y;
          r1.y = r15.z * r8.w + r1.y;
          r6.x = r15.z * -r6.x + r6.x;
          r13.xyz = r19.xyz + -r12.xyw;
          r12.xyw = r15.zzz * r13.xyz + r12.xyw;
          r5.w = max(r15.z, r5.w);
          r8.w = 1 + -r16.y;
          r8.w = r15.z * r8.w;
          r6.w = max(r8.w, r6.w);
          r0.z = cb4[3].y ? r15.z : r0.z;
        } else {
          r0.z = r7.w;
        }
      } else {
        r0.z = r7.w;
      }
    }
    r7.w = asint(cb0[0].y) | asint(cb0[42].y);
    if (r7.w != 0) {
      r7.w = cb4[3].y ? 0 : r0.z;
      r13.xy = cmp(cb0[43].xy == float2(0,0));
      r8.w = (int)r13.y | (int)r13.x;
      r9.w = cmp(r6.y == 0.000000);
      r8.w = (int)r8.w | (int)r9.w;
      if (r8.w == 0) {
        r8.w = cmp(asint(cb0[12].w) == 5);
        r13.xy = float2(-0.5,-0.5) + v3.wz;
        r13.xy = -cb0[42].wz + r13.xy;
        r13.xy = abs(cb0[43].xx) * r13.xy;
        r9.w = 6.28318024 * cb0[43].z;
        sincos(r9.w, r14.x, r15.x);
        r13.zw = r14.xx * r13.xy;
        r16.x = r13.y * r15.x + -r13.z;
        r16.y = r13.x * r15.x + r13.w;
        r13.xy = float2(0.5,0.5) + r16.xy;
        r16.xyzw = saturate(r13.xyxy);
        r13.xy = cmp(r13.xy != r16.xy);
        r9.w = (int)r13.y | (int)r13.x;
        r10.w = cmp(asint(cb0[13].x) == 0);
        r10.w = r8.w ? r10.w : 0;
        r11.w = cb4[39].z + -cb0[13].y;
        r10.w = r10.w ? r11.w : 0.899999976;
        r11.w = cmp(r10.w < 0.899999976);
        r13.xyzw = t45.SampleBias(s0_s, r16.zw, -1).xyzw;
        r12.z = saturate(12.75 * r13.w);
        r17.x = r12.z * r6.y;
        t45.GetDimensions(0, fDest.x, fDest.y, fDest.z);
        r14.yz = fDest.xy;
        r14.yz = float2(1,1) / r14.yz;
        r15.yz = float2(1,1) + -r14.yz;
        r14.yz = max(r16.zw, r14.yz);
        r14.yz = min(r14.yz, r15.yz);
        r14.y = t45.CalculateLevelOfDetail(s0_s, r14.yz);
        r14.z = saturate(-3 + r14.y);
        r14.z = 1 + -r14.z;
        r14.w = cmp(0 < r14.z);
        if (r14.w != 0) {
          r15.yz = float2(-0.5,-0.5) + r16.zw;
          r18.xyz = cb1[21].yzx * cb1[20].zxy;
          r18.xyz = cb1[20].yzx * cb1[21].zxy + -r18.xyz;
          r14.w = dot(r18.xyz, -r11.xyz);
          r11.x = dot(cb1[21].xyz, r11.xyz);
          r11.y = r11.x * r14.x;
          r16.x = r14.w * r15.x + -r11.y;
          r11.x = r11.x * r15.x;
          r16.y = r14.w * r14.x + r11.x;
          r11.xy = -r16.xy * float2(0.00999999978,0.00999999978) + r15.yz;
          r11.xy = saturate(float2(0.5,0.5) + r11.xy);
          r11.x = t45.SampleBias(s0_s, r11.xy, 1).w;
          r11.x = saturate(12.75 * r11.x);
          r11.x = r11.x * r6.y;
          r11.x = 0.699999988 * r11.x;
          r11.x = max(r17.x, r11.x);
          r11.x = -r12.z * r6.y + r11.x;
          r17.z = r14.z * r11.x + r17.x;
          r17.xy = r17.zx;
        } else {
          r17.y = 1;
        }
        r11.x = cmp(0 >= r17.x);
        r11.y = ~(int)r11.w;
        r11.x = r11.x ? r11.y : 0;
        r9.w = (int)r9.w | (int)r11.x;
        r15.xyzw = t47.SampleBias(s0_s, r16.zw, -1).zxyw;
        r11.x = r15.y + r15.z;
        r11.x = -1.00392163 + r11.x;
        r11.y = r15.y + -r15.z;
        r12.z = 1 + -abs(r11.x);
        r11.z = r12.z + -abs(r11.y);
        r12.z = dot(r11.xyz, r11.xyz);
        r12.z = rsqrt(r12.z);
        r18.xyz = r12.zzz * r11.xyz;
        r11.x = max(3, r14.y);
        r11.yz = t20.SampleLevel(s0_s, r1.zw, r11.x).xy;
        r12.z = r11.y + r11.z;
        r14.x = -1.00392163 + r12.z;
        r14.y = r11.y + -r11.z;
        r11.y = 1 + -abs(r14.x);
        r14.z = r11.y + -abs(r14.y);
        r11.y = dot(r14.xyz, r14.xyz);
        r11.y = rsqrt(r11.y);
        r14.xyz = r14.xyz * r11.yyy;
        r18.w = -r18.y;
        r18.xyz = r18.xwz * r17.xxx;
        r14.w = -r14.y;
        r14.xyz = r18.xyz * float3(2,2,2) + r14.xwz;
        r11.y = dot(r14.xyz, r14.xyz);
        r11.y = rsqrt(r11.y);
        r14.xyz = r14.xyz * r11.yyy;
        r1.z = t21.SampleLevel(s0_s, r1.zw, r11.x).x;
        r1.z = log2(r1.z);
        r1.z = 0.75 * r1.z;
        r1.z = exp2(r1.z);
        r11.x = r17.y * 0.5 + 0.5;
        r1.z = min(r11.x, r1.z);
        r15.y = cb0[47].x ? 1 : 0;
        if (cb0[48].x != 0) {
          r11.x = t49.SampleBias(s0_s, r16.zw, -1).w;
          r11.x = 1 + -r11.x;
          r11.y = cmp(0 != r11.x);
          if (r11.y != 0) {
            r11.y = cb4[2].x ? 2.5 : 1.75;
            r11.y = cb0[48].z * r11.y;
            r18.xyz = cb1[19].xyz + -r4.yzw;
            r11.z = dot(r18.xyz, r18.xyz);
            r11.z = rsqrt(r11.z);
            r18.xyz = r18.xyz * r11.zzz;
            r16.xy = r16.zw * r11.yy;
            r17.zw = float2(0.5,0.5) + r16.zw;
            r11.yz = r17.zw * r11.yy;
            r17.zw = ddx_coarse(r16.xy);
            r19.xy = ddy_coarse(r16.xy);
            r17.zw = max(r19.xy, r17.zw);
            r12.z = min(r17.z, r17.w);
            r12.z = saturate(-r12.z * 40 + 1);
            r19.xyz = t48.Sample(s9_s, r16.xy).xyw;
            r16.x = r19.x + r19.y;
            r20.x = -1.00392163 + r16.x;
            r20.y = r19.x + -r19.y;
            r16.x = 1 + -abs(r20.x);
            r20.z = r16.x + -abs(r20.y);
            r16.x = dot(r20.xyz, r20.xyz);
            r16.x = rsqrt(r16.x);
            r19.xyw = r20.xyz * r16.xxx;
            r19.xyw = r19.xyw * r19.www;
            r20.xyz = r19.yyy * r9.xyz;
            r20.xyz = r19.xxx * v6.xyz + r20.xyz;
            r20.xyz = r19.www * r3.xyz + r20.xyz;
            r16.x = dot(r20.xyz, r20.xyz);
            r16.x = rsqrt(r16.x);
            r20.xyz = r20.xyz * r16.xxx;
            r16.x = dot(r18.xyz, r20.xyz);
            r16.x = r16.x + r16.x;
            r20.xyz = r20.xyz * -r16.xxx + r18.xyz;
            r20.xyz = float3(12,12,12) * r20.xyz;
            r20.xyz = sin(r20.xyz);
            r21.xyz = max(float3(0,0,0), -r20.xyz);
            r16.x = dot(r21.xyz, float3(0.212500006,0.715399981,0.0720999986));
            r16.x = r16.x * r16.x;
            r21.xyz = saturate(float3(0.149999976,0.149999976,0.149999976) + -r20.xyz);
            r16.y = dot(r21.xyz, float3(0.212500006,0.715399981,0.0720999986));
            r16.y = 0.25 * r16.y;
            r16.x = r16.x * r16.x + r16.y;
            r20.xyz = float3(-0.99000001,-0.99000001,-0.99000001) + r20.xyz;
            r20.xyz = max(float3(0,0,0), r20.xyz);
            r20.xyz = float3(100.000099,100.000099,100.000099) * r20.xyz;
            r21.xyz = r20.yzx * r20.yzx;
            r20.xyz = r21.xyz * r21.xyz + r20.xyz;
            r20.xyz = r20.xyz * float3(3,3,3) + r16.xxx;
            r20.xyz = r20.xyz * r19.zzz;
            r12.z = r12.z * r11.x;
            r12.z = 0.0399999991 * r12.z;
            r16.xy = r19.xy * r12.zz + r14.xy;
            r19.xyz = t48.SampleLevel(s2_s, r11.yz, 0).xyw;
            r11.y = r19.x + r19.y;
            r21.x = -1.00392163 + r11.y;
            r21.y = r19.x + -r19.y;
            r11.y = 1 + -abs(r21.x);
            r21.z = r11.y + -abs(r21.y);
            r11.y = dot(r21.xyz, r21.xyz);
            r11.y = rsqrt(r11.y);
            r19.xyw = r21.xyz * r11.yyy;
            r21.xyz = r19.yyy * r9.xyz;
            r21.xyz = r19.xxx * v6.xyz + r21.xyz;
            r21.xyz = r19.www * r3.xyz + r21.xyz;
            r11.y = dot(r21.xyz, r21.xyz);
            r11.y = rsqrt(r11.y);
            r21.xyz = r21.xyz * r11.yyy;
            r11.y = dot(r18.xyz, r21.xyz);
            r11.y = r11.y + r11.y;
            r18.xyz = r21.xyz * -r11.yyy + r18.xyz;
            r18.xyz = float3(12,12,12) * r18.xyz;
            r18.xyz = sin(r18.xyz);
            r21.xyz = max(float3(0,0,0), -r18.xyz);
            r11.y = dot(r21.xyz, float3(0.212500006,0.715399981,0.0720999986));
            r11.y = r11.y * r11.y;
            r21.xyz = saturate(float3(0.149999976,0.149999976,0.149999976) + -r18.xyz);
            r11.z = dot(r21.xyz, float3(0.212500006,0.715399981,0.0720999986));
            r11.z = 0.25 * r11.z;
            r11.y = r11.y * r11.y + r11.z;
            r18.xyz = float3(-0.99000001,-0.99000001,-0.99000001) + r18.xyz;
            r18.xyz = max(float3(0,0,0), r18.xyz);
            r18.xyz = float3(100.000099,100.000099,100.000099) * r18.xyz;
            r21.xyz = r18.yzx * r18.yzx;
            r18.xyz = r21.xyz * r21.xyz + r18.xyz;
            r18.xyz = r18.xyz * float3(3,3,3) + r11.yyy;
            r18.xyz = r18.xyz * r19.zzz;
            r18.xyz = max(r20.xyz, r18.xyz);
            r20.xyz = saturate(r13.xyz);
            r11.y = dot(r20.xyz, float3(0.212500006,0.715399981,0.0720999986));
            r11.z = max(r13.y, r13.z);
            r11.z = max(r13.x, r11.z);
            r11.z = log2(r11.z);
            r11.z = cb0[9].y * r11.z;
            r11.z = exp2(r11.z);
            r11.z = min(1, r11.z);
            r17.z = cb0[9].z + -cb0[9].x;
            r11.z = r11.z * r17.z + cb0[9].x;
            r20.xyz = max(float3(0.000300000014,0.000300000014,0.000300000014), r13.xyz);
            r17.z = dot(r20.xyz, r20.xyz);
            r17.z = rsqrt(r17.z);
            r20.xyz = r20.xyz * r17.zzz;
            r20.xyz = float3(1.05999994,1.05999994,1.05999994) * r20.xyz;
            r21.xyz = r20.xyz * r11.zzz;
            r22.xyz = cb0[9].xxx * r20.xyz;
            r22.xyz = float3(1.73199999,1.73199999,1.73199999) * r22.xyz;
            r11.z = dot(r20.xyz, r20.xyz);
            r11.z = sqrt(r11.z);
            r22.xyz = r22.xyz / r11.zzz;
            r11.z = dot(r20.xyz, float3(0.212500006,0.715399981,0.0720999986));
            r20.xyz = r22.xyz / r11.zzz;
            r20.xyz = max(r20.xyz, r21.xyz);
            r11.z = -0.000300000014 + cb0[9].x;
            r11.y = -0.000300000014 + r11.y;
            r11.z = 1 / r11.z;
            r11.y = saturate(r11.y * r11.z);
            r11.z = r11.y * -2 + 3;
            r11.y = r11.y * r11.y;
            r11.y = r11.z * r11.y;
            r11.y = rsqrt(r11.y);
            r11.y = 1 / r11.y;
            r20.xyz = -cb0[9].xxx + r20.xyz;
            r20.xyz = r11.yyy * r20.xyz + cb0[9].xxx;
            r20.xyz = cb0[46].xxx ? r20.xyz : r13.xyz;
            r20.xyz = cb0[46].www * r20.xyz;
            r18.xyz = r20.xyz * r18.xyz;
            r11.yz = r19.xy * r12.zz;
            r14.xy = r11.yz * r19.zz + r16.xy;
            r11.y = 0.5 * r11.x;
            r15.y = max(r15.y, r11.y);
            r11.xyz = r18.xyz * r11.xxx;
          } else {
            r11.xyz = r10.xyz;
          }
        } else {
          r11.xyz = r10.xyz;
        }
        if (cb0[46].x != 0) {
          r18.xyz = float3(-1,-1,-1) + cb0[45].xyz;
          r18.xyz = r15.yyy * r18.xyz + float3(1,1,1);
          r12.z = cb0[45].w * r15.y;
          if (cb0[46].y != 0) {
            r16.x = dot(r13.xyz, float3(0.212500006,0.715399981,0.0720999986));
            r19.xyz = r16.xxx + -r13.xyz;
            r19.xyz = r12.zzz * r19.xyz + r13.xyz;
            r19.xyz = saturate(r19.xyz * r18.xyz);
            r20.xyz = max(float3(0.000300000014,0.000300000014,0.000300000014), r19.xyz);
            r16.x = dot(r20.xyz, r20.xyz);
            r16.x = rsqrt(r16.x);
            r20.xyz = r20.xyz * r16.xxx;
            r20.xyz = float3(1.05999994,1.05999994,1.05999994) * r20.xyz;
            r16.x = max(r19.y, r19.z);
            r16.x = max(r19.x, r16.x);
            r16.x = cb0[46].z * r16.x;
            r19.xyz = saturate(cb0[46].zzz * r19.xyz);
            r16.y = dot(r19.xyz, float3(0.212500006,0.715399981,0.0720999986));
            r17.zw = float2(-0.550000012,-0.000300000014) + r16.yy;
            r17.z = saturate(-1.87125754 * r17.z);
            r18.w = r17.z * -2 + 3;
            r17.z = r17.z * r17.z;
            r17.z = r18.w * r17.z;
            r19.xyz = -cb0[11].xyz + cb0[10].xyz;
            r19.xyz = r17.zzz * r19.xyz + cb0[11].xyz;
            r19.xyz = -cb0[9].xyz + r19.xyz;
            r19.xyz = r15.yyy * r19.xyz + cb0[9].xyz;
            r17.z = cb0[10].x + -cb0[9].x;
            r17.z = r15.y * r17.z + cb0[9].x;
            r16.x = log2(r16.x);
            r16.x = r19.y * r16.x;
            r16.x = exp2(r16.x);
            r16.x = min(1, r16.x);
            r18.w = r19.z + -r19.x;
            r16.x = r16.x * r18.w + r19.x;
            r19.xyw = r16.xxx * r20.xyz;
            r21.xyz = r20.xyz * r17.zzz;
            r21.xyz = float3(1.73199999,1.73199999,1.73199999) * r21.xyz;
            r16.x = dot(r20.xyz, r20.xyz);
            r16.x = sqrt(r16.x);
            r21.xyz = r21.xyz / r16.xxx;
            r16.x = dot(r20.xyz, float3(0.212500006,0.715399981,0.0720999986));
            r20.xyz = r21.xyz / r16.xxx;
            r19.xyw = max(r20.xyz, r19.xyw);
            r20.xyz = r19.xyw + r16.yyy;
            r20.xyz = min(r20.xyz, r19.zzz);
            r16.x = -1 + cb0[46].z;
            r16.x = max(0, r16.x);
            r16.x = 0.0158730168 * r16.x;
            r20.xyz = r20.xyz + -r19.xyw;
            r19.xyz = r16.xxx * r20.xyz + r19.xyw;
            r16.x = -0.000300000014 + r17.z;
            r16.x = 1 / r16.x;
            r16.x = saturate(r17.w * r16.x);
            r16.y = r16.x * -2 + 3;
            r16.x = r16.x * r16.x;
            r16.x = r16.y * r16.x;
            r16.x = rsqrt(r16.x);
            r16.x = 1 / r16.x;
            r19.xyz = r19.xyz + -r17.zzz;
            r19.xyz = r16.xxx * r19.xyz + r17.zzz;
          } else {
            r20.xyz = r18.xyz * r13.xyz;
            r18.xyz = -r18.xyz * r13.xyz + r18.xyz;
            r18.xyz = r12.zzz * r18.xyz + r20.xyz;
            r18.xyz = max(float3(0.000300000014,0.000300000014,0.000300000014), r18.xyz);
            r12.z = dot(r18.xyz, r18.xyz);
            r12.z = rsqrt(r12.z);
            r18.xyz = r18.xyz * r12.zzz;
            r18.xyz = float3(1.05999994,1.05999994,1.05999994) * r18.xyz;
            r12.z = max(r13.y, r13.z);
            r12.z = max(r13.x, r12.z);
            r12.z = cb0[46].z * r12.z;
            r20.xyz = saturate(cb0[46].zzz * r13.xyz);
            r16.x = dot(r20.xyz, float3(0.212500006,0.715399981,0.0720999986));
            r17.zw = float2(-0.550000012,-0.000300000014) + r16.xx;
            r16.y = saturate(-1.87125754 * r17.z);
            r17.z = r16.y * -2 + 3;
            r16.y = r16.y * r16.y;
            r16.y = r17.z * r16.y;
            r20.xyz = -cb0[11].xyz + cb0[10].xyz;
            r20.xyz = r16.yyy * r20.xyz + cb0[11].xyz;
            r20.xyz = -cb0[9].xyz + r20.xyz;
            r20.xyz = r15.yyy * r20.xyz + cb0[9].xyz;
            r16.y = cb0[10].x + -cb0[9].x;
            r16.y = r15.y * r16.y + cb0[9].x;
            r12.z = log2(r12.z);
            r12.z = r20.y * r12.z;
            r12.z = exp2(r12.z);
            r12.z = min(1, r12.z);
            r17.z = r20.z + -r20.x;
            r12.z = r12.z * r17.z + r20.x;
            r20.xyw = r12.zzz * r18.xyz;
            r21.xyz = r18.xyz * r16.yyy;
            r21.xyz = float3(1.73199999,1.73199999,1.73199999) * r21.xyz;
            r12.z = dot(r18.xyz, r18.xyz);
            r12.z = sqrt(r12.z);
            r21.xyz = r21.xyz / r12.zzz;
            r12.z = dot(r18.xyz, float3(0.212500006,0.715399981,0.0720999986));
            r18.xyz = r21.xyz / r12.zzz;
            r18.xyz = max(r18.xyz, r20.xyw);
            r20.xyw = r18.xyz + r16.xxx;
            r20.xyz = min(r20.zzz, r20.xyw);
            r12.z = -1 + cb0[46].z;
            r12.z = max(0, r12.z);
            r12.z = 0.0158730168 * r12.z;
            r20.xyz = r20.xyz + -r18.xyz;
            r18.xyz = r12.zzz * r20.xyz + r18.xyz;
            r12.z = -0.000300000014 + r16.y;
            r12.z = 1 / r12.z;
            r12.z = saturate(r17.w * r12.z);
            r16.x = r12.z * -2 + 3;
            r12.z = r12.z * r12.z;
            r12.z = r16.x * r12.z;
            r12.z = rsqrt(r12.z);
            r12.z = 1 / r12.z;
            r18.xyz = r18.xyz + -r16.yyy;
            r19.xyz = r12.zzz * r18.xyz + r16.yyy;
          }
        } else {
          r12.z = dot(r13.xyz, float3(0.212500006,0.715399981,0.0720999986));
          r18.xyz = r12.zzz + -r13.xyz;
          r18.xyz = cb0[45].www * r18.xyz + r13.xyz;
          r18.xyz = cb0[45].xyz * r18.xyz;
          r12.z = cb0[46].y ? cb0[46].z : 1;
          r18.xyz = r18.xyz * r12.zzz;
          r19.xyz = cb0[47].xxx ? r18.xyz : r13.xyz;
        }
        if (cb0[47].y != 0) {
          r18.xyzw = t49.SampleBias(s9_s, r16.zw, -1).xyzw;
          r13.xyz = t49.SampleBias(s0_s, r16.zw, -1).xyz;
          r13.xyz = r13.xyz + -r18.xyz;
          r20.yzw = r18.www * r13.xyz + r18.xyz;
          r12.z = cmp(0 < r20.y);
          if (r12.z != 0) {
            r13.xyz = cb1[19].xyz + -r4.yzw;
            r12.z = dot(r13.xyz, r13.xyz);
            r12.z = rsqrt(r12.z);
            r13.xyz = r13.xyz * r12.zzz;
            r12.z = dot(r13.xyz, r3.xyz);
            r16.x = cmp(0.000000 != cb4[36].y);
            r18.xyz = cb1[33].xyz + r4.yzw;
            r21.xyz = -cb1[20].xyz * cb4[36].yyy + r18.xyz;
            r18.xyz = cb1[33].xyz + cb1[19].xyz;
            r18.xyz = cb1[22].www * cb1[20].xyz + r18.xyz;
            r22.w = dot(r18.xyz, cb1[20].xyz);
            r21.w = 1;
            r22.xyz = cb1[20].xyz;
            r16.y = dot(r21.xyzw, r22.xyzw);
            r17.z = cmp(0 >= r16.y);
            r18.xyz = r16.yyy * -cb1[20].xyz + r4.yzw;
            r18.xyz = r17.zzz ? r4.yzw : r18.xyz;
            r21.xyz = cb4[13].xyw * r18.yyy;
            r21.xyz = cb4[12].xyw * r18.xxx + r21.xyz;
            r21.xyz = cb4[14].xyw * r18.zzz + r21.xyz;
            r21.xyz = cb4[15].xyw + r21.xyz;
            r17.zw = r21.xy / r21.zz;
            r16.y = 1 + r17.z;
            r16.y = cb1[26].z * r16.y;
            r16.y = 0.5 * r16.y;
            r22.xy = cb1[26].zw + float2(-1,-1);
            r16.y = max(0, r16.y);
            r21.x = min(r16.y, r22.x);
            r16.y = 1 + -r17.w;
            r16.y = cb1[26].w * r16.y;
            r16.y = 0.5 * r16.y;
            r16.y = max(0, r16.y);
            r21.y = min(r16.y, r22.y);
            r22.xyz = r16.xxx ? r18.xyz : r4.yzw;
            r18.xyz = r16.xxx ? r21.xyz : v8.xyw;
            r16.xy = -cb1[26].xy + r18.xy;
            r16.xy = (uint2)r16.xy;
            r16.xy = (uint2)r16.xy >> asuint(cb3[25].xx);
            r16.x = mad((int)r16.y, asint(cb3[25].y), (int)r16.x);
            r16.x = mad((int)r16.x, asint(cb3[24].z), asint(cb3[24].y));
            r16.y = cb3[26].x * r18.z;
            r16.y = max(0, r16.y);
            r16.y = min(cb3[26].y, r16.y);
            r16.y = (uint)r16.y;
            r16.y = mad((int)r16.y, asint(cb3[24].z), asint(cb3[24].x));
            r22.w = 1;
            r18.xyz = float3(0,0,0);
            r21.xyz = float3(0,0,0);
            r23.xyz = float3(0,0,0);
            r24.xyz = float3(0,0,0);
            r25.xyz = float3(0,0,0);
            r26.xyz = float3(0,0,0);
            r17.zw = float2(0,0);
            r19.w = 0;
            while (true) {
              r21.w = cmp((uint)r19.w < asuint(cb3[24].z));
              r23.w = ~(int)r17.w;
              r21.w = r21.w ? r23.w : 0;
              if (r21.w == 0) break;
              r21.w = (int)r16.x + (int)r19.w;
              r21.w = t13[r21.w].val[0/4];
              r23.w = (int)r16.y + (int)r19.w;
              r23.w = t13[r23.w].val[0/4];
              r21.w = (int)r21.w & (int)r23.w;
              r23.w = (uint)r19.w << 5;
              r27.xyz = r18.xyz;
              r28.xyz = r21.xyz;
              r29.xyz = r23.xyz;
              r30.xyz = r24.xyz;
              r31.xyz = r25.xyz;
              r32.xyz = r26.xyz;
              r24.w = r17.z;
              r25.w = r17.w;
              r26.w = r21.w;
              while (true) {
                if (r26.w == 0) break;
                r27.w = firstbitlow((uint)r26.w);
                r27.w = (int)r23.w + (int)r27.w;
                r28.w = (int)r26.w + -1;
                r28.w = (int)r26.w & (int)r28.w;
                r27.w = (int)r27.w * 6;
                r33.x = dot(r22.xyzw, cb3[r27.w+1180].xyzw);
                r33.y = dot(r22.xyzw, cb3[r27.w+1181].xyzw);
                r33.z = dot(r22.xyzw, cb3[r27.w+1182].xyzw);
                r34.xyz = -cb3[r27.w+1183].xyz + r33.xyz;
                r34.xyz = saturate(cb3[r27.w+1185].xyz * r34.xyz);
                r33.xyz = cb3[r27.w+1184].xyz + -r33.xyz;
                r33.xyz = saturate(cb3[r27.w+1185].xyz * r33.xyz);
                r29.w = min(r34.y, r34.z);
                r29.w = min(r34.x, r29.w);
                r30.w = min(r33.y, r33.z);
                r30.w = min(r33.x, r30.w);
                r29.w = min(r30.w, r29.w);
                r30.w = cmp(r29.w == 0.000000);
                if (r30.w != 0) {
                  r26.w = r28.w;
                  continue;
                }
                r30.w = r29.w * r29.w;
                r29.w = r29.w * -2 + 3;
                r29.w = r30.w * r29.w;
                r30.w = 1 + -r24.w;
                r31.w = r30.w * r29.w;
                r29.w = r29.w * r30.w + r24.w;
                r27.w = 9 * asint(cb3[r27.w+1185].w);
                r33.x = dot(r22.xyzw, cb2[r27.w+0].xyzw);
                r33.y = dot(r22.xyzw, cb2[r27.w+1].xyzw);
                r30.w = dot(r22.xyzw, cb2[r27.w+2].xyzw);
                r33.z = 0.166666672 * r30.w;
                r33.xyz = max(cb2[r27.w+3].xyz, r33.xyz);
                r33.xyz = min(cb2[r27.w+4].xyz, r33.xyz);
                r33.w = 6 * r33.z;
                r33.xyz = r33.xyw * cb2[r27.w+6].xyz + cb2[r27.w+7].xyz;
                r33.w = 0.166666672 * r33.z;
                r34.xyz = t16.SampleLevel(s1_s, r33.xyw, 0).xyz;
                r34.xyz = cb2[r27.w+5].xyz * r34.xyz;
                r35.xyz = float3(0,0,0.166666672) + r33.xyw;
                r35.xyz = t16.SampleLevel(s1_s, r35.xyz, 0).xyz;
                r35.xyz = cb2[r27.w+5].xyz * r35.xyz;
                r36.xyz = float3(0,0,0.333333343) + r33.xyw;
                r36.xyz = t16.SampleLevel(s1_s, r36.xyz, 0).xyz;
                r36.xyz = cb2[r27.w+5].xyz * r36.xyz;
                r37.xyz = float3(0,0,0.5) + r33.xyw;
                r37.xyz = t16.SampleLevel(s1_s, r37.xyz, 0).xyz;
                r37.xyz = cb2[r27.w+5].xyz * r37.xyz;
                r38.xyz = float3(0,0,0.666666687) + r33.xyw;
                r38.xyz = t16.SampleLevel(s1_s, r38.xyz, 0).xyz;
                r38.xyz = cb2[r27.w+5].xyz * r38.xyz;
                r33.xyz = float3(0,0,0.833333313) + r33.xyw;
                r33.xyz = t16.SampleLevel(s1_s, r33.xyz, 0).xyz;
                r33.xyz = cb2[r27.w+5].xyz * r33.xyz;
                r34.xyz = r31.www * r34.xyz + r27.xyz;
                r35.xyz = r31.www * r35.xyz + r28.xyz;
                r36.xyz = r31.www * r36.xyz + r29.xyz;
                r37.xyz = r31.www * r37.xyz + r30.xyz;
                r38.xyz = r31.www * r38.xyz + r31.xyz;
                r33.xyz = r31.www * r33.xyz + r32.xyz;
                r27.w = cmp(0.99000001 < r29.w);
                if (r27.w != 0) {
                  r27.xyz = r34.xyz;
                  r28.xyz = r35.xyz;
                  r29.xyz = r36.xyz;
                  r30.xyz = r37.xyz;
                  r31.xyz = r38.xyz;
                  r32.xyz = r33.xyz;
                  r24.w = r29.w;
                  r25.w = -1;
                  break;
                }
                r27.xyz = r34.xyz;
                r28.xyz = r35.xyz;
                r29.xyz = r36.xyz;
                r30.xyz = r37.xyz;
                r31.xyz = r38.xyz;
                r32.xyz = r33.xyz;
                r24.w = r29.w;
                r26.w = r28.w;
              }
              r18.xyz = r27.xyz;
              r21.xyz = r28.xyz;
              r23.xyz = r29.xyz;
              r24.xyz = r30.xyz;
              r25.xyz = r31.xyz;
              r26.xyz = r32.xyz;
              r17.z = r24.w;
              r17.w = r25.w;
              r19.w = (int)r19.w + 1;
            }
            r16.x = cmp(r17.z < 0.99000001);
            if (r16.x != 0) {
              r16.x = 1 + -r17.z;
              r22.x = dot(cb3[7].xw, float2(1,1));
              r22.y = dot(cb3[8].xw, float2(1,1));
              r22.z = dot(cb3[9].xw, float2(1,1));
              r18.xyz = r16.xxx * r22.xyz + r18.xyz;
              r22.x = dot(cb3[7].yw, float2(1,1));
              r22.y = dot(cb3[8].yw, float2(1,1));
              r22.z = dot(cb3[9].yw, float2(1,1));
              r21.xyz = r16.xxx * r22.xyz + r21.xyz;
              r22.x = dot(cb3[7].zw, float2(1,1));
              r22.y = dot(cb3[8].zw, float2(1,1));
              r22.z = dot(cb3[9].zw, float2(1,1));
              r23.xyz = r16.xxx * r22.xyz + r23.xyz;
              r22.x = dot(cb3[7].xw, float2(-1,1));
              r22.y = dot(cb3[8].xw, float2(-1,1));
              r22.z = dot(cb3[9].xw, float2(-1,1));
              r24.xyz = r16.xxx * r22.xyz + r24.xyz;
              r22.x = dot(cb3[7].yw, float2(-1,1));
              r22.y = dot(cb3[8].yw, float2(-1,1));
              r22.z = dot(cb3[9].yw, float2(-1,1));
              r25.xyz = r16.xxx * r22.xyz + r25.xyz;
              r22.x = dot(cb3[7].zw, float2(-1,1));
              r22.y = dot(cb3[8].zw, float2(-1,1));
              r22.z = dot(cb3[9].zw, float2(-1,1));
              r26.xyz = r16.xxx * r22.xyz + r26.xyz;
            }
            r22.xyz = r14.yyy * r9.xyz;
            r22.xyz = r14.xxx * v6.xyz + r22.xyz;
            r22.xyz = r14.zzz * r3.xyz + r22.xyz;
            r16.x = dot(r22.xyz, r22.xyz);
            r16.x = rsqrt(r16.x);
            r16.xy = r22.xy * r16.xx;
            r17.z = dot(r18.xyz, float3(0.212500006,0.715399981,0.0720999986));
            r18.xy = max(float2(0,0), r16.xy);
            r17.w = dot(r24.xyz, float3(0.212500006,0.715399981,0.0720999986));
            r16.xy = max(float2(0,0), -r16.xy);
            r17.w = r17.w * r16.x;
            r22.x = r17.z * r18.x + -r17.w;
            r17.z = dot(r21.xyz, float3(0.212500006,0.715399981,0.0720999986));
            r17.w = dot(r25.xyz, float3(0.212500006,0.715399981,0.0720999986));
            r16.y = r17.w * r16.y;
            r22.y = r17.z * r18.y + -r16.y;
            r16.y = dot(r23.xyz, float3(0.212500006,0.715399981,0.0720999986));
            r17.z = dot(r26.xyz, float3(0.212500006,0.715399981,0.0720999986));
            r16.x = r17.z * r16.x;
            r22.z = r16.y * r18.y + -r16.x;
            r18.xyz = r13.xyz * float3(0.00100000005,0.00100000005,0.00100000005) + r22.xyz;
            r16.x = dot(cb3[20].xyz, float3(0.212500006,0.715399981,0.0720999986));
            r18.xyz = cb3[19].xyz * r16.xxx + r18.xyz;
            r16.x = dot(r18.xyz, r18.xyz);
            r16.x = rsqrt(r16.x);
            r18.xyz = r18.xyz * r16.xxx;
            r13.x = dot(r13.xyz, r18.xyz);
            r12.z = r13.x + r12.z;
            r20.x = r20.z + r12.z;
            r13.xyz = t46.SampleLevel(s9_s, r20.xw, 0).xyz;
            if (cb0[48].y != 0) {
              r18.xyz = t46.SampleBias(s10_s, r20.xw, -1).xyz;
            } else {
              r18.xyz = t46.SampleBias(s0_s, r20.xw, -1).xyz;
            }
            r18.xyz = r18.xyz + -r13.xyz;
            r13.xyz = r18.www * r18.xyz + r13.xyz;
            r18.xyz = saturate(cb0[46].www * r13.xyz);
            r12.z = dot(r18.xyz, float3(0.212500006,0.715399981,0.0720999986));
            r16.x = max(r13.y, r13.z);
            r16.x = max(r16.x, r13.x);
            r16.x = cb0[46].w * r16.x;
            r16.x = log2(r16.x);
            r16.x = cb0[12].y * r16.x;
            r16.x = exp2(r16.x);
            r16.x = min(1, r16.x);
            r16.y = cb0[12].z + -cb0[12].x;
            r16.x = r16.x * r16.y + cb0[12].x;
            r13.xyz = max(float3(0.000300000014,0.000300000014,0.000300000014), r13.xyz);
            r16.y = dot(r13.xyz, r13.xyz);
            r16.y = rsqrt(r16.y);
            r13.xyz = r16.yyy * r13.xyz;
            r13.xyz = float3(1.05999994,1.05999994,1.05999994) * r13.xyz;
            r18.xyz = r16.xxx * r13.xyz;
            r20.xzw = cb0[12].xxx * r13.xyz;
            r20.xzw = float3(1.73199999,1.73199999,1.73199999) * r20.xzw;
            r16.x = dot(r13.xyz, r13.xyz);
            r16.x = sqrt(r16.x);
            r20.xzw = r20.xzw / r16.xxx;
            r13.x = dot(r13.xyz, float3(0.212500006,0.715399981,0.0720999986));
            r13.xyz = r20.xzw / r13.xxx;
            r13.xyz = max(r13.xyz, r18.xyz);
            r18.xyz = r12.zzz * cb0[46].www + r13.xyz;
            r18.xyz = min(cb0[12].zzz, r18.xyz);
            r16.x = -1 + cb0[46].w;
            r16.x = max(0, r16.x);
            r16.x = r16.x / cb0[11].w;
            r18.xyz = r18.xyz + -r13.xyz;
            r13.xyz = r16.xxx * r18.xyz + r13.xyz;
            r16.x = -0.000300000014 + cb0[12].x;
            r12.z = -0.000300000014 + r12.z;
            r16.x = 1 / r16.x;
            r12.z = saturate(r16.x * r12.z);
            r16.x = r12.z * -2 + 3;
            r12.z = r12.z * r12.z;
            r12.z = r16.x * r12.z;
            r12.z = rsqrt(r12.z);
            r12.z = 1 / r12.z;
            r13.xyz = -cb0[12].xxx + r13.xyz;
            r13.xyz = r12.zzz * r13.xyz + cb0[12].xxx;
            r13.xyz = r13.xyz + -r19.xyz;
            r13.xyz = r20.yyy * r13.xyz + r19.xyz;
            r12.z = 1 + -r20.y;
            r15.y = r15.y * r12.z;
          } else {
            r13.xyz = r19.xyz;
          }
        } else {
          r13.xyz = r19.xyz;
        }
        r12.z = cmp(0 < cb0[43].w);
        if (r12.z != 0) {
          r12.z = -0.0784313753 + r13.w;
          r12.z = saturate(1.08510637 * r12.z);
          r13.w = t23.SampleBias(s0_s, r16.zw, -1).x;
          r13.w = min(cb0[44].z, r13.w);
          r13.w = 1 + -r13.w;
          r16.x = cb0[43].w * r13.w;
          r13.w = r16.x * -0.5 + r13.w;
          r6.z = -0.5 + r6.z;
          r6.z = r6.z + r6.z;
          r16.x = -1 + cb0[43].w;
          r16.x = saturate(-6.66666794 * r16.x);
          r16.y = r16.x * -2 + 3;
          r16.x = r16.x * r16.x;
          r16.x = r16.y * r16.x;
          r6.z = r16.x * r6.z;
          r6.z = saturate(cb0[43].w * r6.z + cb0[43].w);
          r16.x = cmp(0 < cb0[44].y);
          r16.x = r16.x ? 0.5 : 0.25;
          r16.x = cb0[44].y * r16.x + 0.5;
          r16.x = 0.5 * r16.x;
          r16.x = cb0[47].z ? 0.5 : r16.x;
          r16.y = cb0[44].x * cb0[44].x;
          r12.z = log2(r12.z);
          r12.z = r16.y * r12.z;
          r12.z = exp2(r12.z);
          r12.z = -r12.z + r6.z;
          r12.z = max(0, r12.z);
          r16.y = r12.z + r12.z;
          r16.y = min(1, r16.y);
          r16.y = cb0[44].y * r6.z + r16.y;
          r16.y = -r16.y + r13.w;
          r16.y = saturate(10 * r16.y);
          r17.z = r16.y * -2 + 3;
          r16.y = r16.y * r16.y;
          r16.y = r17.z * r16.y;
          r17.z = r13.w * 0.400000006 + -0.5;
          r17.z = r6.z * r17.z + 0.699999988;
          r18.xyz = -r17.zzz + r13.xyz;
          r18.xyz = r16.yyy * r18.xyz + r17.zzz;
          r18.xyz = cb0[47].zzz ? r18.xyz : r13.xyz;
          r16.y = 1 + r16.x;
          r12.z = saturate(r12.z * r16.y + -r16.x);
          r12.z = r13.w + -r12.z;
          r12.z = saturate(10 * r12.z);
          r16.x = r12.z * -2 + 3;
          r12.z = r12.z * r12.z;
          r12.z = r16.x * r12.z;
          r17.x = r17.x * r12.z;
          r16.xy = float2(0.300000012,2.85714293) * r6.zz;
          r20.xyz = r18.xyz * r13.www + -r18.xyz;
          r13.xyz = r16.xxx * r20.xyz + r18.xyz;
          r12.z = asint(cb0[47].w) | asint(cb0[47].x);
          r16.x = min(1, r16.y);
          r16.y = r16.x * -2 + 3;
          r16.x = r16.x * r16.x;
          r16.x = r16.y * r16.x;
          r13.w = cmp(r16.x >= r13.w);
          r13.w = r13.w ? 1.000000 : 0;
          r16.x = 0.800000012 + -r15.x;
          r13.w = r13.w * r16.x + r15.x;
          r15.x = r12.z ? r15.x : r13.w;
        } else {
          r6.z = cb0[43].w;
        }
        r16.xy = float2(-0.5,-0.5) + r16.zw;
        r17.zw = -r16.xy + r14.xy;
        r14.xy = r17.xx * r17.zw + r16.xy;
        if (r11.w != 0) {
          r11.w = saturate(2.22222233 * r10.w);
          r12.z = rsqrt(r11.w);
          r12.z = 1 / r12.z;
          r13.w = r12.z + -r16.w;
          r16.x = cmp(r12.z < r16.w);
          if (r16.x != 0) {
            r16.x = log2(abs(r13.w));
            r16.x = 0.200000003 * r16.x;
            r16.x = exp2(r16.x);
            r16.x = 1 + -r16.x;
            r17.x = r17.x * r16.x;
            r13.xyz = float3(0,0,0);
          } else {
            r10.w = saturate(1.11111116 * r10.w);
            r12.z = r13.w + r12.z;
            r12.z = abs(r13.w) * 0.300000012 + r12.z;
            r16.x = log2(r16.w);
            r16.x = 0.200000003 * r16.x;
            r16.x = exp2(r16.x);
            r12.z = -1 + r12.z;
            r16.y = r16.x * r12.z + 1;
            r12.z = cmp(r16.y < 1);
            if (r12.z != 0) {
              r16.x = r16.z;
              r16.xy = saturate(r16.xy);
              r18.xyzw = t45.SampleBias(s0_s, r16.xy, -1).xyzw;
              r12.z = dot(r18.xyz, float3(0.298999995,0.587000012,0.114));
              r16.x = 0.300000012 + -r12.z;
              r12.z = r16.x * 0.800000012 + r12.z;
              r13.w = log2(abs(r13.w));
              r16.xy = float2(0.200000003,0.100000001) * r13.ww;
              r16.xy = exp2(r16.xy);
              r13.w = saturate(12.75 * r18.w);
              r17.z = 1 + -r16.y;
              r11.w = r11.w * r17.z + r16.y;
              r18.xyz = r13.xyz * r11.www;
              r20.xyz = r12.zzz * r16.xxx + -r18.xyz;
              r13.xyz = r13.www * r20.xyz + r18.xyz;
              r17.x = max(r17.x, r13.w);
              r18.xyz = float3(0,0,1) + -r14.xyz;
              r14.xyz = r13.www * r18.xyz + r14.xyz;
              r15.y = r13.w * -r15.y + r15.y;
              r12.z = 0.800000012 + -r15.x;
              r15.x = r13.w * r12.z + r15.x;
              r12.z = 1 + -r17.y;
              r17.y = r13.w * r12.z + r17.y;
              r11.w = r11.w + -r1.z;
              r1.z = r13.w * r11.w + r1.z;
            } else {
              r14.w = r14.z;
              r14.xyz = r14.xyw;
            }
            r11.w = cmp(r10.w >= 0.5);
            r11.w = r11.w ? 1.000000 : 0;
            r10.w = -1 + r10.w;
            r10.w = -2 * r10.w;
            r10.w = min(1, r10.w);
            r12.z = r10.w * -2 + 3;
            r10.w = r10.w * r10.w;
            r10.w = r12.z * r10.w;
            r10.w = log2(r10.w);
            r10.w = 20 * r10.w;
            r10.w = exp2(r10.w);
            r10.w = r11.w * r10.w;
            r18.xyz = r13.xyz * r10.www;
            r13.xyz = r18.xyz * float3(9,9,9) + r13.xyz;
          }
        }
        if (r9.w == 0) {
          r18.xyz = r19.xyz * r15.www;
          r18.xyz = r18.xyz + r18.xyz;
          r18.xyz = cb0[48].www ? r18.xyz : float3(0,0,0);
          r9.w = cb4[39].z + -cb0[49].x;
          r10.w = cmp(r9.w < 2);
          r9.w = -r9.w * 0.5 + 1;
          r11.w = r9.w * r9.w;
          r11.w = r11.w * r11.w;
          r19.xyz = r9.www * r11.www + r13.xyz;
          r13.xyz = r10.www ? r19.xyz : r13.xyz;
          r15.z = r17.y * r17.x;
          r17.yzw = r13.xyz + r13.xyz;
          r17.yzw = cb0[13].zzz ? r17.yzw : r13.xyz;
          r16.xy = float2(8,8) * r16.zw;
          r16.xy = floor(r16.xy);
          r9.w = r16.x + r16.y;
          r9.w = 0.5 * r9.w;
          r9.w = frac(r9.w);
          r10.w = dot(r17.yzw, float3(0.212500006,0.715399981,0.0720999986));
          r10.w = saturate(0.600000024 * r10.w);
          r10.w = 0.200000003 + r10.w;
          r9.w = r9.w * 0.200200006 + r10.w;
          r9.w = r9.w * r2.w;
          r16.z = 0.899999976 * r15.z;
          r17.yzw = cb0[13].xxx ? r9.www : r17.yzw;
          r19.xyz = cb0[13].xxx ? float3(0,0,1) : r14.xyz;
          r16.xy = float2(0.800000012,0);
          r16.xyz = cb0[13].xxx ? r16.xyz : r15.xyz;
          r20.xyz = cb0[13].xxx ? float3(0,0,0) : r11.xyz;
          r13.xyz = saturate(r8.www ? r17.yzw : r13.xyz);
          r14.xyz = r8.www ? r19.xyz : r14.xyz;
          r11.xyz = r8.www ? r20.xyz : r11.xyz;
          r15.xyz = r8.www ? r16.xyz : r15.xyz;
          r13.xyz = r13.xyz + -r5.xyz;
          r5.xyz = r15.zzz * r13.xyz + r5.xyz;
          r13.xyz = r14.xyz + -r7.xyz;
          r13.xyz = r15.zzz * r13.xyz + r7.xyz;
          r8.w = dot(r13.xyz, r13.xyz);
          r8.w = rsqrt(r8.w);
          r7.xyz = r13.xyz * r8.www;
          r8.w = r15.y + -r3.w;
          r3.w = r15.z * r8.w + r3.w;
          r13.xy = r15.xx + -r0.xy;
          r0.xy = r15.zz * r13.xy + r0.xy;
          r1.z = r1.z + -r2.w;
          r2.w = r17.x * r1.z + r2.w;
          r11.xyz = r11.xyz + -r10.xyz;
          r10.xyz = r15.zzz * r11.xyz + r10.xyz;
          r1.z = 0.0399999991 + -r1.y;
          r1.y = r15.z * r1.z + r1.y;
          r6.x = r15.z * -r6.x + r6.x;
          r11.xyz = r18.xyz + -r12.xyw;
          r12.xyw = r15.zzz * r11.xyz + r12.xyw;
          r5.w = max(r15.z, r5.w);
          r1.z = 1 + -r6.z;
          r1.z = r15.z * r1.z;
          r6.w = max(r6.w, r1.z);
          r0.z = cb4[3].y ? r15.z : r0.z;
        } else {
          r0.z = r7.w;
        }
      } else {
        r0.z = r7.w;
      }
    }
  } else {
    r0.z = v4.w;
    r12.xyw = float3(0,0,0);
    r10.xyz = float3(0,0,0);
    r1.y = 0.0199999996;
    r5.w = 0;
    r6.w = 0;
  }
  r0.w = r0.w ? -r7.y : r7.y;
  r9.xyz = r0.www * r9.xyz;
  r7.xyw = r7.xxx * v6.xyz + r9.xyz;
  r7.xyz = r7.zzz * r8.xyz + r7.xyw;
  r0.w = dot(r7.xyz, r7.xyz);
  r0.w = rsqrt(r0.w);
  r8.xyz = r7.xyz * r0.www;
  r1.z = 1 + -r3.w;
  r1.z = log2(r1.z);
  r1.z = cb0[7].w * r1.z;
  r1.z = exp2(r1.z);
  r9.xyz = r5.xyz * r1.zzz;
  r5.xyz = r5.xyz + -r1.yyy;
  r5.xyz = r3.www * r5.xyz + r1.yyy;
  if (cb0[49].y != 0) {
    r11.xyz = cb1[19].xyz + -r4.yzw;
    r1.y = dot(r11.xyz, r11.xyz);
    r1.y = rsqrt(r1.y);
    r11.xyz = r11.xyz * r1.yyy;
    r1.y = dot(r11.xyz, r3.xyz);
    r1.z = cmp(0.000000 != cb4[36].y);
    r13.xyz = cb1[33].xyz + r4.yzw;
    r13.xyz = -cb1[20].xyz * cb4[36].yyy + r13.xyz;
    r14.xyz = cb1[33].xyz + cb1[19].xyz;
    r14.xyz = cb1[22].www * cb1[20].xyz + r14.xyz;
    r14.w = dot(r14.xyz, cb1[20].xyz);
    r13.w = 1;
    r14.xyz = cb1[20].xyz;
    r3.w = dot(r13.xyzw, r14.xyzw);
    r6.z = cmp(0 >= r3.w);
    r13.xyz = r3.www * -cb1[20].xyz + r4.yzw;
    r13.xyz = r6.zzz ? r4.yzw : r13.xyz;
    r14.xyz = cb4[13].xyw * r13.yyy;
    r14.xyz = cb4[12].xyw * r13.xxx + r14.xyz;
    r14.xyz = cb4[14].xyw * r13.zzz + r14.xyz;
    r14.xyz = cb4[15].xyw + r14.xyz;
    r15.xy = r14.xy / r14.zz;
    r3.w = 1 + r15.x;
    r3.w = cb1[26].z * r3.w;
    r3.w = 0.5 * r3.w;
    r15.xz = cb1[26].zw + float2(-1,-1);
    r3.w = max(0, r3.w);
    r14.x = min(r3.w, r15.x);
    r3.w = 1 + -r15.y;
    r3.w = cb1[26].w * r3.w;
    r3.w = 0.5 * r3.w;
    r3.w = max(0, r3.w);
    r14.y = min(r3.w, r15.z);
    r13.xyz = r1.zzz ? r13.xyz : r4.yzw;
    r14.xyz = r1.zzz ? r14.xyz : v8.xyw;
    r14.xy = -cb1[26].xy + r14.xy;
    r14.xy = (uint2)r14.xy;
    r14.xy = (uint2)r14.xy >> asuint(cb3[25].xx);
    r1.z = mad((int)r14.y, asint(cb3[25].y), (int)r14.x);
    r1.z = mad((int)r1.z, asint(cb3[24].z), asint(cb3[24].y));
    r3.w = cb3[26].x * r14.z;
    r3.w = max(0, r3.w);
    r3.w = min(cb3[26].y, r3.w);
    r3.w = (uint)r3.w;
    r3.w = mad((int)r3.w, asint(cb3[24].z), asint(cb3[24].x));
    r13.w = 1;
    r14.xyz = float3(0,0,0);
    r15.xyz = float3(0,0,0);
    r16.xyz = float3(0,0,0);
    r17.xyz = float3(0,0,0);
    r18.xyz = float3(0,0,0);
    r19.xyz = float3(0,0,0);
    r6.z = 0;
    r7.w = 0;
    r9.w = 0;
    while (true) {
      r10.w = cmp((uint)r9.w < asuint(cb3[24].z));
      r11.w = ~(int)r7.w;
      r10.w = r10.w ? r11.w : 0;
      if (r10.w == 0) break;
      r10.w = (int)r1.z + (int)r9.w;
      r10.w = t13[r10.w].val[0/4];
      r11.w = (int)r3.w + (int)r9.w;
      r11.w = t13[r11.w].val[0/4];
      r10.w = (int)r10.w & (int)r11.w;
      r11.w = (uint)r9.w << 5;
      r20.xyz = r14.xyz;
      r21.xyz = r15.xyz;
      r22.xyz = r16.xyz;
      r23.xyz = r17.xyz;
      r24.xyz = r18.xyz;
      r25.xyz = r19.xyz;
      r12.z = r6.z;
      r14.w = r7.w;
      r15.w = r10.w;
      while (true) {
        if (r15.w == 0) break;
        r16.w = firstbitlow((uint)r15.w);
        r16.w = (int)r11.w + (int)r16.w;
        r17.w = (int)r15.w + -1;
        r17.w = (int)r15.w & (int)r17.w;
        r16.w = (int)r16.w * 6;
        r26.x = dot(r13.xyzw, cb3[r16.w+1180].xyzw);
        r26.y = dot(r13.xyzw, cb3[r16.w+1181].xyzw);
        r26.z = dot(r13.xyzw, cb3[r16.w+1182].xyzw);
        r27.xyz = -cb3[r16.w+1183].xyz + r26.xyz;
        r27.xyz = saturate(cb3[r16.w+1185].xyz * r27.xyz);
        r26.xyz = cb3[r16.w+1184].xyz + -r26.xyz;
        r26.xyz = saturate(cb3[r16.w+1185].xyz * r26.xyz);
        r18.w = min(r27.y, r27.z);
        r18.w = min(r27.x, r18.w);
        r19.w = min(r26.y, r26.z);
        r19.w = min(r26.x, r19.w);
        r18.w = min(r19.w, r18.w);
        r19.w = cmp(r18.w == 0.000000);
        if (r19.w != 0) {
          r15.w = r17.w;
          continue;
        }
        r19.w = r18.w * r18.w;
        r18.w = r18.w * -2 + 3;
        r18.w = r19.w * r18.w;
        r19.w = 1 + -r12.z;
        r20.w = r19.w * r18.w;
        r18.w = r18.w * r19.w + r12.z;
        r16.w = 9 * asint(cb3[r16.w+1185].w);
        r26.x = dot(r13.xyzw, cb2[r16.w+0].xyzw);
        r26.y = dot(r13.xyzw, cb2[r16.w+1].xyzw);
        r19.w = dot(r13.xyzw, cb2[r16.w+2].xyzw);
        r26.z = 0.166666672 * r19.w;
        r26.xyz = max(cb2[r16.w+3].xyz, r26.xyz);
        r26.xyz = min(cb2[r16.w+4].xyz, r26.xyz);
        r26.w = 6 * r26.z;
        r26.xyz = r26.xyw * cb2[r16.w+6].xyz + cb2[r16.w+7].xyz;
        r26.w = 0.166666672 * r26.z;
        r27.xyz = t16.SampleLevel(s1_s, r26.xyw, 0).xyz;
        r27.xyz = cb2[r16.w+5].xyz * r27.xyz;
        r28.xyz = float3(0,0,0.166666672) + r26.xyw;
        r28.xyz = t16.SampleLevel(s1_s, r28.xyz, 0).xyz;
        r28.xyz = cb2[r16.w+5].xyz * r28.xyz;
        r29.xyz = float3(0,0,0.333333343) + r26.xyw;
        r29.xyz = t16.SampleLevel(s1_s, r29.xyz, 0).xyz;
        r29.xyz = cb2[r16.w+5].xyz * r29.xyz;
        r30.xyz = float3(0,0,0.5) + r26.xyw;
        r30.xyz = t16.SampleLevel(s1_s, r30.xyz, 0).xyz;
        r30.xyz = cb2[r16.w+5].xyz * r30.xyz;
        r31.xyz = float3(0,0,0.666666687) + r26.xyw;
        r31.xyz = t16.SampleLevel(s1_s, r31.xyz, 0).xyz;
        r31.xyz = cb2[r16.w+5].xyz * r31.xyz;
        r26.xyz = float3(0,0,0.833333313) + r26.xyw;
        r26.xyz = t16.SampleLevel(s1_s, r26.xyz, 0).xyz;
        r26.xyz = cb2[r16.w+5].xyz * r26.xyz;
        r27.xyz = r20.www * r27.xyz + r20.xyz;
        r28.xyz = r20.www * r28.xyz + r21.xyz;
        r29.xyz = r20.www * r29.xyz + r22.xyz;
        r30.xyz = r20.www * r30.xyz + r23.xyz;
        r31.xyz = r20.www * r31.xyz + r24.xyz;
        r26.xyz = r20.www * r26.xyz + r25.xyz;
        r16.w = cmp(0.99000001 < r18.w);
        if (r16.w != 0) {
          r20.xyz = r27.xyz;
          r21.xyz = r28.xyz;
          r22.xyz = r29.xyz;
          r23.xyz = r30.xyz;
          r24.xyz = r31.xyz;
          r25.xyz = r26.xyz;
          r12.z = r18.w;
          r14.w = -1;
          break;
        }
        r20.xyz = r27.xyz;
        r21.xyz = r28.xyz;
        r22.xyz = r29.xyz;
        r23.xyz = r30.xyz;
        r24.xyz = r31.xyz;
        r25.xyz = r26.xyz;
        r12.z = r18.w;
        r15.w = r17.w;
      }
      r14.xyz = r20.xyz;
      r15.xyz = r21.xyz;
      r16.xyz = r22.xyz;
      r17.xyz = r23.xyz;
      r18.xyz = r24.xyz;
      r19.xyz = r25.xyz;
      r6.z = r12.z;
      r7.w = r14.w;
      r9.w = (int)r9.w + 1;
    }
    r1.z = cmp(r6.z < 0.99000001);
    if (r1.z != 0) {
      r1.z = 1 + -r6.z;
      r13.x = dot(cb3[7].xw, float2(1,1));
      r13.y = dot(cb3[8].xw, float2(1,1));
      r13.z = dot(cb3[9].xw, float2(1,1));
      r14.xyz = r1.zzz * r13.xyz + r14.xyz;
      r13.x = dot(cb3[7].yw, float2(1,1));
      r13.y = dot(cb3[8].yw, float2(1,1));
      r13.z = dot(cb3[9].yw, float2(1,1));
      r15.xyz = r1.zzz * r13.xyz + r15.xyz;
      r13.x = dot(cb3[7].zw, float2(1,1));
      r13.y = dot(cb3[8].zw, float2(1,1));
      r13.z = dot(cb3[9].zw, float2(1,1));
      r16.xyz = r1.zzz * r13.xyz + r16.xyz;
      r13.x = dot(cb3[7].xw, float2(-1,1));
      r13.y = dot(cb3[8].xw, float2(-1,1));
      r13.z = dot(cb3[9].xw, float2(-1,1));
      r17.xyz = r1.zzz * r13.xyz + r17.xyz;
      r13.x = dot(cb3[7].yw, float2(-1,1));
      r13.y = dot(cb3[8].yw, float2(-1,1));
      r13.z = dot(cb3[9].yw, float2(-1,1));
      r18.xyz = r1.zzz * r13.xyz + r18.xyz;
      r13.x = dot(cb3[7].zw, float2(-1,1));
      r13.y = dot(cb3[8].zw, float2(-1,1));
      r13.z = dot(cb3[9].zw, float2(-1,1));
      r19.xyz = r1.zzz * r13.xyz + r19.xyz;
    }
    r1.z = dot(r14.xyz, float3(0.212500006,0.715399981,0.0720999986));
    r13.xy = max(float2(0,0), r8.xy);
    r3.w = dot(r17.xyz, float3(0.212500006,0.715399981,0.0720999986));
    r13.zw = max(float2(0,0), -r8.xy);
    r3.w = r13.z * r3.w;
    r14.x = r1.z * r13.x + -r3.w;
    r1.z = dot(r15.xyz, float3(0.212500006,0.715399981,0.0720999986));
    r3.w = dot(r18.xyz, float3(0.212500006,0.715399981,0.0720999986));
    r3.w = r3.w * r13.w;
    r14.y = r1.z * r13.y + -r3.w;
    r1.z = dot(r16.xyz, float3(0.212500006,0.715399981,0.0720999986));
    r3.w = dot(r19.xyz, float3(0.212500006,0.715399981,0.0720999986));
    r3.w = r3.w * r13.z;
    r14.z = r1.z * r13.y + -r3.w;
    r13.xyz = r11.xyz * float3(0.00100000005,0.00100000005,0.00100000005) + r14.xyz;
    r1.z = dot(cb3[20].xyz, float3(0.212500006,0.715399981,0.0720999986));
    r13.xyz = cb3[19].xyz * r1.zzz + r13.xyz;
    r1.z = dot(r13.xyz, r13.xyz);
    r1.z = rsqrt(r1.z);
    r13.xyz = r13.xyz * r1.zzz;
    r1.z = dot(r11.xyz, r13.xyz);
    r1.y = r1.y + r1.z;
    r1.z = cb0[49].w * r6.x;
    r1.y = r1.y * cb0[49].z + cb0[50].x;
    r1.y = frac(r1.y);
    r3.w = 6 * r1.y;
    r3.w = floor(r3.w);
    r1.y = r1.y * 6 + -r3.w;
    r11.x = 1 + -r1.y;
    r6.x = 1 + -r11.x;
    r13.xyzw = cmp(r3.wwww == float4(0,1,2,3));
    r1.y = cmp(r3.w == 4.000000);
    r6.z = 1;
    r11.yzw = float3(1,0,1);
    r14.xz = r1.yy ? r6.xz : r11.yx;
    r14.y = 0;
    r14.xyz = r13.www ? r11.zxw : r14.xyz;
    r15.xyz = r11.wxz * float3(1,-1,1) + float3(0,1,0);
    r14.xyz = r13.zzz ? r15.zxy : r14.xyz;
    r11.xyz = r13.yyy ? r11.xwz : r14.xyz;
    r11.xyz = r13.xxx ? r15.xyz : r11.xyz;
    r1.y = dot(r5.xyz, float3(0.212500006,0.715399981,0.0720999986));
    r13.xyz = max(float3(0.00100000005,0.00100000005,0.00100000005), r11.xyz);
    r3.w = dot(r13.xyz, r13.xyz);
    r3.w = rsqrt(r3.w);
    r13.xyz = r13.xyz * r3.www;
    r3.w = dot(r13.xyz, float3(0.212500006,0.715399981,0.0720999986));
    r3.w = r1.y / r3.w;
    r1.y = 3 * r1.y;
    r6.x = max(r11.y, r11.z);
    r6.x = max(r11.x, r6.x);
    r1.y = r6.x * r1.y;
    r1.y = min(r3.w, r1.y);
    r11.xyz = r13.xyz * r1.yyy + -r5.xyz;
    r5.xyz = saturate(r1.zzz * r11.xyz + r5.xyz);
  }
  r11.xyz = cmp(r2.xyz == float3(1,1,1));
  r1.y = r11.y ? r11.x : 0;
  r1.y = r11.z ? r1.y : 0;
  r11.xyz = r1.yyy ? r8.xyz : r2.xyz;
  r13.xyz = ddx_coarse(r3.xyz);
  r14.xyz = ddy_coarse(r3.xyz);
  r1.z = dot(r13.xyz, r13.xyz);
  r3.w = dot(r14.xyz, r14.xyz);
  r1.z = max(r3.w, r1.z);
  r1.z = min(1, r1.z);
  r1.z = log2(r1.z);
  r1.z = 0.333000004 * r1.z;
  r1.z = exp2(r1.z);
  r0.xy = max(r1.zz, r0.xy);
  if (cb4[1].x != 0) {
    r13.x = dot(cb3[11].xyz, r3.xyz);
    r13.y = dot(cb3[12].xyz, r3.xyz);
    r13.z = dot(cb3[13].xyz, r3.xyz);
    r13.w = dot(cb3[14].xyz, r3.xyz);
    r3.xyzw = max(float4(0,0,0,0), r13.xyzw);
    r6.xz = cb4[16].zz * v8.xy;
    r6.xz = floor(r6.xz);
    r13.xy = cb4[16].xy * float2(0.5,0.5);
    r6.xz = r6.xz * cb4[16].xy + r13.xy;
    r13.xyzw = t8.Gather(s7_s, r6.xz).xyzw;
    r13.xyzw = -v8.zzzz + r13.xyzw;
    r1.z = cmp(abs(r13.z) < r13.w);
    r14.x = r13.z;
    r14.y = cb4[16].x;
    r14.z = 0;
    r15.x = r13.w;
    r15.yz = float2(0,0);
    r14.xyz = r1.zzz ? r14.xyz : r15.xyz;
    r1.z = cmp(abs(r13.x) < r14.x);
    r15.x = r13.x;
    r15.y = 0;
    r15.z = cb4[16].y;
    r13.xzw = r1.zzz ? r15.xyz : r14.xyz;
    r1.z = cmp(abs(r13.y) < r13.x);
    r13.xy = r1.zz ? cb4[16].xy : r13.zw;
    r6.xz = r13.xy + r6.xz;
    r13.xyzw = t7.SampleLevel(s4_s, r6.xz, 0).xyzw;
    r3.xyzw = cb3[16].xyzw * r3.xyzw;
    r1.z = dot(r3.xyzw, float4(1,1,1,1));
    r1.z = cb3[17].x + r1.z;
    r1.z = rcp(r1.z);
    r3.x = dot(r3.xyzw, r13.xyzw);
    r3.x = cb3[17].x + r3.x;
    r1.z = r3.x * r1.z;
  } else {
    r1.z = 1;
  }
  if (cb4[0].w != 0) {
    r3.xy = cb1[25].xy * v8.xy;
    r3.x = t9.SampleLevel(s5_s, r3.xy, 0).x;
    r1.z = r3.x * r1.z;
  }
  r3.xy = cmp(float2(0,0) != cb4[36].yx);
  r13.xyz = cb1[33].xyz + r4.yzw;
  r13.xyz = -cb1[20].xyz * cb4[36].yyy + r13.xyz;
  r14.xyz = cb1[33].xyz + cb1[19].xyz;
  r14.xyz = cb1[22].www * cb1[20].xyz + r14.xyz;
  r14.w = dot(r14.xyz, cb1[20].xyz);
  r13.w = 1;
  r14.xyz = cb1[20].xyz;
  r3.z = dot(r13.xyzw, r14.xyzw);
  r3.w = cmp(0 >= r3.z);
  r13.xyz = r3.zzz * -cb1[20].xyz + r4.yzw;
  r13.xyz = r3.www ? r4.yzw : r13.xyz;
  r14.xyz = cb4[13].xyw * r13.yyy;
  r14.xyz = cb4[12].xyw * r13.xxx + r14.xyz;
  r14.xyz = cb4[14].xyw * r13.zzz + r14.xyz;
  r14.xyz = cb4[15].xyw + r14.xyz;
  r3.zw = r14.xy / r14.zz;
  r3.z = 1 + r3.z;
  r3.z = cb1[26].z * r3.z;
  r3.z = 0.5 * r3.z;
  r6.xz = cb1[26].zw + float2(-1,-1);
  r3.z = max(0, r3.z);
  r14.x = min(r3.z, r6.x);
  r3.z = 1 + -r3.w;
  r3.z = cb1[26].w * r3.z;
  r3.z = 0.5 * r3.z;
  r3.z = max(0, r3.z);
  r14.y = min(r3.z, r6.z);
  r13.xyz = r3.xxx ? r13.xyz : r4.yzw;
  r3.xzw = r3.xxx ? r14.xyz : v8.xyw;
  r3.xz = -cb1[26].xy + r3.xz;
  r3.xz = (uint2)r3.xz;
  r3.xz = (uint2)r3.xz >> asuint(cb3[25].xx);
  r3.x = mad((int)r3.z, asint(cb3[25].y), (int)r3.x);
  r3.z = mad((int)r3.x, asint(cb3[24].z), asint(cb3[24].y));
  r3.w = cb3[26].x * r3.w;
  r3.w = max(0, r3.w);
  r3.w = min(cb3[26].y, r3.w);
  r3.w = (uint)r3.w;
  r7.w = mad((int)r3.w, asint(cb3[24].z), asint(cb3[24].x));
  r14.xyz = cmp(float3(0,0,0) >= r8.xyz);
  r14.xyz = r14.xyz ? float3(0.5,0.666666687,0.833333313) : float3(0,0.166666672,0.333333343);
  r15.xyz = r8.xyz * r8.xyz;
  r13.w = 1;
  r14.w = 0;
  r16.xyzw = float4(0,0,0,0);
  r17.xyz = float3(0,0,0);
  r9.w = 0;
  r10.w = 0;
  r12.z = 0;
  while (true) {
    r15.w = cmp((uint)r12.z < asuint(cb3[24].z));
    r17.w = ~(int)r10.w;
    r15.w = r15.w ? r17.w : 0;
    if (r15.w == 0) break;
    r15.w = (int)r3.z + (int)r12.z;
    r15.w = t13[r15.w].val[0/4];
    r17.w = (int)r7.w + (int)r12.z;
    r17.w = t13[r17.w].val[0/4];
    r15.w = (int)r15.w & (int)r17.w;
    r17.w = (uint)r12.z << 5;
    r18.xyzw = r16.xyzw;
    r19.xyz = r17.xyz;
    r19.w = r9.w;
    r20.x = r10.w;
    r20.y = r15.w;
    while (true) {
      if (r20.y == 0) break;
      r20.z = firstbitlow((uint)r20.y);
      r20.z = (int)r17.w + (int)r20.z;
      r20.w = (int)r20.y + -1;
      r20.w = (int)r20.w & (int)r20.y;
      r20.z = (int)r20.z * 6;
      r21.x = dot(r13.xyzw, cb3[r20.z+1180].xyzw);
      r21.y = dot(r13.xyzw, cb3[r20.z+1181].xyzw);
      r21.z = dot(r13.xyzw, cb3[r20.z+1182].xyzw);
      r22.xyz = -cb3[r20.z+1183].xyz + r21.xyz;
      r22.xyz = saturate(cb3[r20.z+1185].xyz * r22.xyz);
      r21.xyz = cb3[r20.z+1184].xyz + -r21.xyz;
      r21.xyz = saturate(cb3[r20.z+1185].xyz * r21.xyz);
      r21.w = min(r22.y, r22.z);
      r21.w = min(r22.x, r21.w);
      r21.y = min(r21.y, r21.z);
      r21.x = min(r21.x, r21.y);
      r21.x = min(r21.w, r21.x);
      r21.y = cmp(r21.x == 0.000000);
      if (r21.y != 0) {
        r20.y = r20.w;
        continue;
      }
      r21.y = r21.x * r21.x;
      r21.x = r21.x * -2 + 3;
      r21.x = r21.y * r21.x;
      r21.y = 1 + -r19.w;
      r21.z = r21.x * r21.y;
      r21.x = r21.x * r21.y + r19.w;
      r20.z = 9 * asint(cb3[r20.z+1185].w);
      r22.x = dot(r13.xyzw, cb2[r20.z+0].xyzw);
      r22.y = dot(r13.xyzw, cb2[r20.z+1].xyzw);
      r22.z = dot(r13.xyzw, cb2[r20.z+2].xyzw);
      r22.w = 0.166666672 * r22.z;
      r23.xyz = max(cb2[r20.z+3].xyz, r22.xyw);
      r23.xyz = min(cb2[r20.z+4].xyz, r23.xyz);
      r23.w = 6 * r23.z;
      r23.xyz = r23.xyw * cb2[r20.z+6].xyz + cb2[r20.z+7].xyz;
      r23.w = 0.166666672 * r23.z;
      r24.xyz = r23.xyw + r14.wwx;
      r24.xyz = t16.SampleLevel(s1_s, r24.xyz, 0).xyz;
      r25.xyz = r23.xyw + r14.wwy;
      r25.xyz = t16.SampleLevel(s1_s, r25.xyz, 0).xyz;
      r23.xyz = r23.xyw + r14.wwz;
      r23.xyz = t16.SampleLevel(s1_s, r23.xyz, 0).xyz;
      r25.xyz = r25.xyz * r15.yyy;
      r24.xyz = r15.xxx * r24.xyz + r25.xyz;
      r23.xyz = r15.zzz * r23.xyz + r24.xyz;
      r23.xyz = cb2[r20.z+5].xyz * r23.xyz;
      r23.xyz = r21.zzz * r23.xyz + r19.xyz;
      r22.xyz = saturate(r22.xyz);
      r22.xyz = r22.xyz * cb2[r20.z+6].xyz + cb2[r20.z+7].xyz;
      r22.xyzw = t17.SampleLevel(s1_s, r22.xyz, 0).xyzw;
      r22.xyzw = r21.zzzz * r22.xyzw + r18.xyzw;
      r20.z = cmp(0.99000001 < r21.x);
      if (r20.z != 0) {
        r18.xyzw = r22.xyzw;
        r19.xyz = r23.xyz;
        r19.w = r21.x;
        r20.x = -1;
        break;
      }
      r18.xyzw = r22.xyzw;
      r19.xyz = r23.xyz;
      r19.w = r21.x;
      r20.xy = r20.xw;
    }
    r16.xyzw = r18.xyzw;
    r17.xyz = r19.xyz;
    r9.w = r19.w;
    r10.w = r20.x;
    r12.z = (int)r12.z + 1;
  }
  r3.z = cmp(r9.w < 0.99000001);
  if (r3.z != 0) {
    r3.z = 1 + -r9.w;
    r8.w = 1;
    r14.x = dot(cb3[7].xyzw, r8.xyzw);
    r14.y = dot(cb3[8].xyzw, r8.xyzw);
    r14.z = dot(cb3[9].xyzw, r8.xyzw);
    r17.xyz = r3.zzz * r14.xyz + r17.xyz;
  }
  r3.z = dot(r17.xyz, float3(0.212500006,0.715399981,0.0720999986));
  if (cb3[1948].x != 0) {
    r14.xyz = float3(0,0,0);
    r7.w = -1;
    r8.w = 1;
    r9.w = 0;
    while (true) {
      r10.w = cmp((int)r9.w >= asint(cb3[1948].x));
      if (r10.w != 0) break;
      r10.w = (uint)r9.w << 2;
      r15.xy = cb3[r10.w+1952].xy * v1.yy;
      r15.xy = cb3[r10.w+1951].xy * v1.xx + r15.xy;
      r15.xy = cb3[r10.w+1953].xy * v1.zz + r15.xy;
      r15.xy = cb3[r10.w+1954].xy + r15.xy;
      r12.z = max(abs(r15.x), abs(r15.y));
      r14.w = dot(cb3[1949].xyzw, icb[r9.w+0].xyzw);
      r12.z = cmp(r12.z < r14.w);
      if (r12.z != 0) {
        r12.z = cb3[r10.w+1952].z * v1.y;
        r12.z = cb3[r10.w+1951].z * v1.x + r12.z;
        r12.z = cb3[r10.w+1953].z * v1.z + r12.z;
        r14.z = cb3[r10.w+1954].z + r12.z;
        r15.zw = saturate(abs(r15.xy) * cb3[1950].yy + cb3[1950].xx);
        r15.zw = float2(1,1) + -r15.zw;
        r8.w = r15.z * r15.w;
        r14.xy = r15.xy * cb3[r9.w+1983].zw + cb3[r9.w+1983].xy;
        r7.w = r9.w;
        break;
      }
      r9.w = (int)r9.w + 1;
      r14.xyz = float3(0,0,0);
      r7.w = -1;
      r8.w = 1;
    }
    r9.w = cmp((int)r7.w >= 0);
    if (r9.w != 0) {
      r9.w = saturate(cb3[1948].z + r14.z);
      r15.xz = cb3[2].zy;
      r15.yw = cb3[3].zz;
      r18.xyzw = r15.xyzw + r14.xyxy;
      r19.x = t6.SampleCmpLevelZero(s8_s, r18.xy, r9.w).x;
      r19.y = t6.SampleCmpLevelZero(s8_s, r18.zw, r9.w).x;
      r18.xz = cb3[2].zy;
      r18.yw = cb3[3].yy;
      r20.xyzw = r18.xyzw + r14.xyxy;
      r19.z = t6.SampleCmpLevelZero(s8_s, r20.xy, r9.w).x;
      r19.w = t6.SampleCmpLevelZero(s8_s, r20.zw, r9.w).x;
      r10.w = dot(r19.xyzw, float4(0.25,0.25,0.25,0.25));
      r14.zw = cmp(r10.ww == float2(0,1));
      r12.z = (int)r14.w | (int)r14.z;
      if (r12.z == 0) {
        r12.z = cb3[0].w * r10.w;
        r19.xz = cb3[2].zy;
        r19.yw = float2(0,0);
        r19.xyzw = r19.xyzw + r14.xyxy;
        r20.x = t6.SampleCmpLevelZero(s8_s, r19.xy, r9.w).x;
        r20.y = t6.SampleCmpLevelZero(s8_s, r19.zw, r9.w).x;
        r19.xz = float2(0,0);
        r19.yw = cb3[3].yz;
        r19.xyzw = r19.xyzw + r14.xyxy;
        r20.z = t6.SampleCmpLevelZero(s8_s, r19.xy, r9.w).x;
        r20.w = t6.SampleCmpLevelZero(s8_s, r19.zw, r9.w).x;
        r14.z = dot(r20.xyzw, cb3[1].xxxx);
        r12.z = r12.z * 4 + r14.z;
        r9.w = t6.SampleCmpLevelZero(s8_s, r14.xy, r9.w).x;
        r10.w = r9.w * cb3[1].y + r12.z;
      }
      r9.w = cmp(r8.w < 1);
      if (r9.w != 0) {
        r9.w = -1 + asint(cb3[1948].x);
        r9.w = cmp((int)r7.w < (int)r9.w);
        if (r9.w != 0) {
          r9.w = (uint)r7.w << 2;
          r9.w = (int)r9.w + 4;
          r14.xyz = cb3[r9.w+1952].xyz * v1.yyy;
          r14.xyz = cb3[r9.w+1951].xyz * v1.xxx + r14.xyz;
          r14.xyz = cb3[r9.w+1953].xyz * v1.zzz + r14.xyz;
          r14.xyz = cb3[r9.w+1954].xyz + r14.xyz;
          r7.w = (int)r7.w + 1;
          r14.xy = r14.xy * cb3[r7.w+1983].zw + cb3[r7.w+1983].xy;
          r7.w = saturate(cb3[1948].z + r14.z);
          r15.xyzw = r14.xyxy + r15.xyzw;
          r19.x = t6.SampleCmpLevelZero(s8_s, r15.xy, r7.w).x;
          r19.y = t6.SampleCmpLevelZero(s8_s, r15.zw, r7.w).x;
          r15.xyzw = r14.xyxy + r18.xyzw;
          r19.z = t6.SampleCmpLevelZero(s8_s, r15.xy, r7.w).x;
          r19.w = t6.SampleCmpLevelZero(s8_s, r15.zw, r7.w).x;
          r9.w = dot(r19.xyzw, float4(0.25,0.25,0.25,0.25));
          r14.zw = cmp(r9.ww == float2(0,1));
          r12.z = (int)r14.w | (int)r14.z;
          if (r12.z == 0) {
            r12.z = cb3[0].w * r9.w;
            r15.xz = cb3[2].zy;
            r15.yw = float2(0,0);
            r15.xyzw = r15.xyzw + r14.xyxy;
            r18.x = t6.SampleCmpLevelZero(s8_s, r15.xy, r7.w).x;
            r18.y = t6.SampleCmpLevelZero(s8_s, r15.zw, r7.w).x;
            r15.xz = float2(0,0);
            r15.yw = cb3[3].yz;
            r15.xyzw = r15.xyzw + r14.xyxy;
            r18.z = t6.SampleCmpLevelZero(s8_s, r15.xy, r7.w).x;
            r18.w = t6.SampleCmpLevelZero(s8_s, r15.zw, r7.w).x;
            r14.z = dot(r18.xyzw, cb3[1].xxxx);
            r12.z = r12.z * 4 + r14.z;
            r7.w = t6.SampleCmpLevelZero(s8_s, r14.xy, r7.w).x;
            r9.w = r7.w * cb3[1].y + r12.z;
          }
        } else {
          r9.w = 1;
        }
        r7.w = r10.w + -r9.w;
        r10.w = r8.w * r7.w + r9.w;
      }
    } else {
      r10.w = 1;
    }
    r14.xyz = -cb1[19].xyz + r4.yzw;
    r7.w = dot(r14.xyz, r14.xyz);
    r7.w = sqrt(r7.w);
    r7.w = saturate(r7.w * cb3[1950].w + cb3[1950].z);
    r8.w = 1 + -r10.w;
    r7.w = r7.w * r8.w + r10.w;
    if (cb4[1].y != 0) {
      r14.xy = cb1[25].xy * v8.xy;
      r8.w = t19.SampleLevel(s3_s, r14.xy, 0).z;
      r7.w = min(r8.w, r7.w);
    }
  } else {
    r7.w = 1;
  }
  r8.w = dot(r16.xyzw, cb3[21].xyzw);
  r8.w = 1 + -r8.w;
  r7.w = r8.w * r7.w;
  r8.w = dot(cb3[19].xyz, r8.xyz);
  r9.w = r8.w * r7.w;
  r9.w = cmp(0 < r9.w);
  if (r9.w != 0) {
    r14.xyz = -cb1[19].xyz + r4.yzw;
    r9.w = dot(r14.xyz, r14.xyz);
    r9.w = rsqrt(r9.w);
    r15.xyz = r14.xyz * r9.www;
    r18.xyz = cmp(r11.xyz == float3(1,1,1));
    r10.w = r18.y ? r18.x : 0;
    r10.w = r18.z ? r10.w : 0;
    r10.w = (int)r1.y | (int)r10.w;
    r18.xyz = r10.www ? r8.xyz : r2.xyz;
    r8.w = max(0, r8.w);
    r10.w = cmp(0 < r1.x);
    r12.z = dot(r18.xyz, cb3[19].xyz);
    r14.w = r8.w * 0.5 + 0.5;
    r15.w = saturate(r12.z);
    r15.w = 1 + -r15.w;
    r15.w = r15.w * r15.w;
    r14.w = r15.w * r15.w + r14.w;
    r12.z = 0.200000003 + r12.z;
    r12.z = saturate(4 * r12.z);
    r19.xyz = -r7.xyz * r0.www + r18.xyz;
    r19.xyz = r19.xyz * float3(10,10,10) + r8.xyz;
    r15.w = dot(r19.xyz, cb3[19].xyz);
    r17.w = 1 + -r15.w;
    r15.w = saturate(r1.x * r17.w + r15.w);
    r12.z = r14.w * r12.z;
    r12.z = r12.z * r15.w + -r8.w;
    r12.z = r1.x * r12.z + r8.w;
    r10.w = r10.w ? r12.z : r8.w;
    r12.z = max(cb3[19].w, r0.x);
    r14.xyz = -r14.xyz * r9.www + cb3[19].xyz;
    r9.w = dot(r14.xyz, r14.xyz);
    r9.w = rsqrt(r9.w);
    r14.xyz = r14.xyz * r9.www;
    r9.w = dot(r14.xyz, r18.xyz);
    r14.w = dot(r18.xyz, -r15.xyz);
    r14.x = dot(cb3[19].xyz, r14.xyz);
    r14.xw = max(float2(0,0), r14.xw);
    r14.y = r12.z * r12.z;
    r9.w = r9.w * r9.w;
    r14.z = r14.y * r14.y + -1;
    r9.w = r9.w * r14.z + 1;
    r9.w = r14.y / r9.w;
    r9.w = r9.w * r9.w;
    r12.z = 1 + r12.z;
    r12.z = r12.z * r12.z;
    r14.y = 0.125 * r12.z;
    r12.z = -r12.z * 0.125 + 1;
    r14.z = r8.w * r12.z + r14.y;
    r14.z = 4 * r14.z;
    r12.z = r14.w * r12.z + r14.y;
    r12.z = r14.z * r12.z;
    r9.w = r9.w / r12.z;
    r14.yzw = float3(1,1,1) + -r5.xyz;
    r12.z = 1 + -r14.x;
    r12.z = max(9.99999997e-007, r12.z);
    r14.x = r12.z * r12.z;
    r14.x = r14.x * r14.x;
    r12.z = r14.x * r12.z;
    r14.xyz = r14.yzw * r12.zzz + r5.xyz;
    r14.xyz = r14.xyz * r9.www;
    r14.xyz = r14.xyz * r8.www;
    r15.xyz = cb3[20].xyz * r7.www;
    r18.xyz = r10.www * r15.xyz + cb3[18].xyz;
    r14.xyz = r15.xyz * r14.xyz;
  } else {
    r18.xyz = cb3[18].xyz;
    r14.xyz = float3(0,0,0);
  }
  r15.xyz = cb4[13].xyw * r4.zzz;
  r15.xyz = cb4[12].xyw * r4.yyy + r15.xyz;
  r15.xyz = cb4[14].xyw * r4.www + r15.xyz;
  r15.xyz = cb4[15].xyw + r15.xyz;
  r19.xy = r15.xy / r15.zz;
  r7.w = 1 + r19.x;
  r7.w = cb1[26].z * r7.w;
  r7.w = 0.5 * r7.w;
  r7.w = max(0, r7.w);
  r15.x = min(r7.w, r6.x);
  r6.x = 1 + -r19.y;
  r6.x = cb1[26].w * r6.x;
  r6.x = 0.5 * r6.x;
  r6.x = max(0, r6.x);
  r15.y = min(r6.x, r6.z);
  r15.xyz = cb4[2].xxx ? r15.xyz : v8.xyw;
  r6.xz = -cb1[26].xy + r15.xy;
  r6.xz = (uint2)r6.xz;
  r6.xz = (uint2)r6.xz >> asuint(cb3[25].xx);
  r6.x = mad((int)r6.z, asint(cb3[25].y), (int)r6.x);
  r6.x = mad((int)r6.x, asint(cb3[22].z), asint(cb3[22].y));
  r6.z = cb3[26].x * r15.z;
  r6.z = max(0, r6.z);
  r6.z = min(cb3[26].y, r6.z);
  r6.z = (uint)r6.z;
  r6.z = mad((int)r6.z, asint(cb3[22].z), asint(cb3[22].x));
  r15.xyz = -cb1[19].xyz + r4.yzw;
  r7.w = dot(r15.xyz, r15.xyz);
  r8.w = rsqrt(r7.w);
  r19.xyz = r15.xyz * r8.www;
  r20.xyz = cmp(r11.xyz == float3(1,1,1));
  r9.w = cb3[0].w * 4;
  r10.w = r20.y ? r20.x : 0;
  r10.w = r20.z ? r10.w : 0;
  r1.y = (int)r1.y | (int)r10.w;
  r2.xyz = r1.yyy ? r8.xyz : r2.xyz;
  r1.y = cmp(0 < r1.x);
  r7.xyz = -r7.xyz * r0.www + r2.xyz;
  r7.xyz = r7.xyz * float3(10,10,10) + r8.xyz;
  r0.w = dot(r2.xyz, -r19.xyz);
  r0.w = max(0, r0.w);
  r20.xyz = float3(1,1,1) + -r5.xyz;
  r21.xyz = v1.xyz;
  r21.w = 1;
  r22.xz = cb3[2].zy;
  r22.yw = cb3[3].zz;
  r23.xz = cb3[2].zy;
  r23.yw = cb3[3].yy;
  r24.xz = cb3[2].zy;
  r24.yw = float2(0,0);
  r25.xz = float2(0,0);
  r25.yw = cb3[3].yz;
  r26.x = cb4[2].x;
  r26.yzw = r16.xyz;
  r27.xyz = r18.xyz;
  r28.xyz = r14.xyz;
  r10.w = r16.w;
  r12.z = 0;
  while (true) {
    r14.w = cmp((uint)r12.z >= asuint(cb3[22].z));
    if (r14.w != 0) break;
    r14.w = (int)r6.x + (int)r12.z;
    r14.w = t13[r14.w].val[0/4];
    r15.w = (int)r6.z + (int)r12.z;
    r15.w = t13[r15.w].val[0/4];
    r14.w = (int)r14.w & (int)r15.w;
    r15.w = (uint)r12.z << 5;
    r29.xyz = r27.xyz;
    r30.xyz = r28.xyz;
    r31.xyz = r26.yzw;
    r17.w = r26.x;
    r31.w = r10.w;
    r18.w = r14.w;
    while (true) {
      if (r18.w == 0) break;
      r19.w = firstbitlow((uint)r18.w);
      r19.w = (int)r15.w + (int)r19.w;
      r20.w = (int)r18.w + -1;
      r18.w = (int)r18.w & (int)r20.w;
      r32.x = t18[r19.w].val[0/4];
      r32.y = t18[r19.w].val[0/4+1];
      r32.z = t18[r19.w].val[0/4+2];
      r32.w = t18[r19.w].val[0/4+3];
      r33.x = t18[r19.w].val[16/4];
      r33.y = t18[r19.w].val[16/4+1];
      r33.z = t18[r19.w].val[16/4+2];
      r33.w = t18[r19.w].val[16/4+3];
      r34.x = t18[r19.w].val[32/4];
      r34.y = t18[r19.w].val[32/4+1];
      r34.z = t18[r19.w].val[32/4+2];
      r34.w = t18[r19.w].val[32/4+3];
      r35.x = t18[r19.w].val[48/4];
      r35.y = t18[r19.w].val[48/4+1];
      r35.z = t18[r19.w].val[48/4+2];
      r35.w = t18[r19.w].val[48/4+3];
      r32.x = dot(r21.xyzw, r32.xyzw);
      r32.y = dot(r21.xyzw, r33.xyzw);
      r32.z = dot(r21.xyzw, r34.xyzw);
      r20.w = dot(r21.xyzw, r35.xyzw);
      r32.xyz = r32.xyz / r20.www;
      r33.xyz = cmp(float3(-1,-1,0) < r32.xyz);
      r20.w = r33.y ? r33.x : 0;
      r20.w = r33.z ? r20.w : 0;
      r33.xyz = cmp(r32.xyz < float3(1,1,1));
      r27.w = r33.y ? r33.x : 0;
      r27.w = r33.z ? r27.w : 0;
      r20.w = r27.w ? r20.w : 0;
      r20.w = ~(int)r20.w;
      r33.x = t18[r19.w].val[272/4];
      r33.y = t18[r19.w].val[272/4+1];
      r33.z = t18[r19.w].val[272/4+2];
      r33.w = t18[r19.w].val[272/4+3];
      r34.x = t18[r19.w].val[288/4];
      r34.y = t18[r19.w].val[288/4+1];
      r34.z = t18[r19.w].val[288/4+2];
      r34.w = t18[r19.w].val[288/4+3];
      r35.x = t18[r19.w].val[304/4];
      r35.y = t18[r19.w].val[304/4+1];
      r35.z = t18[r19.w].val[304/4+2];
      r35.w = t18[r19.w].val[304/4+3];
      r33.x = dot(r21.xyzw, r33.xyzw);
      r33.y = dot(r21.xyzw, r34.xyzw);
      r33.z = dot(r21.xyzw, r35.xyzw);
      r33.xyz = cmp(float3(1,1,1) >= abs(r33.xyz));
      r27.w = r33.y ? r33.x : 0;
      r27.w = r33.z ? r27.w : 0;
      r27.w = ~(int)r27.w;
      r20.w = (int)r20.w | (int)r27.w;
      if (r20.w == 0) {
        r33.x = t18[r19.w].val[160/4];
        r33.y = t18[r19.w].val[160/4+1];
        r33.z = t18[r19.w].val[160/4+3];
        r33.w = t18[r19.w].val[160/4+2];
        r34.x = t18[r19.w].val[240/4];
        r34.y = t18[r19.w].val[240/4+1];
        r34.z = t18[r19.w].val[240/4+2];
        r34.w = t18[r19.w].val[240/4+3];
        r20.w = dot(r31.xyzw, r34.xyzw);
        r20.w = 1 + -r20.w;
        r34.xyz = r33.xyw * r20.www;
        r35.x = t18[r19.w].val[128/4];
        r35.y = t18[r19.w].val[128/4+1];
        r35.z = t18[r19.w].val[128/4+2];
        r35.w = t18[r19.w].val[128/4+3];
        r36.x = t18[r19.w].val[144/4];
        r36.y = t18[r19.w].val[144/4+1];
        r36.z = t18[r19.w].val[144/4+2];
        r36.w = t18[r19.w].val[144/4+3];
        r37.x = t18[r19.w].val[176/4];
        r37.y = t18[r19.w].val[176/4+1];
        r37.z = t18[r19.w].val[176/4+2];
        r37.w = t18[r19.w].val[176/4+3];
        r38.x = t18[r19.w].val[192/4];
        r38.y = t18[r19.w].val[192/4+1];
        r38.z = t18[r19.w].val[192/4+2];
        r39.xyzw = r37.wxyw + r37.wxyw;
        r40.xy = r39.yw * r37.yz;
        r20.w = -r39.z * r37.y + 1;
        r27.w = dot(r37.zz, r37.zz);
        r41.x = -r27.w + r20.w;
        r41.y = r40.x + r40.y;
        r39.xzw = r39.xzw * r37.yzx;
        r41.z = r39.y * r37.z + -r39.x;
        r40.x = r39.y * r37.y + -r40.y;
        r20.w = -r39.y * r37.x + -r27.w;
        r40.y = 1 + r20.w;
        r40.z = r39.z + r39.w;
        r39.xy = cmp(float2(0,0) < r36.zw);
        r20.w = saturate(r36.z * r32.z);
        r27.w = r20.w * -2 + 3;
        r20.w = r20.w * r20.w;
        r20.w = r27.w * r20.w;
        r20.w = r39.x ? r20.w : 1;
        r27.w = 1 + -r32.z;
        r27.w = saturate(r27.w * r36.w);
        r28.w = r27.w * -2 + 3;
        r27.w = r27.w * r27.w;
        r27.w = r28.w * r27.w;
        r27.w = r27.w * r20.w;
        r39.w = r39.y ? r27.w : r20.w;
        r20.w = cmp(r35.w != 0.000000);
        r42.xyz = -v1.xyz + r35.xyz;
        r27.w = dot(r42.xyz, r42.xyz);
        r28.w = max(r27.w, r35.w);
        r28.w = r35.w / r28.w;
        r28.w = r39.w * r28.w;
        r27.w = sqrt(r27.w);
        r29.w = saturate(r36.y * r27.w + r36.x);
        r30.w = r29.w * -2 + 3;
        r29.w = r29.w * r29.w;
        r29.w = r30.w * r29.w;
        r28.w = r29.w * r28.w;
        r36.xyz = -r40.xyz * r38.zzz + r42.xyz;
        r40.xyz = r40.xyz * r38.zzz + r42.xyz;
        r40.xyz = r40.xyz + -r36.xyz;
        r29.w = dot(-r36.xyz, r40.xyz);
        r30.w = dot(r40.xyz, r40.xyz);
        r32.w = cmp(0 >= r29.w);
        r29.w = r29.w / r30.w;
        r29.w = min(1, r29.w);
        r40.xyz = r40.xyz * r29.www + r36.xyz;
        r36.xyz = r32.www ? r36.xyz : r40.xyz;
        r29.w = dot(r36.xyz, r36.xyz);
        r29.w = rsqrt(r29.w);
        r36.xyz = r36.xyz * r29.www;
        r29.w = dot(r41.xyz, r36.xyz);
        r29.w = saturate(r38.y * r29.w + r38.x);
        r36.w = r29.w * r28.w;
        r36.xyz = r42.xyz / r27.www;
        r39.xyz = r35.xyz;
        r35.xyzw = r20.wwww ? r36.xyzw : r39.xyzw;
        r34.xyz = r35.www * r34.xyz;
        r20.w = cmp(r33.z == 0.000000);
        if (r20.w != 0) {
          r36.x = t18[r19.w].val[224/4];
          r36.y = t18[r19.w].val[224/4+1];
          r36.z = t18[r19.w].val[224/4+2];
          r20.w = cmp(r36.z == 0.000000);
          if (r20.w != 0) {
            r38.xy = float2(-1,-1) + r36.xy;
            r38.zw = float2(-1,-1) + abs(r32.xy);
            r38.xy = float2(1,1) / r38.xy;
            r38.xy = saturate(r38.zw * r38.xy);
            r38.zw = r38.xy * float2(-2,-2) + float2(3,3);
            r38.xy = r38.xy * r38.xy;
            r38.xy = r38.zw * r38.xy;
            r20.w = r38.x * r38.y;
          } else {
            r38.xy = r36.yx * abs(r32.xy);
            r27.w = 2 / r36.z;
            r38.xy = log2(r38.xy);
            r38.xy = r38.xy * r27.ww;
            r38.xy = exp2(r38.xy);
            r28.w = r38.x + r38.y;
            r29.w = r36.x * r36.y;
            r28.w = max(1.17549435e-038, r28.w);
            r30.w = -0.5 * r36.z;
            r28.w = log2(r28.w);
            r28.w = r30.w * r28.w;
            r28.w = exp2(r28.w);
            r32.w = r29.w * r28.w;
            r36.xy = log2(abs(r32.xy));
            r36.xy = r36.xy * r27.ww;
            r36.xy = exp2(r36.xy);
            r27.w = r36.x + r36.y;
            r27.w = max(1.17549435e-038, r27.w);
            r27.w = log2(r27.w);
            r27.w = r30.w * r27.w;
            r27.w = exp2(r27.w);
            r30.w = cmp(r32.w < r27.w);
            r28.w = r29.w * r28.w + -r27.w;
            r29.w = 1 + -r27.w;
            r28.w = 1 / r28.w;
            r28.w = saturate(r29.w * r28.w);
            r29.w = r28.w * -2 + 3;
            r28.w = r28.w * r28.w;
            r28.w = r29.w * r28.w;
            r27.w = cmp(1 < r27.w);
            r27.w = r27.w ? 1.000000 : 0;
            r20.w = r30.w ? r28.w : r27.w;
          }
          r36.xyz = r34.xyz * r20.www;
        } else {
          r20.w = cmp(r33.z < 0);
          if (r20.w != 0) {
            r38.xyz = -r35.yxz * r37.xzy;
            r38.xyz = -r35.xzy * r37.yxz + -r38.xyz;
            r38.xyz = -r35.zyx * r37.www + r38.xyz;
            r20.w = dot(-r35.xyz, r37.xyz);
            r39.xyz = r37.yxz * r20.www;
            r39.xyz = r38.yzx * r37.www + r39.xyz;
            r40.xyz = r38.xyz * -r37.xzy;
            r37.xyz = -r37.zyx * r38.zxy + -r40.xyz;
            r37.xyz = r39.xyz + r37.xyz;
            r20.w = min(abs(r37.x), abs(r37.y));
            r27.w = max(abs(r37.x), abs(r37.y));
            r27.w = 1 / r27.w;
            r20.w = r27.w * r20.w;
            r27.w = r20.w * r20.w;
            r28.w = r27.w * 0.0208350997 + -0.0851330012;
            r28.w = r27.w * r28.w + 0.180141002;
            r28.w = r27.w * r28.w + -0.330299497;
            r27.w = r27.w * r28.w + 0.999866009;
            r28.w = r27.w * r20.w;
            r29.w = cmp(abs(r37.y) < abs(r37.x));
            r28.w = r28.w * -2 + 1.57079637;
            r28.w = r29.w ? r28.w : 0;
            r20.w = r20.w * r27.w + r28.w;
            r27.w = cmp(-r37.y < r37.y);
            r27.w = r27.w ? -3.141593 : 0;
            r20.w = r27.w + r20.w;
            r27.w = min(r37.x, -r37.y);
            r28.w = max(r37.x, -r37.y);
            r27.w = cmp(r27.w < -r27.w);
            r28.w = cmp(r28.w >= -r28.w);
            r27.w = r27.w ? r28.w : 0;
            r20.w = r27.w ? -r20.w : r20.w;
            r37.x = 0.159154937 * r20.w;
            r20.w = 1 + -abs(r37.z);
            r20.w = sqrt(r20.w);
            r27.w = abs(r37.z) * -0.0187292993 + 0.0742610022;
            r27.w = r27.w * abs(r37.z) + -0.212114394;
            r27.w = r27.w * abs(r37.z) + 1.57072878;
            r28.w = r27.w * r20.w;
            r28.w = r28.w * -2 + 3.14159274;
            r29.w = cmp(r37.z < -r37.z);
            r28.w = r29.w ? r28.w : 0;
            r20.w = r27.w * r20.w + r28.w;
            r37.y = 0.318309873 * r20.w;
            r38.z = -r33.z;
            r39.x = t18[r19.w].val[224/4];
            r39.y = t18[r19.w].val[224/4+1];
            r39.z = t18[r19.w].val[224/4+2];
            r39.w = t18[r19.w].val[224/4+3];
            r38.xy = r37.xy * r39.zw + r39.xy;
            r37.xyz = t4.SampleLevel(s2_s, r38.xyz, 0).xyz;
            r36.xyz = r37.xyz * r34.xyz;
          } else {
            r37.xy = r32.xy * float2(0.5,-0.5) + float2(0.5,0.5);
            r38.x = t18[r19.w].val[224/4];
            r38.y = t18[r19.w].val[224/4+1];
            r38.z = t18[r19.w].val[224/4+2];
            r38.w = t18[r19.w].val[224/4+3];
            r33.xy = r37.xy * r38.zw + r38.xy;
            r33.xyz = t4.SampleLevel(s7_s, r33.xyz, 0).xyz;
            r36.xyz = r34.xyz * r33.xyz;
          }
        }
        r33.xyz = cmp(r36.xyz == float3(0,0,0));
        r20.w = r33.y ? r33.x : 0;
        r20.w = r33.z ? r20.w : 0;
        if (r20.w == 0) {
          r33.x = t18[r19.w].val[256/4];
          r33.y = t18[r19.w].val[256/4+1];
          r34.x = t18[r19.w].val[208/4];
          r34.y = t18[r19.w].val[208/4+1];
          r34.z = t18[r19.w].val[208/4+2];
          r34.w = t18[r19.w].val[208/4+3];
          r20.w = cmp(0 < r34.z);
          r27.w = cmp((int)r17.w == 0);
          r20.w = r20.w ? r27.w : 0;
          if (r20.w != 0) {
            r19.w = t18[r19.w].val[264/4];
            r19.w = (int)r19.w & 4;
            r33.zw = float2(1,-1) * r32.yx;
            r32.xy = r19.ww ? r33.zw : r32.xy;
            r32.xy = r32.xy * r34.zw + r34.xy;
            r19.w = saturate(cb3[1948].z + r32.z);
            r34.xyzw = r32.xyxy + r22.xyzw;
            r37.x = t6.SampleCmpLevelZero(s8_s, r34.xy, r19.w).x;
            r37.y = t6.SampleCmpLevelZero(s8_s, r34.zw, r19.w).x;
            r34.xyzw = r32.xyxy + r23.xyzw;
            r37.z = t6.SampleCmpLevelZero(s8_s, r34.xy, r19.w).x;
            r37.w = t6.SampleCmpLevelZero(s8_s, r34.zw, r19.w).x;
            r20.w = dot(r37.xyzw, float4(0.25,0.25,0.25,0.25));
            r32.zw = cmp(r20.ww == float2(0,1));
            r27.w = (int)r32.w | (int)r32.z;
            if (r27.w == 0) {
              r34.xyzw = r32.xyxy + r24.xyzw;
              r37.x = t6.SampleCmpLevelZero(s8_s, r34.xy, r19.w).x;
              r37.y = t6.SampleCmpLevelZero(s8_s, r34.zw, r19.w).x;
              r34.xyzw = r32.xyxy + r25.xyzw;
              r37.z = t6.SampleCmpLevelZero(s8_s, r34.xy, r19.w).x;
              r37.w = t6.SampleCmpLevelZero(s8_s, r34.zw, r19.w).x;
              r27.w = dot(r37.xyzw, cb3[1].xxxx);
              r27.w = r20.w * r9.w + r27.w;
              r19.w = t6.SampleCmpLevelZero(s8_s, r32.xy, r19.w).x;
              r20.w = r19.w * cb3[1].y + r27.w;
            }
            r19.w = -1 + r20.w;
            r19.w = r33.y * r19.w + 1;
            r36.xyz = r36.xyz * r19.www;
            r32.xyz = cmp(r36.xyz == float3(0,0,0));
            r19.w = r32.y ? r32.x : 0;
            r19.w = r32.z ? r19.w : 0;
          } else {
            r19.w = 0;
          }
          if (r19.w == 0) {
            r19.w = dot(r8.xyz, r35.xyz);
            r19.w = max(0, r19.w);
            r20.w = dot(r2.xyz, r35.xyz);
            r27.w = r19.w * 0.5 + 0.5;
            r28.w = saturate(r20.w);
            r28.w = 1 + -r28.w;
            r28.w = r28.w * r28.w;
            r27.w = r28.w * r28.w + r27.w;
            r20.w = 0.200000003 + r20.w;
            r20.w = saturate(4 * r20.w);
            r28.w = dot(r7.xyz, r35.xyz);
            r29.w = 1 + -r28.w;
            r28.w = saturate(r1.x * r29.w + r28.w);
            r20.w = r27.w * r20.w;
            r20.w = r20.w * r28.w + -r19.w;
            r20.w = r1.x * r20.w + r19.w;
            r20.w = r1.y ? r20.w : r19.w;
            r27.w = max(r33.x, r0.x);
            r32.xyz = -r15.xyz * r8.www + r35.xyz;
            r28.w = dot(r32.xyz, r32.xyz);
            r28.w = rsqrt(r28.w);
            r32.xyz = r32.xyz * r28.www;
            r28.w = dot(r32.xyz, r2.xyz);
            r29.w = dot(r35.xyz, r32.xyz);
            r29.w = max(0, r29.w);
            r30.w = r27.w * r27.w;
            r28.w = r28.w * r28.w;
            r32.x = r30.w * r30.w + -1;
            r28.w = r28.w * r32.x + 1;
            r28.w = r30.w / r28.w;
            r28.w = r28.w * r28.w;
            r27.w = 1 + r27.w;
            r27.w = r27.w * r27.w;
            r30.w = 0.125 * r27.w;
            r27.w = -r27.w * 0.125 + 1;
            r32.x = r19.w * r27.w + r30.w;
            r32.x = 4 * r32.x;
            r27.w = r0.w * r27.w + r30.w;
            r27.w = r32.x * r27.w;
            r27.w = r28.w / r27.w;
            r28.w = 1 + -r29.w;
            r28.w = max(9.99999997e-007, r28.w);
            r29.w = r28.w * r28.w;
            r29.w = r29.w * r29.w;
            r28.w = r29.w * r28.w;
            r32.xyz = r20.xyz * r28.www + r5.xyz;
            r32.xyz = r32.xyz * r27.www;
            r32.xyz = r32.xyz * r19.www;
            r29.xyz = r20.www * r36.xyz + r29.xyz;
            r30.xyz = r32.xyz * r36.xyz + r30.xyz;
          }
        }
      }
    }
    r27.xyz = r29.xyz;
    r28.xyz = r30.xyz;
    r12.z = (int)r12.z + 1;
  }
  r0.w = dot(r11.xyz, -r19.xyz);
  r0.w = max(0, r0.w);
  r1.x = min(1, r0.w);
  r1.y = r0.x + r0.y;
  r1.y = 0.5 * r1.y;
  r1.y = r1.y * r1.y;
  r1.y = r1.y * r1.y;
  r1.x = dot(r1.yy, r1.xx);
  r2.xyz = r5.xyz * r1.xxx + float3(1,1,1);
  r2.xyz = r28.xyz * r2.xyz;
  r0.x = dot(r0.xy, float2(0.5,0.5));
  r1.x = dot(r19.xyz, r11.xyz);
  r1.x = r1.x + r1.x;
  r7.xyz = r11.xyz * -r1.xxx + r19.xyz;
  r1.x = sqrt(r0.x);
  r1.x = cb3[27].y * r1.x;
  r1.y = -r0.x * r0.x + 1;
  r1.y = max(0, r1.y);
  r6.x = sqrt(r1.y);
  r6.x = r0.x * r0.x + r6.x;
  r1.y = r6.x * r1.y;
  r7.xyz = r7.xyz + -r11.xyz;
  r7.xyz = r1.yyy * r7.xyz + r11.xyz;
  r1.y = dot(r7.xyz, r7.xyz);
  r1.y = rsqrt(r1.y);
  r7.xyz = r7.xyz * r1.yyy;
  r1.y = mad((int)r3.x, asint(cb3[23].z), asint(cb3[23].y));
  r3.x = mad((int)r3.w, asint(cb3[23].z), asint(cb3[23].x));
  r13.w = 1;
  r14.xyzw = float4(0,0,0,0);
  r16.xyz = float3(0,0,0);
  r3.w = 0.00999999978;
  r6.xz = float2(0,0);
  while (true) {
    r8.w = cmp((uint)r6.z < asuint(cb3[23].z));
    r9.w = ~(int)r6.x;
    r8.w = r8.w ? r9.w : 0;
    if (r8.w == 0) break;
    r8.w = (int)r1.y + (int)r6.z;
    r8.w = t13[r8.w].val[0/4];
    r9.w = (int)r3.x + (int)r6.z;
    r9.w = t13[r9.w].val[0/4];
    r8.w = (int)r8.w & (int)r9.w;
    r9.w = (uint)r6.z << 5;
    r18.xyzw = r14.xyzw;
    r21.xyz = r16.xyz;
    r10.w = r3.w;
    r12.z = r6.x;
    r15.w = r8.w;
    while (true) {
      if (r15.w == 0) break;
      r16.w = firstbitlow((uint)r15.w);
      r16.w = (int)r9.w + (int)r16.w;
      r17.w = (int)r15.w + -1;
      r17.w = (int)r15.w & (int)r17.w;
      r16.w = (int)r16.w * 9;
      r22.x = dot(r13.xyzw, cb3[r16.w+28].xyzw);
      r22.y = dot(r13.xyzw, cb3[r16.w+29].xyzw);
      r22.z = dot(r13.xyzw, cb3[r16.w+30].xyzw);
      r23.xyz = -cb3[r16.w+31].xyz + r22.xyz;
      r23.xyz = saturate(cb3[r16.w+33].xyz * r23.xyz);
      r24.xyz = cb3[r16.w+32].xyz + -r22.xyz;
      r24.xyz = saturate(cb3[r16.w+33].xyz * r24.xyz);
      r19.w = min(r23.y, r23.z);
      r19.w = min(r23.x, r19.w);
      r20.w = min(r24.y, r24.z);
      r20.w = min(r24.x, r20.w);
      r19.w = min(r20.w, r19.w);
      r20.w = cmp(r19.w == 0.000000);
      if (r20.w != 0) {
        r15.w = r17.w;
        continue;
      }
      r20.w = r19.w * r19.w;
      r19.w = r19.w * -2 + 3;
      r19.w = r20.w * r19.w;
      r23.x = dot(r7.xyz, cb3[r16.w+28].xyz);
      r23.y = dot(r7.xyz, cb3[r16.w+29].xyz);
      r23.z = dot(r7.xyz, cb3[r16.w+30].xyz);
      r24.xyz = cb3[r16.w+32].xyz + -cb3[r16.w+31].xyz;
      r24.xyz = r24.xyz * float3(0.5,0.5,0.5) + cb3[r16.w+31].xyz;
      r25.xyz = -r24.xyz + r22.xyz;
      r24.xyz = r25.xyz * cb4[36].xxx + r24.xyz;
      r22.xyz = r3.yyy ? r24.xyz : r22.xyz;
      r24.xyz = cb3[r16.w+32].xyz + -r22.xyz;
      r24.xyz = r24.xyz / r23.xyz;
      r25.xyz = cb3[r16.w+31].xyz + -r22.xyz;
      r25.xyz = r25.xyz / r23.xyz;
      r24.xyz = max(r25.xyz, r24.xyz);
      r20.w = min(r24.y, r24.z);
      r20.w = min(r24.x, r20.w);
      r22.xyz = r23.xyz * abs(r20.www) + r22.xyz;
      r23.xyz = r23.xyz + -r22.xyz;
      r22.xyz = r0.xxx * r23.xyz + r22.xyz;
      r22.w = asuint(cb3[r16.w+31].w);
      r22.xyz = t10.SampleLevel(s2_s, r22.xyzw, r1.x).xyz;
      r22.xyz = cb3[r16.w+35].xyz * r22.xyz;
      r20.w = 1 + -r10.w;
      r21.w = r20.w * r19.w;
      r19.w = r19.w * r20.w + r10.w;
      r22.xyz = r22.xyz * r21.www + r21.xyz;
      r23.xyzw = cb3[r16.w+36].xyzw * r21.wwww + r18.xyzw;
      r16.w = cmp(0.99000001 < r19.w);
      if (r16.w != 0) {
        r18.xyzw = r23.xyzw;
        r21.xyz = r22.xyz;
        r10.w = r19.w;
        r12.z = -1;
        break;
      }
      r18.xyzw = r23.xyzw;
      r21.xyz = r22.xyz;
      r10.w = r19.w;
      r15.w = r17.w;
    }
    r14.xyzw = r18.xyzw;
    r16.xyz = r21.xyz;
    r3.w = r10.w;
    r6.x = r12.z;
    r6.z = (int)r6.z + 1;
  }
  r7.xyz = r16.xyz / r3.www;
  r13.xyzw = r14.xyzw / r3.wwww;
  r11.w = 1;
  r1.x = dot(r11.xyzw, r13.xyzw);
  r1.y = r0.x * cb3[6].x + cb3[6].y;
  r1.y = max(1, r1.y);
  r1.x = r3.z / r1.x;
  r1.x = min(r1.x, r1.y);
  r3.xyz = r7.xyz * r1.xxx;
  r0.w = 1 + -r0.w;
  r0.y = sqrt(r0.w);
  r7.xy = r0.xy * float2(0.984375,0.984375) + float2(0.0078125,0.0078125);
  r7.z = 1;
  r0.xy = t5.SampleLevel(s1_s, r7.xyz, 0).xy;
  r0.w = r0.y + -r0.x;
  r7.xyz = r5.xyz * r0.www + r0.xxx;
  r0.x = 1 + -r0.y;
  r5.xyz = r20.xyz * float3(0.0476190485,0.0476190485,0.0476190485) + r5.xyz;
  r11.xyz = r7.xyz * r5.xyz;
  r5.xyz = -r0.xxx * r5.xyz + float3(1,1,1);
  r5.xyz = r11.xyz / r5.xyz;
  r11.xyz = r5.xyz * r0.xxx;
  r11.xyz = r11.xyz * r3.xyz;
  r3.xyz = r7.xyz * r3.xyz + r11.xyz;
  r0.xyw = r5.xyz * r0.xxx + r7.xyz;
  r0.xyw = float3(1,1,1) + -r0.xyw;
  r0.xyw = r17.xyz * r0.xyw;
  r1.x = r1.z * r2.w;
  r0.xyw = r1.xxx * r0.xyw;
  r0.xyw = r27.xyz * r1.zzz + r0.xyw;
  r5.xyz = r0.xyw * r9.xyz + r12.xyw;
  r2.xyz = r2.xyz * r1.xxx + r5.xyz;
  r1.xyz = r3.xyz * r1.xxx + r2.xyz;
  r0.xyw = r0.xyw * r10.xyz + r1.xyz;
  if (cb0[1].y != 0) {
    r1.x = cmp(cb4[26].x < r7.w);
    r1.y = cb4[26].z * r4.w;
    r1.y = cmp(r1.y < cb4[26].y);
    r1.x = r1.y ? r1.x : 0;
    if (r1.x != 0) {
      r1.y = sqrt(r7.w);
      r1.z = r1.y * cb4[40].y + -r1.y;
      r4.x = cb0[0].z * r1.z + r1.y;
      r1.yz = saturate(cb4[23].wz * r4.wx + cb4[23].yx);
      r1.yz = log2(r1.yz);
      r1.yz = cb4[24].yx * r1.yz;
      r1.yz = exp2(r1.yz);
      r1.y = r1.z * r1.y;
      r1.y = cb4[25].w * r1.y;
      r1.z = r1.y * cb4[40].z + -r1.y;
      r1.y = cb0[0].z * r1.z + r1.y;
      r2.xyz = cb4[25].xyz + -r0.xyw;
      r2.xyz = r1.yyy * r2.xyz + r0.xyw;
    }
    r1.xyz = r1.xxx ? r2.xyz : r0.xyw;
    r2.x = cmp(cb4[33].x < r7.w);
    r2.y = cb4[33].z * r4.w;
    r2.y = cmp(r2.y < cb4[33].y);
    r2.x = r2.y ? r2.x : 0;
    if (r2.x != 0) {
      r2.y = sqrt(r7.w);
      r2.z = r2.y * cb4[40].y + -r2.y;
      r2.y = cb0[0].z * r2.z + r2.y;
      r3.x = dot(r15.xyz, cb4[29].xyz);
      r3.y = dot(r15.xyz, cb4[30].xyz);
      r3.z = dot(r15.xyz, cb4[31].xyz);
      r2.z = dot(r3.xyz, r3.xyz);
      r2.z = rsqrt(r2.z);
      r3.xyz = r3.xyz * r2.zzz;
      r2.y = r2.y * cb4[27].y + cb4[27].x;
      r2.y = max(0, r2.y);
      r2.y = log2(r2.y);
      r2.y = cb4[27].w * r2.y;
      r2.y = exp2(r2.y);
      r2.z = r4.w * cb4[28].y + cb4[28].x;
      r2.z = max(0, r2.z);
      r2.z = log2(r2.z);
      r2.z = cb4[28].z * r2.z;
      r2.z = exp2(r2.z);
      r2.yz = min(float2(1,1), r2.yz);
      r2.y = r2.y * r2.z;
      r2.z = saturate(-r2.y * cb4[27].z + 1);
      r2.z = cb4[28].w * r2.z;
      r3.xyz = t12.SampleLevel(s3_s, r3.xyz, r2.z).xyz;
      r2.z = cb4[33].w * cb4[40].z + -cb4[33].w;
      r2.z = cb0[0].z * r2.z + cb4[33].w;
      r2.y = r2.y * r2.z;
      r3.xyz = r3.xyz * cb4[34].xxx + -r1.xyz;
      r2.yzw = r2.yyy * r3.xyz + r1.xyz;
    }
    r0.xyw = r2.xxx ? r2.yzw : r1.xyz;
  }
  r1.x = cmp(0 < cb0[50].y);
  if (r1.x != 0) {
    r1.x = saturate(dot(-r19.xyz, r8.xyz));
    r1.x = 1 + -r1.x;
    r1.yz = (int2)v8.xy;
    r2.xy = (int2)r1.yz & asint(cb4[11].xy);
    r2.zw = float2(0,0);
    r1.y = t0.Load(r2.xyz).y;
    r1.z = r1.x * r1.y;
    r1.y = -r1.x * r1.y + 1;
    r1.x = r1.x * r1.y + r1.z;
    r1.y = cb1[21].w * 20;
    r1.y = sin(r1.y);
    r1.y = r1.y * 0.5 + 1;
    r1.y = r1.y * 3 + 3;
    r1.x = log2(r1.x);
    r1.x = r1.y * r1.x;
    r1.x = exp2(r1.x);
    r1.y = dot(r0.xyw, float3(0.212500006,0.715399981,0.0720999986));
    r1.z = 0.5 + -r1.y;
    r1.y = r1.z * 0.5 + r1.y;
    r1.x = r1.x * 4 + r1.y;
    r1.xyz = r1.xxx * cb0[51].xyz + -r0.xyw;
    r0.xyw = cb0[50].yyy * r1.xyz + r0.xyw;
  }
  r1.x = 100 * r5.w;
  r1.x = min(1, r1.x);
  r2.xyz = floor(r4.yzw);
  r1.y = r2.x + r2.y;
  r1.y = r1.y + r2.z;
  r1.y = 0.5 * r1.y;
  r1.y = frac(r1.y);
  r1.z = dot(r0.xyw, float3(0.212500006,0.715399981,0.0720999986));
  r1.y = r1.y * 0.200000003 + r1.z;
  r2.xyz = -r1.yyy + r0.xyw;
  r1.xyz = r1.xxx * r2.xyz + r1.yyy;
  r1.xyz = float3(-0.300000012,-0,-0) + r1.xyz;
  r1.xyz = r6.yyy * r1.xyz + float3(0.300000012,0,0);
  o0.xyz = cb0[0].xxx ? r1.xyz : r0.xyw;
  r0.x = 4 + r1.w;
  r0.x = cmp(abs(r0.x) < 0.00999999978);
  r0.y = cmp(r6.w >= 0.899999976);
  r0.y = r0.y ? 1.000000 : 0;
  o0.w = r0.x ? r0.y : r0.z;
  r0.x = cmp(0 < cb0[52].w);
  if (r0.x != 0) {
    r0.x = -0.100000001 + cb0[52].w;
    r0.x = saturate(1.11111116 * r0.x);
    r0.y = r0.x * -2 + 3;
    r0.x = r0.x * r0.x;
    r0.x = r0.y * r0.x;
    r0.yzw = cb0[52].xyz + -r4.yzw;
    r0.y = dot(r0.yzw, r0.yzw);
    r0.y = sqrt(r0.y);
    r0.y = -6 + r0.y;
    r0.y = saturate(-0.25 * r0.y);
    r0.z = r0.y * -2 + 3;
    r0.y = r0.y * r0.y;
    r0.y = r0.z * r0.y + -1;
    r0.y = max(0, -r0.y);
    r0.yz = r0.yy * float2(0.50999999,0.909999967) + float2(0.5,0.100000001);
    r0.z = r0.z + -r0.y;
    r0.x = r0.x * r0.z + r0.y;
    r0.yz = (int2)v8.xy;
    r1.xy = (int2)r0.yz & asint(cb4[11].xy);
    r1.zw = float2(0,0);
    r0.y = t0.Load(r1.xyz).y;
    r0.x = r0.y + -r0.x;
    r0.x = cmp(r0.x < 0);
    if (r0.x != 0) discard;
  }
  return;
}

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Note: shader requires additional functionality:
//       Early depth-stencil
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 8   xyz         0     NONE   float   x   
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 4   xyzw        4     NONE   float   xyzw
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                12   x           7     NONE    uint       
// SV_Position              0   xyzw        8      POS   float   xyzw
// SV_IsFrontFace           0   x           9    FFACE    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
//       0x00000000: ps_5_0
//       0x00000008: dcl_globalFlags refactoringAllowed | forceEarlyDepthStencil
//       0x0000000C: dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
//                               { 0, 1.000000, 0, 0},
//                               { 0, 0, 1.000000, 0},
//                               { 0, 0, 0, 1.000000} }
//       0x00000054: dcl_constantbuffer CB0[54], immediateIndexed
//       0x00000064: dcl_constantbuffer CB1[34], immediateIndexed
//       0x00000074: dcl_constantbuffer CB3[1985], dynamicIndexed
//       0x00000084: dcl_constantbuffer CB4[41], immediateIndexed
//       0x00000094: dcl_constantbuffer CB2[3600], dynamicIndexed
//       0x000000A4: dcl_sampler s0, mode_default
//       0x000000B0: dcl_sampler s1, mode_default
//       0x000000BC: dcl_sampler s2, mode_default
//       0x000000C8: dcl_sampler s3, mode_default
//       0x000000D4: dcl_sampler s4, mode_default
//       0x000000E0: dcl_sampler s5, mode_default
//       0x000000EC: dcl_sampler s6, mode_default
//       0x000000F8: dcl_sampler s7, mode_default
//       0x00000104: dcl_sampler s8, mode_comparison
//       0x00000110: dcl_sampler s9, mode_default
//       0x0000011C: dcl_sampler s10, mode_default
//       0x00000128: dcl_sampler s11, mode_default
//       0x00000134: dcl_resource_texture2d (float,float,float,float) t0
//       0x00000144: dcl_resource_texture3d (float,float,float,float) t4
//       0x00000154: dcl_resource_texture2darray (float,float,float,float) t5
//       0x00000164: dcl_resource_texture2d (float,float,float,float) t6
//       0x00000174: dcl_resource_texture2d (float,float,float,float) t7
//       0x00000184: dcl_resource_texture2d (float,float,float,float) t8
//       0x00000194: dcl_resource_texture2d (float,float,float,float) t9
//       0x000001A4: dcl_resource_texturecubearray (float,float,float,float) t10
//       0x000001B4: dcl_resource_texturecube (float,float,float,float) t12
//       0x000001C4: dcl_resource_structured t13, 4
//       0x000001D4: dcl_resource_texture2d (float,float,float,float) t14
//       0x000001E4: dcl_resource_texture2d (float,float,float,float) t15
//       0x000001F4: dcl_resource_texture3d (float,float,float,float) t16
//       0x00000204: dcl_resource_texture3d (float,float,float,float) t17
//       0x00000214: dcl_resource_structured t18, 416
//       0x00000224: dcl_resource_texture2d (float,float,float,float) t19
//       0x00000234: dcl_resource_texture2d (float,float,float,float) t20
//       0x00000244: dcl_resource_texture2d (float,float,float,float) t21
//       0x00000254: dcl_resource_texture2d (float,float,float,float) t22
//       0x00000264: dcl_resource_texture2d (float,float,float,float) t23
//       0x00000274: dcl_resource_texture2d (float,float,float,float) t24
//       0x00000284: dcl_resource_texture2d (float,float,float,float) t25
//       0x00000294: dcl_resource_texture2d (float,float,float,float) t26
//       0x000002A4: dcl_resource_texture2d (float,float,float,float) t27
//       0x000002B4: dcl_resource_texture2d (float,float,float,float) t28
//       0x000002C4: dcl_resource_texture2d (float,float,float,float) t29
//       0x000002D4: dcl_resource_texture2d (float,float,float,float) t30
//       0x000002E4: dcl_resource_texture2d (float,float,float,float) t31
//       0x000002F4: dcl_resource_texture2d (float,float,float,float) t32
//       0x00000304: dcl_resource_texture2d (float,float,float,float) t33
//       0x00000314: dcl_resource_texture2d (float,float,float,float) t34
//       0x00000324: dcl_resource_texture2d (float,float,float,float) t35
//       0x00000334: dcl_resource_texture2d (float,float,float,float) t36
//       0x00000344: dcl_resource_texture2d (float,float,float,float) t37
//       0x00000354: dcl_resource_texture2d (float,float,float,float) t38
//       0x00000364: dcl_resource_texture2d (float,float,float,float) t39
//       0x00000374: dcl_resource_texture2d (float,float,float,float) t40
//       0x00000384: dcl_resource_texture2d (float,float,float,float) t41
//       0x00000394: dcl_resource_texture2d (float,float,float,float) t42
//       0x000003A4: dcl_resource_texture2d (float,float,float,float) t43
//       0x000003B4: dcl_resource_texture2d (float,float,float,float) t44
//       0x000003C4: dcl_resource_texture2d (float,float,float,float) t45
//       0x000003D4: dcl_resource_texture2d (float,float,float,float) t46
//       0x000003E4: dcl_resource_texture2d (float,float,float,float) t47
//       0x000003F4: dcl_resource_texture2d (float,float,float,float) t48
//       0x00000404: dcl_resource_texture2d (float,float,float,float) t49
//       0x00000414: dcl_input_ps linear v0.x
//       0x00000420: dcl_input_ps linear v1.xyz
//       0x0000042C: dcl_input_ps linear v2.xyz
//       0x00000438: dcl_input_ps linear v3.xyzw
//       0x00000444: dcl_input_ps linear centroid v4.xyzw
//       0x00000450: dcl_input_ps linear centroid v5.xyz
//       0x0000045C: dcl_input_ps linear v6.xyzw
//       0x00000468: dcl_input_ps_siv linear noperspective v8.xyzw, position
//       0x00000478: dcl_input_ps_sgv constant v9.x, is_front_face
//       0x00000488: dcl_output o0.xyzw
//       0x00000494: dcl_temps 43
//    0  0x0000049C: mul r0.x, cb0[8].x, cb4[9].w
//    1  0x000004C0: lt r0.y, l(0.000000), r0.x
//    2  0x000004DC: if_nz r0.y
//    3  0x000004E8:   add r1.xyz, v1.yzxy, cb4[35].yzxy
//    4  0x00000508:   deriv_rtx_coarse r0.zw, v3.xxxy
//    5  0x0000051C:   deriv_rty_coarse r2.xy, v3.yxyy
//    6  0x00000530:   deriv_rtx_coarse r3.xyz, r1.yzxy
//    7  0x00000544:   deriv_rty_coarse r4.xyz, r1.xyzx
//    8  0x00000558:   mul r0.w, r0.w, r2.y
//    9  0x00000574:   mad r0.z, r0.z, r2.x, -r0.w
//   10  0x0000059C:   mul r2.xyz, r3.xyzx, r4.xyzx
//   11  0x000005B8:   mad r2.xyz, r3.zxyz, r4.yzxy, -r2.xyzx
//   12  0x000005E0:   dp3 r0.w, r2.xyzx, r2.xyzx
//   13  0x000005FC:   sqrt r0.w, r0.w
//   14  0x00000610:   max r0.w, r0.w, l(0.000100)
//   15  0x0000062C:   div r0.z, |r0.z|, r0.w
//   16  0x0000064C:   lt r0.z, r0.z, l(0.002000)
//   17  0x00000668:   mul r2.xyzw, v3.xyxy, l(2.500000, 2.500000, 7.500000, 7.500000)
//   18  0x00000690:   movc r0.zw, r0.zzzz, r2.zzzw, r2.xxxy
//   19  0x000006B4:   mad r0.zw, r1.zzzx, l(0.000000, 0.000000, 0.000100, 0.000100), r0.zzzw
//   20  0x000006E4:   sample_indexable(texture2d)(float,float,float,float) r1.xyzw, r0.zwzz, t22.xwyz, s0
//   21  0x00000710:   mad r2.xz, r1.xxzx, l(2.000000, 0.000000, 2.000000, 0.000000), l(-1.000000, 0.000000, -1.000000, 0.000000)
//   22  0x0000074C:   mad r0.z, v0.x, l(0.010000), r1.w
//   23  0x00000770:   mul r0.w, cb4[9].x, cb4[9].x
//   24  0x00000794:   mul r0.w, r0.w, cb0[8].z
//   25  0x000007B4:   mad r0.w, r0.w, l(0.100000), r0.z
//   26  0x000007D8:   frc r0.w, r0.w
//   27  0x000007EC:   mad r0.w, r0.x, l(0.250000), -r0.w
//   28  0x00000814:   mul r0.w, r0.w, l(5.000000)
//   29  0x00000830:   add r1.z, l(0.001000), cb4[9].w
//   30  0x00000850:   div_sat r0.w, r0.w, r1.z
//   31  0x0000086C:   add r1.z, v2.z, l(0.750000)
//   32  0x00000888:   mul_sat r1.z, r1.z, l(4.000000)
//   33  0x000008A4:   mul r1.x, r0.w, r1.z
//   34  0x000008C0:   mov r2.y, -r2.z
//   35  0x000008D8:   mul r1.zw, r1.xxxx, r2.xxxy
//   36  0x000008F4:   mul r1.zw, r1.yyyy, r1.zzzw
//   37  0x00000910:   mad r1.zw, r1.zzzw, l(0.000000, 0.000000, -0.020000, -0.020000), v3.xxxy
//   38  0x00000940: else 
//   39  0x00000944:   mov r1.zw, v3.xxxy
//   40  0x00000958:   mov r2.xy, l(0,0,0,0)
//   41  0x00000978:   mov r1.xy, l(0,0,0,0)
//   42  0x00000998:   mov r0.z, l(0)
//   43  0x000009AC: endif 
//   44  0x000009B0: dp3 r0.w, v2.xyzx, v2.xyzx
//   45  0x000009CC: ge r0.w, r0.w, l(1.010000)
//   46  0x000009E8: movc r3.xyz, r0.wwww, v5.xyzx, v2.xyzx
//   47  0x00000A0C: ine r0.w, cb0[1].w, l(0)
//   48  0x00000A2C: ieq r2.w, cb0[1].z, l(0)
//   49  0x00000A4C: and r0.w, r0.w, r2.w
//   50  0x00000A68: if_nz r0.w
//   51  0x00000A74:   movc r2.w, v9.x, l(1.000000), l(-1.000000)
//   52  0x00000A98:   mul r3.xyz, r2.wwww, r3.xyzx
//   53  0x00000AB4: endif 
//   54  0x00000AB8: dp3 r2.w, r3.xyzx, r3.xyzx
//   55  0x00000AD4: rsq r2.w, r2.w
//   56  0x00000AE8: mul r3.xyz, r2.wwww, r3.xyzx
//   57  0x00000B04: add r4.yzw, v1.xxyz, cb4[35].xxyz
//   58  0x00000B24: sample_indexable(texture2d)(float,float,float,float) r5.xyz, r1.zwzz, t14.xyzw, s6
//   59  0x00000B50: mul r5.xyz, r5.xyzx, v4.xyzx
//   60  0x00000B6C: sample_indexable(texture2d)(float,float,float,float) r2.w, r1.zwzz, t21.yzwx, s5
//   61  0x00000B98: sample_indexable(texture2d)(float,float,float,float) r6.xyz, r1.zwzz, t15.zxyw, s5
//   62  0x00000BC4: add r3.w, -cb0[7].y, cb0[7].z
//   63  0x00000BEC: mad r3.w, r6.z, r3.w, cb0[7].y
//   64  0x00000C14: sample_indexable(texture2d)(float,float,float,float) r6.zw, r1.zwzz, t20.zwxy, s5
//   65  0x00000C40: add r5.w, r6.w, r6.z
//   66  0x00000C5C: add r7.x, r5.w, l(-1.003922)
//   67  0x00000C78: add r7.y, -r6.w, r6.z
//   68  0x00000C98: add r5.w, -|r7.x|, l(1.000000)
//   69  0x00000CB8: add r7.z, -|r7.y|, r5.w
//   70  0x00000CD8: dp3 r5.w, r7.xyzx, r7.xyzx
//   71  0x00000CF4: rsq r5.w, r5.w
//   72  0x00000D08: mul r7.xyz, r5.wwww, r7.xyzx
//   73  0x00000D24: ieq r5.w, v9.x, l(0)
//   74  0x00000D40: and r0.w, r0.w, r5.w
//   75  0x00000D5C: movc r5.w, r0.w, l(-1.000000), l(1.000000)
//   76  0x00000D80: mul r8.xyz, r5.wwww, v2.xyzx
//   77  0x00000D9C: lt r5.w, l(0.000000), v6.w
//   78  0x00000DB8: movc r5.w, r5.w, l(1.000000), l(-1.000000)
//   79  0x00000DDC: mul r9.xyz, r8.zxyz, v6.yzxy
//   80  0x00000DF8: mad r9.xyz, r8.yzxy, v6.zxyz, -r9.xyzx
//   81  0x00000E20: mul r9.xyz, r5.wwww, r9.xyzx
//   82  0x00000E3C: movc r9.xyz, cb4[3].wwww, -r9.xyzx, r9.xyzx
//   83  0x00000E68: movc r7.w, r0.w, r7.y, -r7.y
//   84  0x00000E90: mul r10.xyz, r9.xyzx, r7.wwww
//   85  0x00000EAC: mad r10.xyz, r7.xxxx, v6.xyzx, r10.xyzx
//   86  0x00000ED0: mad r10.xyz, r7.zzzz, r8.xyzx, r10.xyzx
//   87  0x00000EF4: dp3 r5.w, r10.xyzx, r10.xyzx
//   88  0x00000F10: rsq r5.w, r5.w
//   89  0x00000F24: mul r11.xyz, r5.wwww, r10.xyzx
//   90  0x00000F40: if_nz r0.y
//   91  0x00000F4C:   add r0.y, r6.y, l(-0.750000)
//   92  0x00000F68:   mul_sat r0.y, r0.y, l(4.000000)
//   93  0x00000F84:   dp2 r6.z, r2.xyxx, r2.xyxx
//   94  0x00000FA0:   min r6.z, r6.z, l(1.000000)
//   95  0x00000FBC:   add r6.z, -r6.z, l(1.000000)
//   96  0x00000FDC:   sqrt r2.z, r6.z
//   97  0x00000FF0:   mul r12.xyz, r2.yyyy, r9.xyzx
//   98  0x0000100C:   mad r12.xyz, r2.xxxx, v6.xyzx, r12.xyzx
//   99  0x00001030:   mad r12.xyz, r2.zzzz, r3.xyzx, r12.xyzx
//  100  0x00001054:   dp3 r6.z, r12.xyzx, r12.xyzx
//  101  0x00001070:   rsq r6.z, r6.z
//  102  0x00001084:   mad r0.z, cb0[8].z, l(0.200000), r0.z
//  103  0x000010AC:   mul r0.z, r0.z, l(6.283185)
//  104  0x000010C8:   sincos null, r0.z, r0.z
//  105  0x000010E0:   mad r0.z, r0.z, l(0.500000), l(0.500000)
//  106  0x00001104:   mov_sat r6.w, r0.x
//  107  0x00001118:   mul r0.z, r0.z, r6.w
//  108  0x00001134:   mul r8.w, r6.w, l(0.500000)
//  109  0x00001150:   mad_sat r8.w, r1.x, r1.y, r8.w
//  110  0x00001174:   mad r9.w, r0.y, l(0.750000), l(0.250000)
//  111  0x00001198:   mul r8.w, r8.w, r9.w
//  112  0x000011B4:   mul r6.w, r6.w, r8.w
//  113  0x000011D0:   add r0.y, -r0.y, l(1.000000)
//  114  0x000011F0:   mul r0.y, r0.y, r1.x
//  115  0x0000120C:   mul r1.x, r0.y, l(0.250000)
//  116  0x00001228:   mad r2.xyz, r2.xyzx, l(-1.000000, -1.000000, 1.000000, 0.000000), -r7.xwzx
//  117  0x0000125C:   mad r7.xyz, r1.xxxx, r2.xyzx, r7.xwzx
//  118  0x00001280:   mad r1.x, r6.w, l(1.500000), l(1.000000)
//  119  0x000012A4:   mad r2.xyz, r10.xyzx, r5.wwww, -r3.xyzx
//  120  0x000012CC:   mad r2.xyz, r1.xxxx, r2.xyzx, r3.xyzx
//  121  0x000012F0:   dp3 r1.x, r2.xyzx, r2.xyzx
//  122  0x0000130C:   rsq r1.x, r1.x
//  123  0x00001320:   mul r2.xyz, r1.xxxx, r2.xyzx
//  124  0x0000133C:   mad r10.xyz, r12.xyzx, r6.zzzz, -r2.xyzx
//  125  0x00001364:   mad r2.xyz, r0.yyyy, r10.xyzx, r2.xyzx
//  126  0x00001388:   mul r0.y, r1.y, r0.y
//  127  0x000013A4:   add_sat r1.x, r0.y, r0.y
//  128  0x000013C0:   log r10.xyz, r5.xyzx
//  129  0x000013D4:   mul r10.xyz, r10.xyzx, l(1.600000, 1.600000, 1.600000, 0.000000)
//  130  0x000013FC:   exp r10.xyz, r10.xyzx
//  131  0x00001410:   mad r10.xyz, r10.xyzx, l(0.600000, 0.600000, 0.600000, 0.000000), -r5.xyzx
//  132  0x00001444:   mad r5.xyz, r6.wwww, r10.xyzx, r5.xyzx
//  133  0x00001468:   mul r0.z, r0.z, l(0.200000)
//  134  0x00001484:   mad r0.y, r0.y, l(4.000000), r0.z
//  135  0x000014A8:   mad_sat r0.x, r0.x, l(0.400000), r0.y
//  136  0x000014CC:   mul r0.x, r0.x, r2.w
//  137  0x000014E8:   add r0.y, -r6.y, l(0.100000)
//  138  0x00001508:   mad r0.xy, r0.xxxx, r0.yyyy, r6.yyyy
//  139  0x0000152C: else 
//  140  0x00001530:   mov r2.xyz, l(1.000000,1.000000,1.000000,0)
//  141  0x00001550:   mov r0.xy, r6.yyyy
//  142  0x00001564:   mov r1.x, l(0)
//  143  0x00001578:   mov r7.xyz, r7.xwzx
//  144  0x0000158C: endif 
//  145  0x00001590: ne r0.z, cb0[53].x, l(0.000000)
//  146  0x000015B0: if_nz r0.z
//  147  0x000015BC:   add r6.yzw, -r4.yyzw, cb1[19].xxyz
//  148  0x000015E0:   dp3 r0.z, r6.yzwy, r6.yzwy
//  149  0x000015FC:   rsq r0.z, r0.z
//  150  0x00001610:   mul r6.yzw, r0.zzzz, r6.yyzw
//  151  0x0000162C:   dp3 r0.z, r6.yzwy, r11.xyzx
//  152  0x00001648:   add r0.z, -r0.z, l(1.000000)
//  153  0x00001668:   mul r0.z, r0.z, cb0[53].x
//  154  0x00001688:   mul r0.z, r6.x, r0.z
//  155  0x000016A4:   sincos r10.x, r12.x, r0.z
//  156  0x000016C0:   mul r6.yzw, r5.zzxy, l(0.000000, 0.577350, 0.577350, 0.577350)
//  157  0x000016E8:   mad r6.yzw, r5.zzxy, l(0.000000, 0.577350, 0.577350, 0.577350), -r6.wwyz
//  158  0x0000171C:   mul r6.yzw, r10.xxxx, r6.yyzw
//  159  0x00001738:   mad r6.yzw, r5.xxyz, r12.xxxx, r6.yyzw
//  160  0x0000175C:   dp3 r0.z, l(0.577350, 0.577350, 0.577350, 0.000000), r5.xyzx
//  161  0x00001784:   mul r0.z, r0.z, l(0.577350)
//  162  0x000017A0:   add r1.y, -r12.x, l(1.000000)
//  163  0x000017C0:   mad r6.yzw, r0.zzzz, r1.yyyy, r6.yyzw
//  164  0x000017E4:   dp3 r0.z, r5.xyzx, l(0.212500, 0.715400, 0.072100, 0.000000)
//  165  0x0000180C:   min r1.y, r5.z, r5.y
//  166  0x00001828:   min r1.y, r1.y, r5.x
//  167  0x00001844:   max r5.w, r5.z, r5.y
//  168  0x00001860:   max r5.w, r5.w, r5.x
//  169  0x0000187C:   add r1.y, -r1.y, r5.w
//  170  0x0000189C:   ne r7.w, r5.w, l(0.000000)
//  171  0x000018B8:   div r1.y, r1.y, r5.w
//  172  0x000018D4:   and r1.y, r1.y, r7.w
//  173  0x000018F0:   log r1.y, r1.y
//  174  0x00001904:   mul r1.y, r1.y, l(0.125000)
//  175  0x00001920:   exp r1.y, r1.y
//  176  0x00001934:   add r6.yzw, -r0.zzzz, r6.yyzw
//  177  0x00001954:   mad r5.xyz, r1.yyyy, r6.yzwy, r0.zzzz
//  178  0x00001978: endif 
//  179  0x0000197C: sample_indexable(texture2d)(float,float,float,float) r6.yz, r1.zwzz, t24.zxyw, s11
//  180  0x000019A8: lt r0.z, l(0.000000), r6.y
//  181  0x000019C4: lt r1.y, l(-1.000000), v3.z
//  182  0x000019E0: and r0.z, r0.z, r1.y
//  183  0x000019FC: if_nz r0.z
//  184  0x00001A08:   or r0.z, cb0[0].y, cb0[14].x
//  185  0x00001A2C:   if_nz r0.z
//  186  0x00001A38:     movc r0.z, cb4[3].y, l(0), v4.w
//  187  0x00001A60:     eq r10.xy, cb0[15].xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
//  188  0x00001A8C:     or r1.y, r10.y, r10.x
//  189  0x00001AA8:     eq r5.w, r6.y, l(0.000000)
//  190  0x00001AC4:     or r1.y, r1.y, r5.w
//  191  0x00001AE0:     if_z r1.y
//  192  0x00001AEC:       ieq r1.y, cb0[12].w, l(1)
//  193  0x00001B0C:       add r10.xy, v3.wzww, l(-0.500000, -0.500000, 0.000000, 0.000000)
//  194  0x00001B34:       add r10.xy, r10.xyxx, -cb0[14].zyzz
//  195  0x00001B58:       mul r10.xy, r10.xyxx, |cb0[15].xxxx|
//  196  0x00001B7C:       mul r5.w, cb0[15].z, l(6.283180)
//  197  0x00001B9C:       sincos r12.x, r13.x, r5.w
//  198  0x00001BB8:       mul r10.zw, r10.xxxy, r12.xxxx
//  199  0x00001BD4:       mad r14.x, r10.y, r13.x, -r10.z
//  200  0x00001BFC:       mad r14.y, r10.x, r13.x, r10.w
//  201  0x00001C20:       add r10.xy, r14.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
//  202  0x00001C48:       mov_sat r14.xyzw, r10.xyxy
//  203  0x00001C5C:       ne r10.xy, r10.xyxx, r14.xyxx
//  204  0x00001C78:       or r5.w, r10.y, r10.x
//  205  0x00001C94:       ieq r6.w, cb0[13].x, l(0)
//  206  0x00001CB4:       and r6.w, r1.y, r6.w
//  207  0x00001CD0:       add r7.w, -cb0[13].y, cb4[39].z
//  208  0x00001CF8:       movc r6.w, r6.w, r7.w, l(0.900000)
//  209  0x00001D1C:       lt r7.w, r6.w, l(0.900000)
//  210  0x00001D38:       sample_b_indexable(texture2d)(float,float,float,float) r10.xyzw, r14.zwzz, t25.xyzw, s0, l(-1.000000)
//  211  0x00001D6C:       mul_sat r8.w, r10.w, l(12.750000)
//  212  0x00001D88:       mul r15.x, r6.y, r8.w
//  213  0x00001DA4:       resinfo_indexable(texture2d)(float,float,float,float) r12.yz, l(0), t25.zxyw
//  214  0x00001DC8:       div r12.yz, l(1.000000, 1.000000, 1.000000, 1.000000), r12.yyzy
//  215  0x00001DF0:       add r13.yz, -r12.yyzy, l(0.000000, 1.000000, 1.000000, 0.000000)
//  216  0x00001E1C:       max r12.yz, r12.yyzy, r14.zzwz
//  217  0x00001E38:       min r12.yz, r13.yyzy, r12.yyzy
//  218  0x00001E54:       lod r9.w, r12.yzyy, t25.x, s0
//  219  0x00001E78:       add_sat r11.w, r9.w, l(-3.000000)
//  220  0x00001E94:       add r11.w, -r11.w, l(1.000000)
//  221  0x00001EB4:       lt r12.y, l(0.000000), r11.w
//  222  0x00001ED0:       if_nz r12.y
//  223  0x00001EDC:         add r12.yz, r14.zzwz, l(0.000000, -0.500000, -0.500000, 0.000000)
//  224  0x00001F04:         mul r13.yzw, cb1[20].zzxy, cb1[21].yyzx
//  225  0x00001F28:         mad r13.yzw, cb1[20].yyzx, cb1[21].zzxy, -r13.yyzw
//  226  0x00001F58:         dp3 r12.w, r13.yzwy, -r11.xyzx
//  227  0x00001F78:         dp3 r13.y, cb1[21].xyzx, r11.xyzx
//  228  0x00001F98:         mul r13.z, r12.x, r13.y
//  229  0x00001FB4:         mad r14.x, r12.w, r13.x, -r13.z
//  230  0x00001FDC:         mul r13.x, r13.x, r13.y
//  231  0x00001FF8:         mad r14.y, r12.w, r12.x, r13.x
//  232  0x0000201C:         mad r12.xy, -r14.xyxx, l(0.010000, 0.010000, 0.000000, 0.000000), r12.yzyy
//  233  0x00002050:         add_sat r12.xy, r12.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
//  234  0x00002078:         sample_b_indexable(texture2d)(float,float,float,float) r12.x, r12.xyxx, t25.wxyz, s0, l(1.000000)
//  235  0x000020AC:         mul_sat r12.x, r12.x, l(12.750000)
//  236  0x000020C8:         mul r12.x, r6.y, r12.x
//  237  0x000020E4:         mul r12.x, r12.x, l(0.700000)
//  238  0x00002100:         max r12.x, r12.x, r15.x
//  239  0x0000211C:         mad r8.w, -r8.w, r6.y, r12.x
//  240  0x00002144:         mad r15.z, r11.w, r8.w, r15.x
//  241  0x00002168:         mov r15.xy, r15.zxzz
//  242  0x0000217C:       else 
//  243  0x00002180:         mov r15.y, l(1.000000)
//  244  0x00002194:       endif 
//  245  0x00002198:       ge r8.w, l(0.000000), r15.x
//  246  0x000021B4:       not r11.w, r7.w
//  247  0x000021C8:       and r8.w, r8.w, r11.w
//  248  0x000021E4:       or r5.w, r5.w, r8.w
//  249  0x00002200:       sample_b_indexable(texture2d)(float,float,float,float) r12.xyzw, r14.zwzz, t27.zxyw, s0, l(-1.000000)
//  250  0x00002234:       add r8.w, r12.z, r12.y
//  251  0x00002250:       add r13.x, r8.w, l(-1.003922)
//  252  0x0000226C:       add r13.y, -r12.z, r12.y
//  253  0x0000228C:       add r8.w, -|r13.x|, l(1.000000)
//  254  0x000022AC:       add r13.z, -|r13.y|, r8.w
//  255  0x000022CC:       dp3 r8.w, r13.xyzx, r13.xyzx
//  256  0x000022E8:       rsq r8.w, r8.w
//  257  0x000022FC:       mul r13.xyz, r8.wwww, r13.xyzx
//  258  0x00002318:       max r8.w, r9.w, l(3.000000)
//  259  0x00002334:       sample_l_indexable(texture2d)(float,float,float,float) r14.xy, r1.zwzz, t20.xyzw, s0, r8.w
//  260  0x00002368:       add r9.w, r14.y, r14.x
//  261  0x00002384:       add r16.x, r9.w, l(-1.003922)
//  262  0x000023A0:       add r16.y, -r14.y, r14.x
//  263  0x000023C0:       add r9.w, -|r16.x|, l(1.000000)
//  264  0x000023E0:       add r16.z, -|r16.y|, r9.w
//  265  0x00002400:       dp3 r9.w, r16.xyzx, r16.xyzx
//  266  0x0000241C:       rsq r9.w, r9.w
//  267  0x00002430:       mul r16.xyz, r9.wwww, r16.xyzx
//  268  0x0000244C:       mov r13.w, -r13.y
//  269  0x00002464:       mul r13.xyz, r15.xxxx, r13.xwzx
//  270  0x00002480:       mov r16.w, -r16.y
//  271  0x00002498:       mad r13.xyz, r13.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r16.xwzx
//  272  0x000024C8:       dp3 r9.w, r13.xyzx, r13.xyzx
//  273  0x000024E4:       rsq r9.w, r9.w
//  274  0x000024F8:       mul r13.xyz, r9.wwww, r13.xyzx
//  275  0x00002514:       sample_l_indexable(texture2d)(float,float,float,float) r8.w, r1.zwzz, t21.yzwx, s0, r8.w
//  276  0x00002548:       log r8.w, r8.w
//  277  0x0000255C:       mul r8.w, r8.w, l(0.750000)
//  278  0x00002578:       exp r8.w, r8.w
//  279  0x0000258C:       mad r9.w, r15.y, l(0.500000), l(0.500000)
//  280  0x000025B0:       min r8.w, r8.w, r9.w
//  281  0x000025CC:       movc r12.y, cb0[19].x, l(1.000000), l(0)
//  282  0x000025F4:       if_nz cb0[20].x
//  283  0x00002604:         sample_b_indexable(texture2d)(float,float,float,float) r9.w, r14.zwzz, t29.xyzw, s0, l(-1.000000)
//  284  0x00002638:         add r9.w, -r9.w, l(1.000000)
//  285  0x00002658:         ne r11.w, l(0.000000, 0.000000, 0.000000, 0.000000), r9.w
//  286  0x00002680:         if_nz r11.w
//  287  0x0000268C:           movc r11.w, cb4[2].x, l(2.500000), l(1.750000)
//  288  0x000026B4:           mul r11.w, r11.w, cb0[20].z
//  289  0x000026D4:           add r16.xyz, -r4.yzwy, cb1[19].xyzx
//  290  0x000026F8:           dp3 r14.x, r16.xyzx, r16.xyzx
//  291  0x00002714:           rsq r14.x, r14.x
//  292  0x00002728:           mul r16.xyz, r14.xxxx, r16.xyzx
//  293  0x00002744:           mul r14.xy, r11.wwww, r14.zwzz
//  294  0x00002760:           add r15.zw, r14.zzzw, l(0.000000, 0.000000, 0.500000, 0.500000)
//  295  0x00002788:           mul r15.zw, r11.wwww, r15.zzzw
//  296  0x000027A4:           deriv_rtx_coarse r17.xy, r14.xyxx
//  297  0x000027B8:           deriv_rty_coarse r17.zw, r14.xxxy
//  298  0x000027CC:           max r17.xy, r17.zwzz, r17.xyxx
//  299  0x000027E8:           min r11.w, r17.y, r17.x
//  300  0x00002804:           mad_sat r11.w, -r11.w, l(40.000000), l(1.000000)
//  301  0x0000282C:           sample_indexable(texture2d)(float,float,float,float) r17.xyz, r14.xyxx, t28.xywz, s9
//  302  0x00002858:           add r14.x, r17.y, r17.x
//  303  0x00002874:           add r18.x, r14.x, l(-1.003922)
//  304  0x00002890:           add r18.y, -r17.y, r17.x
//  305  0x000028B0:           add r14.x, -|r18.x|, l(1.000000)
//  306  0x000028D0:           add r18.z, -|r18.y|, r14.x
//  307  0x000028F0:           dp3 r14.x, r18.xyzx, r18.xyzx
//  308  0x0000290C:           rsq r14.x, r14.x
//  309  0x00002920:           mul r17.xyw, r14.xxxx, r18.xyxz
//  310  0x0000293C:           mul r17.xyw, r17.wwww, r17.xyxw
//  311  0x00002958:           mul r18.xyz, r9.xyzx, r17.yyyy
//  312  0x00002974:           mad r18.xyz, r17.xxxx, v6.xyzx, r18.xyzx
//  313  0x00002998:           mad r18.xyz, r17.wwww, r3.xyzx, r18.xyzx
//  314  0x000029BC:           dp3 r14.x, r18.xyzx, r18.xyzx
//  315  0x000029D8:           rsq r14.x, r14.x
//  316  0x000029EC:           mul r18.xyz, r14.xxxx, r18.xyzx
//  317  0x00002A08:           dp3 r14.x, r16.xyzx, r18.xyzx
//  318  0x00002A24:           add r14.x, r14.x, r14.x
//  319  0x00002A40:           mad r18.xyz, r18.xyzx, -r14.xxxx, r16.xyzx
//  320  0x00002A68:           mul r18.xyz, r18.xyzx, l(12.000000, 12.000000, 12.000000, 0.000000)
//  321  0x00002A90:           sincos r18.xyz, null, r18.xyzx
//  322  0x00002AA8:           max r19.xyz, -r18.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
//  323  0x00002AD4:           dp3 r14.x, r19.xyzx, l(0.212500, 0.715400, 0.072100, 0.000000)
//  324  0x00002AFC:           mul r14.x, r14.x, r14.x
//  325  0x00002B18:           add_sat r19.xyz, -r18.xyzx, l(0.150000, 0.150000, 0.150000, 0.000000)
//  326  0x00002B44:           dp3 r14.y, r19.xyzx, l(0.212500, 0.715400, 0.072100, 0.000000)
//  327  0x00002B6C:           mul r14.y, r14.y, l(0.250000)
//  328  0x00002B88:           mad r14.x, r14.x, r14.x, r14.y
//  329  0x00002BAC:           add r18.xyz, r18.xyzx, l(-0.990000, -0.990000, -0.990000, 0.000000)
//  330  0x00002BD4:           max r18.xyz, r18.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
//  331  0x00002BFC:           mul r18.xyz, r18.xyzx, l(100.000099, 100.000099, 100.000099, 0.000000)
//  332  0x00002C24:           mul r19.xyz, r18.yzxy, r18.yzxy
//  333  0x00002C40:           mad r18.xyz, r19.xyzx, r19.xyzx, r18.xyzx
//  334  0x00002C64:           mad r18.xyz, r18.xyzx, l(3.000000, 3.000000, 3.000000, 0.000000), r14.xxxx
//  335  0x00002C94:           mul r18.xyz, r17.zzzz, r18.xyzx
//  336  0x00002CB0:           mul r11.w, r9.w, r11.w
//  337  0x00002CCC:           mul r11.w, r11.w, l(0.040000)
//  338  0x00002CE8:           mad r14.xy, r17.xyxx, r11.wwww, r13.xyxx
//  339  0x00002D0C:           sample_l_indexable(texture2d)(float,float,float,float) r17.xyz, r15.zwzz, t28.xywz, s2, l(0.000000)
//  340  0x00002D40:           add r15.z, r17.y, r17.x
//  341  0x00002D5C:           add r19.x, r15.z, l(-1.003922)
//  342  0x00002D78:           add r19.y, -r17.y, r17.x
//  343  0x00002D98:           add r15.z, -|r19.x|, l(1.000000)
//  344  0x00002DB8:           add r19.z, -|r19.y|, r15.z
//  345  0x00002DD8:           dp3 r15.z, r19.xyzx, r19.xyzx
//  346  0x00002DF4:           rsq r15.z, r15.z
//  347  0x00002E08:           mul r17.xyw, r15.zzzz, r19.xyxz
//  348  0x00002E24:           mul r19.xyz, r9.xyzx, r17.yyyy
//  349  0x00002E40:           mad r19.xyz, r17.xxxx, v6.xyzx, r19.xyzx
//  350  0x00002E64:           mad r19.xyz, r17.wwww, r3.xyzx, r19.xyzx
//  351  0x00002E88:           dp3 r15.z, r19.xyzx, r19.xyzx
//  352  0x00002EA4:           rsq r15.z, r15.z
//  353  0x00002EB8:           mul r19.xyz, r15.zzzz, r19.xyzx
//  354  0x00002ED4:           dp3 r15.z, r16.xyzx, r19.xyzx
//  355  0x00002EF0:           add r15.z, r15.z, r15.z
//  356  0x00002F0C:           mad r16.xyz, r19.xyzx, -r15.zzzz, r16.xyzx
//  357  0x00002F34:           mul r16.xyz, r16.xyzx, l(12.000000, 12.000000, 12.000000, 0.000000)
//  358  0x00002F5C:           sincos r16.xyz, null, r16.xyzx
//  359  0x00002F74:           max r19.xyz, -r16.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
//  360  0x00002FA0:           dp3 r15.z, r19.xyzx, l(0.212500, 0.715400, 0.072100, 0.000000)
//  361  0x00002FC8:           mul r15.z, r15.z, r15.z
//  362  0x00002FE4:           add_sat r19.xyz, -r16.xyzx, l(0.150000, 0.150000, 0.150000, 0.000000)
//  363  0x00003010:           dp3 r15.w, r19.xyzx, l(0.212500, 0.715400, 0.072100, 0.000000)
//  364  0x00003038:           mul r15.w, r15.w, l(0.250000)
//  365  0x00003054:           mad r15.z, r15.z, r15.z, r15.w
//  366  0x00003078:           add r16.xyz, r16.xyzx, l(-0.990000, -0.990000, -0.990000, 0.000000)
//  367  0x000030A0:           max r16.xyz, r16.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
//  368  0x000030C8:           mul r16.xyz, r16.xyzx, l(100.000099, 100.000099, 100.000099, 0.000000)
//  369  0x000030F0:           mul r19.xyz, r16.yzxy, r16.yzxy
//  370  0x0000310C:           mad r16.xyz, r19.xyzx, r19.xyzx, r16.xyzx
//  371  0x00003130:           mad r16.xyz, r16.xyzx, l(3.000000, 3.000000, 3.000000, 0.000000), r15.zzzz
//  372  0x00003160:           mul r16.xyz, r17.zzzz, r16.xyzx
//  373  0x0000317C:           max r16.xyz, r16.xyzx, r18.xyzx
//  374  0x00003198:           mov_sat r18.xyz, r10.xyzx
//  375  0x000031AC:           dp3 r15.z, r18.xyzx, l(0.212500, 0.715400, 0.072100, 0.000000)
//  376  0x000031D4:           max r15.w, r10.z, r10.y
//  377  0x000031F0:           max r15.w, r10.x, r15.w
//  378  0x0000320C:           log r15.w, r15.w
//  379  0x00003220:           mul r15.w, r15.w, cb0[9].y
//  380  0x00003240:           exp r15.w, r15.w
//  381  0x00003254:           min r15.w, r15.w, l(1.000000)
//  382  0x00003270:           add r16.w, -cb0[9].x, cb0[9].z
//  383  0x00003298:           mad r15.w, r15.w, r16.w, cb0[9].x
//  384  0x000032C0:           max r18.xyz, r10.xyzx, l(0.000300, 0.000300, 0.000300, 0.000000)
//  385  0x000032E8:           dp3 r16.w, r18.xyzx, r18.xyzx
//  386  0x00003304:           rsq r16.w, r16.w
//  387  0x00003318:           mul r18.xyz, r16.wwww, r18.xyzx
//  388  0x00003334:           mul r18.xyz, r18.xyzx, l(1.060000, 1.060000, 1.060000, 0.000000)
//  389  0x0000335C:           mul r19.xyz, r15.wwww, r18.xyzx
//  390  0x00003378:           mul r20.xyz, r18.xyzx, cb0[9].xxxx
//  391  0x00003398:           mul r20.xyz, r20.xyzx, l(1.732000, 1.732000, 1.732000, 0.000000)
//  392  0x000033C0:           dp3 r15.w, r18.xyzx, r18.xyzx
//  393  0x000033DC:           sqrt r15.w, r15.w
//  394  0x000033F0:           div r20.xyz, r20.xyzx, r15.wwww
//  395  0x0000340C:           dp3 r15.w, r18.xyzx, l(0.212500, 0.715400, 0.072100, 0.000000)
//  396  0x00003434:           div r18.xyz, r20.xyzx, r15.wwww
//  397  0x00003450:           max r18.xyz, r19.xyzx, r18.xyzx
//  398  0x0000346C:           add r15.w, cb0[9].x, l(-0.000300)
//  399  0x0000348C:           add r15.z, r15.z, l(-0.000300)
//  400  0x000034A8:           div r15.w, l(1.000000, 1.000000, 1.000000, 1.000000), r15.w
//  401  0x000034D0:           mul_sat r15.z, r15.w, r15.z
//  402  0x000034EC:           mad r15.w, r15.z, l(-2.000000), l(3.000000)
//  403  0x00003510:           mul r15.z, r15.z, r15.z
//  404  0x0000352C:           mul r15.z, r15.z, r15.w
//  405  0x00003548:           rsq r15.z, r15.z
//  406  0x0000355C:           div r15.z, l(1.000000, 1.000000, 1.000000, 1.000000), r15.z
//  407  0x00003584:           add r18.xyz, r18.xyzx, -cb0[9].xxxx
//  408  0x000035A8:           mad r18.xyz, r15.zzzz, r18.xyzx, cb0[9].xxxx
//  409  0x000035D0:           movc r18.xyz, cb0[18].xxxx, r18.xyzx, r10.xyzx
//  410  0x000035F8:           mul r18.xyz, r18.xyzx, cb0[18].wwww
//  411  0x00003618:           mul r16.xyz, r16.xyzx, r18.xyzx
//  412  0x00003634:           mul r15.zw, r11.wwww, r17.xxxy
//  413  0x00003650:           mad r13.xy, r15.zwzz, r17.zzzz, r14.xyxx
//  414  0x00003674:           mul r11.w, r9.w, l(0.500000)
//  415  0x00003690:           max r12.y, r11.w, r12.y
//  416  0x000036AC:           mul r16.xyz, r9.wwww, r16.xyzx
//  417  0x000036C8:         else 
//  418  0x000036CC:           mov r16.xyz, l(0,0,0,0)
//  419  0x000036EC:         endif 
//  420  0x000036F0:       else 
//  421  0x000036F4:         mov r16.xyz, l(0,0,0,0)
//  422  0x00003714:       endif 
//  423  0x00003718:       if_nz cb0[18].x
//  424  0x00003728:         add r17.xyz, cb0[17].xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
//  425  0x00003754:         mad r17.xyz, r12.yyyy, r17.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
//  426  0x00003784:         mul r9.w, r12.y, cb0[17].w
//  427  0x000037A4:         if_nz cb0[18].y
//  428  0x000037B4:           dp3 r11.w, r10.xyzx, l(0.212500, 0.715400, 0.072100, 0.000000)
//  429  0x000037DC:           add r18.xyz, -r10.xyzx, r11.wwww
//  430  0x000037FC:           mad r18.xyz, r9.wwww, r18.xyzx, r10.xyzx
//  431  0x00003820:           mul_sat r18.xyz, r17.xyzx, r18.xyzx
//  432  0x0000383C:           max r19.xyz, r18.xyzx, l(0.000300, 0.000300, 0.000300, 0.000000)
//  433  0x00003864:           dp3 r11.w, r19.xyzx, r19.xyzx
//  434  0x00003880:           rsq r11.w, r11.w
//  435  0x00003894:           mul r19.xyz, r11.wwww, r19.xyzx
//  436  0x000038B0:           mul r19.xyz, r19.xyzx, l(1.060000, 1.060000, 1.060000, 0.000000)
//  437  0x000038D8:           max r11.w, r18.z, r18.y
//  438  0x000038F4:           max r11.w, r11.w, r18.x
//  439  0x00003910:           mul r11.w, r11.w, cb0[18].z
//  440  0x00003930:           mul_sat r18.xyz, r18.xyzx, cb0[18].zzzz
//  441  0x00003950:           dp3 r14.x, r18.xyzx, l(0.212500, 0.715400, 0.072100, 0.000000)
//  442  0x00003978:           add r15.zw, r14.xxxx, l(0.000000, 0.000000, -0.550000, -0.000300)
//  443  0x000039A0:           mul_sat r14.y, r15.z, l(-1.871258)
//  444  0x000039BC:           mad r15.z, r14.y, l(-2.000000), l(3.000000)
//  445  0x000039E0:           mul r14.y, r14.y, r14.y
//  446  0x000039FC:           mul r14.y, r14.y, r15.z
//  447  0x00003A18:           add r18.xyz, cb0[10].xyzx, -cb0[11].xyzx
//  448  0x00003A40:           mad r18.xyz, r14.yyyy, r18.xyzx, cb0[11].xyzx
//  449  0x00003A68:           add r18.xyz, r18.xyzx, -cb0[9].xyzx
//  450  0x00003A8C:           mad r18.xyz, r12.yyyy, r18.xyzx, cb0[9].xyzx
//  451  0x00003AB4:           add r14.y, -cb0[9].x, cb0[10].x
//  452  0x00003ADC:           mad r14.y, r12.y, r14.y, cb0[9].x
//  453  0x00003B04:           log r11.w, r11.w
//  454  0x00003B18:           mul r11.w, r11.w, r18.y
//  455  0x00003B34:           exp r11.w, r11.w
//  456  0x00003B48:           min r11.w, r11.w, l(1.000000)
//  457  0x00003B64:           add r15.z, -r18.x, r18.z
//  458  0x00003B84:           mad r11.w, r11.w, r15.z, r18.x
//  459  0x00003BA8:           mul r18.xyw, r19.xyxz, r11.wwww
//  460  0x00003BC4:           mul r20.xyz, r14.yyyy, r19.xyzx
//  461  0x00003BE0:           mul r20.xyz, r20.xyzx, l(1.732000, 1.732000, 1.732000, 0.000000)
//  462  0x00003C08:           dp3 r11.w, r19.xyzx, r19.xyzx
//  463  0x00003C24:           sqrt r11.w, r11.w
//  464  0x00003C38:           div r20.xyz, r20.xyzx, r11.wwww
//  465  0x00003C54:           dp3 r11.w, r19.xyzx, l(0.212500, 0.715400, 0.072100, 0.000000)
//  466  0x00003C7C:           div r19.xyz, r20.xyzx, r11.wwww
//  467  0x00003C98:           max r18.xyw, r18.xyxw, r19.xyxz
//  468  0x00003CB4:           add r19.xyz, r14.xxxx, r18.xywx
//  469  0x00003CD0:           min r19.xyz, r18.zzzz, r19.xyzx
//  470  0x00003CEC:           add r11.w, cb0[18].z, l(-1.000000)
//  471  0x00003D0C:           max r11.w, r11.w, l(0.000000)
//  472  0x00003D28:           mul r11.w, r11.w, l(0.015873)
//  473  0x00003D44:           add r19.xyz, -r18.xywx, r19.xyzx
//  474  0x00003D64:           mad r18.xyz, r11.wwww, r19.xyzx, r18.xywx
//  475  0x00003D88:           add r11.w, r14.y, l(-0.000300)
//  476  0x00003DA4:           div r11.w, l(1.000000, 1.000000, 1.000000, 1.000000), r11.w
//  477  0x00003DCC:           mul_sat r11.w, r11.w, r15.w
//  478  0x00003DE8:           mad r14.x, r11.w, l(-2.000000), l(3.000000)
//  479  0x00003E0C:           mul r11.w, r11.w, r11.w
//  480  0x00003E28:           mul r11.w, r11.w, r14.x
//  481  0x00003E44:           rsq r11.w, r11.w
//  482  0x00003E58:           div r11.w, l(1.000000, 1.000000, 1.000000, 1.000000), r11.w
//  483  0x00003E80:           add r18.xyz, -r14.yyyy, r18.xyzx
//  484  0x00003EA0:           mad r18.xyz, r11.wwww, r18.xyzx, r14.yyyy
//  485  0x00003EC4:         else 
//  486  0x00003EC8:           mul r19.xyz, r10.xyzx, r17.xyzx
//  487  0x00003EE4:           mad r17.xyz, -r17.xyzx, r10.xyzx, r17.xyzx
//  488  0x00003F0C:           mad r17.xyz, r9.wwww, r17.xyzx, r19.xyzx
//  489  0x00003F30:           max r17.xyz, r17.xyzx, l(0.000300, 0.000300, 0.000300, 0.000000)
//  490  0x00003F58:           dp3 r9.w, r17.xyzx, r17.xyzx
//  491  0x00003F74:           rsq r9.w, r9.w
//  492  0x00003F88:           mul r17.xyz, r9.wwww, r17.xyzx
//  493  0x00003FA4:           mul r17.xyz, r17.xyzx, l(1.060000, 1.060000, 1.060000, 0.000000)
//  494  0x00003FCC:           max r9.w, r10.z, r10.y
//  495  0x00003FE8:           max r9.w, r9.w, r10.x
//  496  0x00004004:           mul r9.w, r9.w, cb0[18].z
//  497  0x00004024:           mul_sat r19.xyz, r10.xyzx, cb0[18].zzzz
//  498  0x00004044:           dp3 r11.w, r19.xyzx, l(0.212500, 0.715400, 0.072100, 0.000000)
//  499  0x0000406C:           add r14.xy, r11.wwww, l(-0.550000, -0.000300, 0.000000, 0.000000)
//  500  0x00004094:           mul_sat r14.x, r14.x, l(-1.871258)
//  501  0x000040B0:           mad r15.z, r14.x, l(-2.000000), l(3.000000)
//  502  0x000040D4:           mul r14.x, r14.x, r14.x
//  503  0x000040F0:           mul r14.x, r14.x, r15.z
//  504  0x0000410C:           add r19.xyz, cb0[10].xyzx, -cb0[11].xyzx
//  505  0x00004134:           mad r19.xyz, r14.xxxx, r19.xyzx, cb0[11].xyzx
//  506  0x0000415C:           add r19.xyz, r19.xyzx, -cb0[9].xyzx
//  507  0x00004180:           mad r19.xyz, r12.yyyy, r19.xyzx, cb0[9].xyzx
//  508  0x000041A8:           add r14.x, -cb0[9].x, cb0[10].x
//  509  0x000041D0:           mad r14.x, r12.y, r14.x, cb0[9].x
//  510  0x000041F8:           log r9.w, r9.w
//  511  0x0000420C:           mul r9.w, r9.w, r19.y
//  512  0x00004228:           exp r9.w, r9.w
//  513  0x0000423C:           min r9.w, r9.w, l(1.000000)
//  514  0x00004258:           add r15.z, -r19.x, r19.z
//  515  0x00004278:           mad r9.w, r9.w, r15.z, r19.x
//  516  0x0000429C:           mul r19.xyw, r17.xyxz, r9.wwww
//  517  0x000042B8:           mul r20.xyz, r14.xxxx, r17.xyzx
//  518  0x000042D4:           mul r20.xyz, r20.xyzx, l(1.732000, 1.732000, 1.732000, 0.000000)
//  519  0x000042FC:           dp3 r9.w, r17.xyzx, r17.xyzx
//  520  0x00004318:           sqrt r9.w, r9.w
//  521  0x0000432C:           div r20.xyz, r20.xyzx, r9.wwww
//  522  0x00004348:           dp3 r9.w, r17.xyzx, l(0.212500, 0.715400, 0.072100, 0.000000)
//  523  0x00004370:           div r17.xyz, r20.xyzx, r9.wwww
//  524  0x0000438C:           max r17.xyz, r19.xywx, r17.xyzx
//  525  0x000043A8:           add r19.xyw, r11.wwww, r17.xyxz
//  526  0x000043C4:           min r19.xyz, r19.xywx, r19.zzzz
//  527  0x000043E0:           add r9.w, cb0[18].z, l(-1.000000)
//  528  0x00004400:           max r9.w, r9.w, l(0.000000)
//  529  0x0000441C:           mul r9.w, r9.w, l(0.015873)
//  530  0x00004438:           add r19.xyz, -r17.xyzx, r19.xyzx
//  531  0x00004458:           mad r17.xyz, r9.wwww, r19.xyzx, r17.xyzx
//  532  0x0000447C:           add r9.w, r14.x, l(-0.000300)
//  533  0x00004498:           div r9.w, l(1.000000, 1.000000, 1.000000, 1.000000), r9.w
//  534  0x000044C0:           mul_sat r9.w, r9.w, r14.y
//  535  0x000044DC:           mad r11.w, r9.w, l(-2.000000), l(3.000000)
//  536  0x00004500:           mul r9.w, r9.w, r9.w
//  537  0x0000451C:           mul r9.w, r9.w, r11.w
//  538  0x00004538:           rsq r9.w, r9.w
//  539  0x0000454C:           div r9.w, l(1.000000, 1.000000, 1.000000, 1.000000), r9.w
//  540  0x00004574:           add r17.xyz, -r14.xxxx, r17.xyzx
//  541  0x00004594:           mad r18.xyz, r9.wwww, r17.xyzx, r14.xxxx
//  542  0x000045B8:         endif 
//  543  0x000045BC:       else 
//  544  0x000045C0:         dp3 r9.w, r10.xyzx, l(0.212500, 0.715400, 0.072100, 0.000000)
//  545  0x000045E8:         add r17.xyz, -r10.xyzx, r9.wwww
//  546  0x00004608:         mad r17.xyz, cb0[17].wwww, r17.xyzx, r10.xyzx
//  547  0x00004630:         mul r17.xyz, r17.xyzx, cb0[17].xyzx
//  548  0x00004650:         movc r9.w, cb0[18].y, cb0[18].z, l(1.000000)
//  549  0x0000467C:         mul r17.xyz, r9.wwww, r17.xyzx
//  550  0x00004698:         movc r18.xyz, cb0[19].xxxx, r17.xyzx, r10.xyzx
//  551  0x000046C0:       endif 
//  552  0x000046C4:       if_nz cb0[19].y
//  553  0x000046D4:         sample_b_indexable(texture2d)(float,float,float,float) r17.xyzw, r14.zwzz, t29.xyzw, s9, l(-1.000000)
//  554  0x00004708:         sample_b_indexable(texture2d)(float,float,float,float) r10.xyz, r14.zwzz, t29.xyzw, s0, l(-1.000000)
//  555  0x0000473C:         add r10.xyz, -r17.xyzx, r10.xyzx
//  556  0x0000475C:         mad r19.yzw, r17.wwww, r10.xxyz, r17.xxyz
//  557  0x00004780:         lt r9.w, l(0.000000), r19.y
//  558  0x0000479C:         if_nz r9.w
//  559  0x000047A8:           add r10.xyz, -r4.yzwy, cb1[19].xyzx
//  560  0x000047CC:           dp3 r9.w, r10.xyzx, r10.xyzx
//  561  0x000047E8:           rsq r9.w, r9.w
//  562  0x000047FC:           mul r10.xyz, r9.wwww, r10.xyzx
//  563  0x00004818:           dp3 r9.w, r10.xyzx, r3.xyzx
//  564  0x00004834:           ne r11.w, l(0.000000), cb4[36].y
//  565  0x00004854:           add r17.xyz, r4.yzwy, cb1[33].xyzx
//  566  0x00004874:           mad r20.xyz, -cb1[20].xyzx, cb4[36].yyyy, r17.xyzx
//  567  0x000048A4:           add r17.xyz, cb1[19].xyzx, cb1[33].xyzx
//  568  0x000048C8:           mad r17.xyz, cb1[22].wwww, cb1[20].xyzx, r17.xyzx
//  569  0x000048F4:           dp3 r21.w, r17.xyzx, cb1[20].xyzx
//  570  0x00004914:           mov r20.w, l(1.000000)
//  571  0x00004928:           mov r21.xyz, cb1[20].xyzx
//  572  0x00004940:           dp4 r14.x, r20.xyzw, r21.xyzw
//  573  0x0000495C:           ge r14.y, l(0.000000), r14.x
//  574  0x00004978:           mad r17.xyz, r14.xxxx, -cb1[20].xyzx, r4.yzwy
//  575  0x000049A4:           movc r17.xyz, r14.yyyy, r4.yzwy, r17.xyzx
//  576  0x000049C8:           mul r20.xyz, r17.yyyy, cb4[13].xywx
//  577  0x000049E8:           mad r20.xyz, cb4[12].xywx, r17.xxxx, r20.xyzx
//  578  0x00004A10:           mad r20.xyz, cb4[14].xywx, r17.zzzz, r20.xyzx
//  579  0x00004A38:           add r20.xyz, r20.xyzx, cb4[15].xywx
//  580  0x00004A58:           div r14.xy, r20.xyxx, r20.zzzz
//  581  0x00004A74:           add r14.x, r14.x, l(1.000000)
//  582  0x00004A90:           mul r14.x, r14.x, cb1[26].z
//  583  0x00004AB0:           mul r14.x, r14.x, l(0.500000)
//  584  0x00004ACC:           add r15.zw, l(0.000000, 0.000000, -1.000000, -1.000000), cb1[26].zzzw
//  585  0x00004AF8:           max r14.x, r14.x, l(0.000000)
//  586  0x00004B14:           min r20.x, r15.z, r14.x
//  587  0x00004B30:           add r14.x, -r14.y, l(1.000000)
//  588  0x00004B50:           mul r14.x, r14.x, cb1[26].w
//  589  0x00004B70:           mul r14.x, r14.x, l(0.500000)
//  590  0x00004B8C:           max r14.x, r14.x, l(0.000000)
//  591  0x00004BA8:           min r20.y, r15.w, r14.x
//  592  0x00004BC4:           movc r21.xyz, r11.wwww, r17.xyzx, r4.yzwy
//  593  0x00004BE8:           movc r17.xyz, r11.wwww, r20.xyzx, v8.xywx
//  594  0x00004C0C:           add r14.xy, r17.xyxx, -cb1[26].xyxx
//  595  0x00004C30:           ftou r14.xy, r14.xyxx
//  596  0x00004C44:           ushr r14.xy, r14.xyxx, cb3[25].xxxx
//  597  0x00004C64:           imad r11.w, r14.y, cb3[25].y, r14.x
//  598  0x00004C8C:           imad r11.w, r11.w, cb3[24].z, cb3[24].y
//  599  0x00004CB8:           mul r14.x, r17.z, cb3[26].x
//  600  0x00004CD8:           max r14.x, r14.x, l(0.000000)
//  601  0x00004CF4:           min r14.x, r14.x, cb3[26].y
//  602  0x00004D14:           ftou r14.x, r14.x
//  603  0x00004D28:           imad r14.x, r14.x, cb3[24].z, cb3[24].x
//  604  0x00004D54:           mov r21.w, l(1.000000)
//  605  0x00004D68:           mov r17.xyz, l(0,0,0,0)
//  606  0x00004D88:           mov r20.xyz, l(0,0,0,0)
//  607  0x00004DA8:           mov r22.xyz, l(0,0,0,0)
//  608  0x00004DC8:           mov r23.xyz, l(0,0,0,0)
//  609  0x00004DE8:           mov r24.xyz, l(0,0,0,0)
//  610  0x00004E08:           mov r25.xyz, l(0,0,0,0)
//  611  0x00004E28:           mov r14.y, l(0)
//  612  0x00004E3C:           mov r15.zw, l(0,0,0,0)
//  613  0x00004E5C:           loop 
//  614  0x00004E60:             ult r16.w, r15.w, cb3[24].z
//  615  0x00004E80:             not r18.w, r15.z
//  616  0x00004E94:             and r16.w, r16.w, r18.w
//  617  0x00004EB0:             breakc_z r16.w
//  618  0x00004EBC:             iadd r16.w, r11.w, r15.w
//  619  0x00004ED8:             ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r16.w, r16.w, l(0), t13.xxxx
//  620  0x00004F04:             iadd r18.w, r14.x, r15.w
//  621  0x00004F20:             ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r18.w, r18.w, l(0), t13.xxxx
//  622  0x00004F4C:             and r16.w, r16.w, r18.w
//  623  0x00004F68:             ishl r18.w, r15.w, l(5)
//  624  0x00004F84:             mov r26.xyz, r17.xyzx
//  625  0x00004F98:             mov r27.xyz, r20.xyzx
//  626  0x00004FAC:             mov r28.xyz, r22.xyzx
//  627  0x00004FC0:             mov r29.xyz, r23.xyzx
//  628  0x00004FD4:             mov r30.xyz, r24.xyzx
//  629  0x00004FE8:             mov r31.xyz, r25.xyzx
//  630  0x00004FFC:             mov r20.w, r14.y
//  631  0x00005010:             mov r22.w, r15.z
//  632  0x00005024:             mov r23.w, r16.w
//  633  0x00005038:             loop 
//  634  0x0000503C:               breakc_z r23.w
//  635  0x00005048:               firstbit_lo r24.w, r23.w
//  636  0x0000505C:               iadd r24.w, r18.w, r24.w
//  637  0x00005078:               iadd r25.w, r23.w, l(-1)
//  638  0x00005094:               and r25.w, r23.w, r25.w
//  639  0x000050B0:               imul null, r24.w, r24.w, l(6)
//  640  0x000050D0:               dp4 r32.x, r21.xyzw, cb3[r24.w + 1180].xyzw
//  641  0x000050F8:               dp4 r32.y, r21.xyzw, cb3[r24.w + 1181].xyzw
//  642  0x00005120:               dp4 r32.z, r21.xyzw, cb3[r24.w + 1182].xyzw
//  643  0x00005148:               add r33.xyz, r32.xyzx, -cb3[r24.w + 1183].xyzx
//  644  0x00005174:               mul_sat r33.xyz, r33.xyzx, cb3[r24.w + 1185].xyzx
//  645  0x0000519C:               add r32.xyz, -r32.xyzx, cb3[r24.w + 1184].xyzx
//  646  0x000051C8:               mul_sat r32.xyz, r32.xyzx, cb3[r24.w + 1185].xyzx
//  647  0x000051F0:               min r26.w, r33.z, r33.y
//  648  0x0000520C:               min r26.w, r26.w, r33.x
//  649  0x00005228:               min r27.w, r32.z, r32.y
//  650  0x00005244:               min r27.w, r27.w, r32.x
//  651  0x00005260:               min r26.w, r26.w, r27.w
//  652  0x0000527C:               eq r27.w, r26.w, l(0.000000)
//  653  0x00005298:               if_nz r27.w
//  654  0x000052A4:                 mov r23.w, r25.w
//  655  0x000052B8:                 continue 
//  656  0x000052BC:               endif 
//  657  0x000052C0:               mul r27.w, r26.w, r26.w
//  658  0x000052DC:               mad r26.w, r26.w, l(-2.000000), l(3.000000)
//  659  0x00005300:               mul r26.w, r26.w, r27.w
//  660  0x0000531C:               add r27.w, -r20.w, l(1.000000)
//  661  0x0000533C:               mul r28.w, r26.w, r27.w
//  662  0x00005358:               mad r26.w, r26.w, r27.w, r20.w
//  663  0x0000537C:               imul null, r24.w, l(9), cb3[r24.w + 1185].w
//  664  0x000053A8:               dp4 r32.x, r21.xyzw, cb2[r24.w + 0].xyzw
//  665  0x000053CC:               dp4 r32.y, r21.xyzw, cb2[r24.w + 1].xyzw
//  666  0x000053F4:               dp4 r27.w, r21.xyzw, cb2[r24.w + 2].xyzw
//  667  0x0000541C:               mul r32.z, r27.w, l(0.166667)
//  668  0x00005438:               max r32.xyz, r32.xyzx, cb2[r24.w + 3].xyzx
//  669  0x00005460:               min r32.xyz, r32.xyzx, cb2[r24.w + 4].xyzx
//  670  0x00005488:               mul r32.w, r32.z, l(6.000000)
//  671  0x000054A4:               mad r32.xyz, r32.xywx, cb2[r24.w + 6].xyzx, cb2[r24.w + 7].xyzx
//  672  0x000054E0:               mul r32.w, r32.z, l(0.166667)
//  673  0x000054FC:               sample_l_indexable(texture3d)(float,float,float,float) r33.xyz, r32.xywx, t16.xyzw, s1, l(0.000000)
//  674  0x00005530:               mul r33.xyz, r33.xyzx, cb2[r24.w + 5].xyzx
//  675  0x00005558:               add r34.xyz, r32.xywx, l(0.000000, 0.000000, 0.166667, 0.000000)
//  676  0x00005580:               sample_l_indexable(texture3d)(float,float,float,float) r34.xyz, r34.xyzx, t16.xyzw, s1, l(0.000000)
//  677  0x000055B4:               mul r34.xyz, r34.xyzx, cb2[r24.w + 5].xyzx
//  678  0x000055DC:               add r35.xyz, r32.xywx, l(0.000000, 0.000000, 0.333333, 0.000000)
//  679  0x00005604:               sample_l_indexable(texture3d)(float,float,float,float) r35.xyz, r35.xyzx, t16.xyzw, s1, l(0.000000)
//  680  0x00005638:               mul r35.xyz, r35.xyzx, cb2[r24.w + 5].xyzx
//  681  0x00005660:               add r36.xyz, r32.xywx, l(0.000000, 0.000000, 0.500000, 0.000000)
//  682  0x00005688:               sample_l_indexable(texture3d)(float,float,float,float) r36.xyz, r36.xyzx, t16.xyzw, s1, l(0.000000)
//  683  0x000056BC:               mul r36.xyz, r36.xyzx, cb2[r24.w + 5].xyzx
//  684  0x000056E4:               add r37.xyz, r32.xywx, l(0.000000, 0.000000, 0.666667, 0.000000)
//  685  0x0000570C:               sample_l_indexable(texture3d)(float,float,float,float) r37.xyz, r37.xyzx, t16.xyzw, s1, l(0.000000)
//  686  0x00005740:               mul r37.xyz, r37.xyzx, cb2[r24.w + 5].xyzx
//  687  0x00005768:               add r32.xyz, r32.xywx, l(0.000000, 0.000000, 0.833333, 0.000000)
//  688  0x00005790:               sample_l_indexable(texture3d)(float,float,float,float) r32.xyz, r32.xyzx, t16.xyzw, s1, l(0.000000)
//  689  0x000057C4:               mul r32.xyz, r32.xyzx, cb2[r24.w + 5].xyzx
//  690  0x000057EC:               mad r33.xyz, r28.wwww, r33.xyzx, r26.xyzx
//  691  0x00005810:               mad r34.xyz, r28.wwww, r34.xyzx, r27.xyzx
//  692  0x00005834:               mad r35.xyz, r28.wwww, r35.xyzx, r28.xyzx
//  693  0x00005858:               mad r36.xyz, r28.wwww, r36.xyzx, r29.xyzx
//  694  0x0000587C:               mad r37.xyz, r28.wwww, r37.xyzx, r30.xyzx
//  695  0x000058A0:               mad r32.xyz, r28.wwww, r32.xyzx, r31.xyzx
//  696  0x000058C4:               lt r24.w, l(0.990000), r26.w
//  697  0x000058E0:               if_nz r24.w
//  698  0x000058EC:                 mov r26.xyz, r33.xyzx
//  699  0x00005900:                 mov r27.xyz, r34.xyzx
//  700  0x00005914:                 mov r28.xyz, r35.xyzx
//  701  0x00005928:                 mov r29.xyz, r36.xyzx
//  702  0x0000593C:                 mov r30.xyz, r37.xyzx
//  703  0x00005950:                 mov r31.xyz, r32.xyzx
//  704  0x00005964:                 mov r20.w, r26.w
//  705  0x00005978:                 mov r22.w, l(-1)
//  706  0x0000598C:                 break 
//  707  0x00005990:               endif 
//  708  0x00005994:               mov r26.xyz, r33.xyzx
//  709  0x000059A8:               mov r27.xyz, r34.xyzx
//  710  0x000059BC:               mov r28.xyz, r35.xyzx
//  711  0x000059D0:               mov r29.xyz, r36.xyzx
//  712  0x000059E4:               mov r30.xyz, r37.xyzx
//  713  0x000059F8:               mov r31.xyz, r32.xyzx
//  714  0x00005A0C:               mov r20.w, r26.w
//  715  0x00005A20:               mov r23.w, r25.w
//  716  0x00005A34:             endloop 
//  717  0x00005A38:             mov r17.xyz, r26.xyzx
//  718  0x00005A4C:             mov r20.xyz, r27.xyzx
//  719  0x00005A60:             mov r22.xyz, r28.xyzx
//  720  0x00005A74:             mov r23.xyz, r29.xyzx
//  721  0x00005A88:             mov r24.xyz, r30.xyzx
//  722  0x00005A9C:             mov r25.xyz, r31.xyzx
//  723  0x00005AB0:             mov r14.y, r20.w
//  724  0x00005AC4:             mov r15.z, r22.w
//  725  0x00005AD8:             iadd r15.w, r15.w, l(1)
//  726  0x00005AF4:           endloop 
//  727  0x00005AF8:           lt r11.w, r14.y, l(0.990000)
//  728  0x00005B14:           if_nz r11.w
//  729  0x00005B20:             add r11.w, -r14.y, l(1.000000)
//  730  0x00005B40:             dp2 r21.x, cb3[7].xwxx, l(1.000000, 1.000000, 0.000000, 0.000000)
//  731  0x00005B6C:             dp2 r21.y, cb3[8].xwxx, l(1.000000, 1.000000, 0.000000, 0.000000)
//  732  0x00005B98:             dp2 r21.z, cb3[9].xwxx, l(1.000000, 1.000000, 0.000000, 0.000000)
//  733  0x00005BC4:             mad r17.xyz, r11.wwww, r21.xyzx, r17.xyzx
//  734  0x00005BE8:             dp2 r21.x, cb3[7].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
//  735  0x00005C14:             dp2 r21.y, cb3[8].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
//  736  0x00005C40:             dp2 r21.z, cb3[9].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
//  737  0x00005C6C:             mad r20.xyz, r11.wwww, r21.xyzx, r20.xyzx
//  738  0x00005C90:             dp2 r21.x, cb3[7].zwzz, l(1.000000, 1.000000, 0.000000, 0.000000)
//  739  0x00005CBC:             dp2 r21.y, cb3[8].zwzz, l(1.000000, 1.000000, 0.000000, 0.000000)
//  740  0x00005CE8:             dp2 r21.z, cb3[9].zwzz, l(1.000000, 1.000000, 0.000000, 0.000000)
//  741  0x00005D14:             mad r22.xyz, r11.wwww, r21.xyzx, r22.xyzx
//  742  0x00005D38:             dp2 r21.x, cb3[7].xwxx, l(-1.000000, 1.000000, 0.000000, 0.000000)
//  743  0x00005D64:             dp2 r21.y, cb3[8].xwxx, l(-1.000000, 1.000000, 0.000000, 0.000000)
//  744  0x00005D90:             dp2 r21.z, cb3[9].xwxx, l(-1.000000, 1.000000, 0.000000, 0.000000)
//  745  0x00005DBC:             mad r23.xyz, r11.wwww, r21.xyzx, r23.xyzx
//  746  0x00005DE0:             dp2 r21.x, cb3[7].ywyy, l(-1.000000, 1.000000, 0.000000, 0.000000)
//  747  0x00005E0C:             dp2 r21.y, cb3[8].ywyy, l(-1.000000, 1.000000, 0.000000, 0.000000)
//  748  0x00005E38:             dp2 r21.z, cb3[9].ywyy, l(-1.000000, 1.000000, 0.000000, 0.000000)
//  749  0x00005E64:             mad r24.xyz, r11.wwww, r21.xyzx, r24.xyzx
//  750  0x00005E88:             dp2 r21.x, cb3[7].zwzz, l(-1.000000, 1.000000, 0.000000, 0.000000)
//  751  0x00005EB4:             dp2 r21.y, cb3[8].zwzz, l(-1.000000, 1.000000, 0.000000, 0.000000)
//  752  0x00005EE0:             dp2 r21.z, cb3[9].zwzz, l(-1.000000, 1.000000, 0.000000, 0.000000)
//  753  0x00005F0C:             mad r25.xyz, r11.wwww, r21.xyzx, r25.xyzx
//  754  0x00005F30:           endif 
//  755  0x00005F34:           mul r21.xyz, r9.xyzx, r13.yyyy
//  756  0x00005F50:           mad r21.xyz, r13.xxxx, v6.xyzx, r21.xyzx
//  757  0x00005F74:           mad r21.xyz, r13.zzzz, r3.xyzx, r21.xyzx
//  758  0x00005F98:           dp3 r11.w, r21.xyzx, r21.xyzx
//  759  0x00005FB4:           rsq r11.w, r11.w
//  760  0x00005FC8:           mul r14.xy, r11.wwww, r21.xyxx
//  761  0x00005FE4:           dp3 r11.w, r17.xyzx, l(0.212500, 0.715400, 0.072100, 0.000000)
//  762  0x0000600C:           max r15.zw, r14.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
//  763  0x00006034:           dp3 r16.w, r23.xyzx, l(0.212500, 0.715400, 0.072100, 0.000000)
//  764  0x0000605C:           max r14.xy, -r14.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
//  765  0x00006088:           mul r16.w, r14.x, r16.w
//  766  0x000060A4:           mad r17.x, r11.w, r15.z, -r16.w
//  767  0x000060CC:           dp3 r11.w, r20.xyzx, l(0.212500, 0.715400, 0.072100, 0.000000)
//  768  0x000060F4:           dp3 r15.z, r24.xyzx, l(0.212500, 0.715400, 0.072100, 0.000000)
//  769  0x0000611C:           mul r14.y, r14.y, r15.z
//  770  0x00006138:           mad r17.y, r11.w, r15.w, -r14.y
//  771  0x00006160:           dp3 r11.w, r22.xyzx, l(0.212500, 0.715400, 0.072100, 0.000000)
//  772  0x00006188:           dp3 r14.y, r25.xyzx, l(0.212500, 0.715400, 0.072100, 0.000000)
//  773  0x000061B0:           mul r14.x, r14.x, r14.y
//  774  0x000061CC:           mad r17.z, r11.w, r15.w, -r14.x
//  775  0x000061F4:           mad r17.xyz, r10.xyzx, l(0.001000, 0.001000, 0.001000, 0.000000), r17.xyzx
//  776  0x00006224:           dp3 r11.w, cb3[20].xyzx, l(0.212500, 0.715400, 0.072100, 0.000000)
//  777  0x00006250:           mad r17.xyz, cb3[19].xyzx, r11.wwww, r17.xyzx
//  778  0x00006278:           dp3 r11.w, r17.xyzx, r17.xyzx
//  779  0x00006294:           rsq r11.w, r11.w
//  780  0x000062A8:           mul r17.xyz, r11.wwww, r17.xyzx
//  781  0x000062C4:           dp3 r10.x, r10.xyzx, r17.xyzx
//  782  0x000062E0:           add r9.w, r9.w, r10.x
//  783  0x000062FC:           add r19.x, r9.w, r19.z
//  784  0x00006318:           sample_l_indexable(texture2d)(float,float,float,float) r10.xyz, r19.xwxx, t26.xyzw, s9, l(0.000000)
//  785  0x0000634C:           if_nz cb0[20].y
//  786  0x0000635C:             sample_b_indexable(texture2d)(float,float,float,float) r17.xyz, r19.xwxx, t26.xyzw, s10, l(-1.000000)
//  787  0x00006390:           else 
//  788  0x00006394:             sample_b_indexable(texture2d)(float,float,float,float) r17.xyz, r19.xwxx, t26.xyzw, s0, l(-1.000000)
//  789  0x000063C8:           endif 
//  790  0x000063CC:           add r17.xyz, -r10.xyzx, r17.xyzx
//  791  0x000063EC:           mad r10.xyz, r17.wwww, r17.xyzx, r10.xyzx
//  792  0x00006410:           mul_sat r17.xyz, r10.xyzx, cb0[18].wwww
//  793  0x00006430:           dp3 r9.w, r17.xyzx, l(0.212500, 0.715400, 0.072100, 0.000000)
//  794  0x00006458:           max r11.w, r10.z, r10.y
//  795  0x00006474:           max r11.w, r10.x, r11.w
//  796  0x00006490:           mul r11.w, r11.w, cb0[18].w
//  797  0x000064B0:           log r11.w, r11.w
//  798  0x000064C4:           mul r11.w, r11.w, cb0[12].y
//  799  0x000064E4:           exp r11.w, r11.w
//  800  0x000064F8:           min r11.w, r11.w, l(1.000000)
//  801  0x00006514:           add r14.x, -cb0[12].x, cb0[12].z
//  802  0x0000653C:           mad r11.w, r11.w, r14.x, cb0[12].x
//  803  0x00006564:           max r10.xyz, r10.xyzx, l(0.000300, 0.000300, 0.000300, 0.000000)
//  804  0x0000658C:           dp3 r14.x, r10.xyzx, r10.xyzx
//  805  0x000065A8:           rsq r14.x, r14.x
//  806  0x000065BC:           mul r10.xyz, r10.xyzx, r14.xxxx
//  807  0x000065D8:           mul r10.xyz, r10.xyzx, l(1.060000, 1.060000, 1.060000, 0.000000)
//  808  0x00006600:           mul r17.xyz, r10.xyzx, r11.wwww
//  809  0x0000661C:           mul r19.xzw, r10.xxyz, cb0[12].xxxx
//  810  0x0000663C:           mul r19.xzw, r19.xxzw, l(1.732000, 0.000000, 1.732000, 1.732000)
//  811  0x00006664:           dp3 r11.w, r10.xyzx, r10.xyzx
//  812  0x00006680:           sqrt r11.w, r11.w
//  813  0x00006694:           div r19.xzw, r19.xxzw, r11.wwww
//  814  0x000066B0:           dp3 r10.x, r10.xyzx, l(0.212500, 0.715400, 0.072100, 0.000000)
//  815  0x000066D8:           div r10.xyz, r19.xzwx, r10.xxxx
//  816  0x000066F4:           max r10.xyz, r17.xyzx, r10.xyzx
//  817  0x00006710:           mad r17.xyz, r9.wwww, cb0[18].wwww, r10.xyzx
//  818  0x00006738:           min r17.xyz, r17.xyzx, cb0[12].zzzz
//  819  0x00006758:           add r11.w, cb0[18].w, l(-1.000000)
//  820  0x00006778:           max r11.w, r11.w, l(0.000000)
//  821  0x00006794:           div r11.w, r11.w, cb0[11].w
//  822  0x000067B4:           add r17.xyz, -r10.xyzx, r17.xyzx
//  823  0x000067D4:           mad r10.xyz, r11.wwww, r17.xyzx, r10.xyzx
//  824  0x000067F8:           add r11.w, cb0[12].x, l(-0.000300)
//  825  0x00006818:           add r9.w, r9.w, l(-0.000300)
//  826  0x00006834:           div r11.w, l(1.000000, 1.000000, 1.000000, 1.000000), r11.w
//  827  0x0000685C:           mul_sat r9.w, r9.w, r11.w
//  828  0x00006878:           mad r11.w, r9.w, l(-2.000000), l(3.000000)
//  829  0x0000689C:           mul r9.w, r9.w, r9.w
//  830  0x000068B8:           mul r9.w, r9.w, r11.w
//  831  0x000068D4:           rsq r9.w, r9.w
//  832  0x000068E8:           div r9.w, l(1.000000, 1.000000, 1.000000, 1.000000), r9.w
//  833  0x00006910:           add r10.xyz, r10.xyzx, -cb0[12].xxxx
//  834  0x00006934:           mad r10.xyz, r9.wwww, r10.xyzx, cb0[12].xxxx
//  835  0x0000695C:           add r10.xyz, -r18.xyzx, r10.xyzx
//  836  0x0000697C:           mad r10.xyz, r19.yyyy, r10.xyzx, r18.xyzx
//  837  0x000069A0:           add r9.w, -r19.y, l(1.000000)
//  838  0x000069C0:           mul r12.y, r9.w, r12.y
//  839  0x000069DC:         else 
//  840  0x000069E0:           mov r10.xyz, r18.xyzx
//  841  0x000069F4:         endif 
//  842  0x000069F8:       else 
//  843  0x000069FC:         mov r10.xyz, r18.xyzx
//  844  0x00006A10:       endif 
//  845  0x00006A14:       lt r9.w, l(0.000000), cb0[15].w
//  846  0x00006A34:       if_nz r9.w
//  847  0x00006A40:         add r9.w, r10.w, l(-0.078431)
//  848  0x00006A5C:         mul_sat r9.w, r9.w, l(1.085106)
//  849  0x00006A78:         sample_b_indexable(texture2d)(float,float,float,float) r10.w, r14.zwzz, t23.yzwx, s0, l(-1.000000)
//  850  0x00006AAC:         min r10.w, r10.w, cb0[16].z
//  851  0x00006ACC:         add r10.w, -r10.w, l(1.000000)
//  852  0x00006AEC:         mul r11.w, r10.w, cb0[15].w
//  853  0x00006B0C:         mad r10.w, r11.w, l(-0.500000), r10.w
//  854  0x00006B30:         add r11.w, r6.z, l(-0.500000)
//  855  0x00006B4C:         add r11.w, r11.w, r11.w
//  856  0x00006B68:         add r14.x, cb0[15].w, l(-1.000000)
//  857  0x00006B88:         mul_sat r14.x, r14.x, l(-6.666668)
//  858  0x00006BA4:         mad r14.y, r14.x, l(-2.000000), l(3.000000)
//  859  0x00006BC8:         mul r14.x, r14.x, r14.x
//  860  0x00006BE4:         mul r14.x, r14.x, r14.y
//  861  0x00006C00:         mul r11.w, r11.w, r14.x
//  862  0x00006C1C:         mad_sat r11.w, cb0[15].w, r11.w, cb0[15].w
//  863  0x00006C48:         lt r14.x, l(0.000000), cb0[16].y
//  864  0x00006C68:         movc r14.x, r14.x, l(0.500000), l(0.250000)
//  865  0x00006C8C:         mad r14.x, cb0[16].y, r14.x, l(0.500000)
//  866  0x00006CB4:         mul r14.x, r14.x, l(0.500000)
//  867  0x00006CD0:         movc r14.x, cb0[19].z, l(0.500000), r14.x
//  868  0x00006CF8:         mul r14.y, cb0[16].x, cb0[16].x
//  869  0x00006D1C:         log r9.w, r9.w
//  870  0x00006D30:         mul r9.w, r9.w, r14.y
//  871  0x00006D4C:         exp r9.w, r9.w
//  872  0x00006D60:         add r9.w, -r9.w, r11.w
//  873  0x00006D80:         max r9.w, r9.w, l(0.000000)
//  874  0x00006D9C:         add r14.y, r9.w, r9.w
//  875  0x00006DB8:         min r14.y, r14.y, l(1.000000)
//  876  0x00006DD4:         mad r14.y, cb0[16].y, r11.w, r14.y
//  877  0x00006DFC:         add r14.y, r10.w, -r14.y
//  878  0x00006E1C:         mul_sat r14.y, r14.y, l(10.000000)
//  879  0x00006E38:         mad r15.z, r14.y, l(-2.000000), l(3.000000)
//  880  0x00006E5C:         mul r14.y, r14.y, r14.y
//  881  0x00006E78:         mul r14.y, r14.y, r15.z
//  882  0x00006E94:         mad r15.z, r10.w, l(0.400000), l(-0.500000)
//  883  0x00006EB8:         mad r15.z, r11.w, r15.z, l(0.700000)
//  884  0x00006EDC:         add r17.xyz, r10.xyzx, -r15.zzzz
//  885  0x00006EFC:         mad r17.xyz, r14.yyyy, r17.xyzx, r15.zzzz
//  886  0x00006F20:         movc r17.xyz, cb0[19].zzzz, r17.xyzx, r10.xyzx
//  887  0x00006F48:         add r14.y, r14.x, l(1.000000)
//  888  0x00006F64:         mad_sat r9.w, r9.w, r14.y, -r14.x
//  889  0x00006F8C:         add r9.w, -r9.w, r10.w
//  890  0x00006FAC:         mul_sat r9.w, r9.w, l(10.000000)
//  891  0x00006FC8:         mad r14.x, r9.w, l(-2.000000), l(3.000000)
//  892  0x00006FEC:         mul r9.w, r9.w, r9.w
//  893  0x00007008:         mul r9.w, r9.w, r14.x
//  894  0x00007024:         mul r15.x, r9.w, r15.x
//  895  0x00007040:         mul r14.xy, r11.wwww, l(0.300000, 2.857143, 0.000000, 0.000000)
//  896  0x00007068:         mad r19.xyz, r17.xyzx, r10.wwww, -r17.xyzx
//  897  0x00007090:         mad r10.xyz, r14.xxxx, r19.xyzx, r17.xyzx
//  898  0x000070B4:         or r9.w, cb0[19].w, cb0[19].x
//  899  0x000070D8:         min r14.x, r14.y, l(1.000000)
//  900  0x000070F4:         mad r14.y, r14.x, l(-2.000000), l(3.000000)
//  901  0x00007118:         mul r14.x, r14.x, r14.x
//  902  0x00007134:         mul r14.x, r14.x, r14.y
//  903  0x00007150:         ge r10.w, r14.x, r10.w
//  904  0x0000716C:         and r10.w, r10.w, l(0x3f800000)
//  905  0x00007188:         add r14.x, -r12.x, l(0.800000)
//  906  0x000071A8:         mad r10.w, r10.w, r14.x, r12.x
//  907  0x000071CC:         movc r12.x, r9.w, r12.x, r10.w
//  908  0x000071F0:       else 
//  909  0x000071F4:         mov r11.w, cb0[15].w
//  910  0x0000720C:       endif 
//  911  0x00007210:       add r14.xy, r14.zwzz, l(-0.500000, -0.500000, 0.000000, 0.000000)
//  912  0x00007238:       add r15.zw, r13.xxxy, -r14.xxxy
//  913  0x00007258:       mad r13.xy, r15.xxxx, r15.zwzz, r14.xyxx
//  914  0x0000727C:       if_nz r7.w
//  915  0x00007288:         mul_sat r7.w, r6.w, l(2.222222)
//  916  0x000072A4:         rsq r9.w, r7.w
//  917  0x000072B8:         div r9.w, l(1.000000, 1.000000, 1.000000, 1.000000), r9.w
//  918  0x000072E0:         add r10.w, -r14.w, r9.w
//  919  0x00007300:         lt r14.x, r9.w, r14.w
//  920  0x0000731C:         if_nz r14.x
//  921  0x00007328:           log r14.x, |r10.w|
//  922  0x00007340:           mul r14.x, r14.x, l(0.200000)
//  923  0x0000735C:           exp r14.x, r14.x
//  924  0x00007370:           add r14.x, -r14.x, l(1.000000)
//  925  0x00007390:           mul r15.x, r14.x, r15.x
//  926  0x000073AC:           mov r10.xyz, l(0,0,0,0)
//  927  0x000073CC:         else 
//  928  0x000073D0:           mul_sat r6.w, r6.w, l(1.111111)
//  929  0x000073EC:           add r9.w, r9.w, r10.w
//  930  0x00007408:           mad r9.w, |r10.w|, l(0.300000), r9.w
//  931  0x00007430:           log r14.x, r14.w
//  932  0x00007444:           mul r14.x, r14.x, l(0.200000)
//  933  0x00007460:           exp r14.x, r14.x
//  934  0x00007474:           add r9.w, r9.w, l(-1.000000)
//  935  0x00007490:           mad r14.y, r14.x, r9.w, l(1.000000)
//  936  0x000074B4:           lt r9.w, r14.y, l(1.000000)
//  937  0x000074D0:           if_nz r9.w
//  938  0x000074DC:             mov r14.x, r14.z
//  939  0x000074F0:             mov_sat r14.xy, r14.xyxx
//  940  0x00007504:             sample_b_indexable(texture2d)(float,float,float,float) r17.xyzw, r14.xyxx, t25.xyzw, s0, l(-1.000000)
//  941  0x00007538:             dp3 r9.w, r17.xyzx, l(0.299000, 0.587000, 0.114000, 0.000000)
//  942  0x00007560:             add r14.x, -r9.w, l(0.300000)
//  943  0x00007580:             mad r9.w, r14.x, l(0.800000), r9.w
//  944  0x000075A4:             log r10.w, |r10.w|
//  945  0x000075BC:             mul r14.xy, r10.wwww, l(0.200000, 0.100000, 0.000000, 0.000000)
//  946  0x000075E4:             exp r14.xy, r14.xyxx
//  947  0x000075F8:             mul_sat r10.w, r17.w, l(12.750000)
//  948  0x00007614:             add r15.z, -r14.y, l(1.000000)
//  949  0x00007634:             mad r7.w, r7.w, r15.z, r14.y
//  950  0x00007658:             mul r17.xyz, r7.wwww, r10.xyzx
//  951  0x00007674:             mad r19.xyz, r9.wwww, r14.xxxx, -r17.xyzx
//  952  0x0000769C:             mad r10.xyz, r10.wwww, r19.xyzx, r17.xyzx
//  953  0x000076C0:             max r15.x, r10.w, r15.x
//  954  0x000076DC:             add r17.xyz, -r13.xyzx, l(0.000000, 0.000000, 1.000000, 0.000000)
//  955  0x00007708:             mad r13.xyz, r10.wwww, r17.xyzx, r13.xyzx
//  956  0x0000772C:             mad r12.y, r10.w, -r12.y, r12.y
//  957  0x00007754:             add r9.w, -r12.x, l(0.800000)
//  958  0x00007774:             mad r12.x, r10.w, r9.w, r12.x
//  959  0x00007798:             add r9.w, -r15.y, l(1.000000)
//  960  0x000077B8:             mad r15.y, r10.w, r9.w, r15.y
//  961  0x000077DC:             add r7.w, -r8.w, r7.w
//  962  0x000077FC:             mad r8.w, r10.w, r7.w, r8.w
//  963  0x00007820:           else 
//  964  0x00007824:             mov r13.w, r13.z
//  965  0x00007838:             mov r13.xyz, r13.xywx
//  966  0x0000784C:           endif 
//  967  0x00007850:           ge r7.w, r6.w, l(0.500000)
//  968  0x0000786C:           and r7.w, r7.w, l(0x3f800000)
//  969  0x00007888:           add r6.w, r6.w, l(-1.000000)
//  970  0x000078A4:           mul r6.w, r6.w, l(-2.000000)
//  971  0x000078C0:           min r6.w, r6.w, l(1.000000)
//  972  0x000078DC:           mad r9.w, r6.w, l(-2.000000), l(3.000000)
//  973  0x00007900:           mul r6.w, r6.w, r6.w
//  974  0x0000791C:           mul r6.w, r6.w, r9.w
//  975  0x00007938:           log r6.w, r6.w
//  976  0x0000794C:           mul r6.w, r6.w, l(20.000000)
//  977  0x00007968:           exp r6.w, r6.w
//  978  0x0000797C:           mul r6.w, r6.w, r7.w
//  979  0x00007998:           mul r17.xyz, r6.wwww, r10.xyzx
//  980  0x000079B4:           mad r10.xyz, r17.xyzx, l(9.000000, 9.000000, 9.000000, 0.000000), r10.xyzx
//  981  0x000079E4:         endif 
//  982  0x000079E8:       endif 
//  983  0x000079EC:       if_z r5.w
//  984  0x000079F8:         mul r17.xyz, r12.wwww, r18.xyzx
//  985  0x00007A14:         add r17.xyz, r17.xyzx, r17.xyzx
//  986  0x00007A30:         movc r17.xyz, cb0[20].wwww, r17.xyzx, l(0,0,0,0)
//  987  0x00007A64:         add r5.w, -cb0[21].x, cb4[39].z
//  988  0x00007A8C:         lt r6.w, r5.w, l(2.000000)
//  989  0x00007AA8:         mad r5.w, -r5.w, l(0.500000), l(1.000000)
//  990  0x00007AD0:         mul r7.w, r5.w, r5.w
//  991  0x00007AEC:         mul r7.w, r7.w, r7.w
//  992  0x00007B08:         mad r18.xyz, r5.wwww, r7.wwww, r10.xyzx
//  993  0x00007B2C:         movc r10.xyz, r6.wwww, r18.xyzx, r10.xyzx
//  994  0x00007B50:         mul r12.z, r15.x, r15.y
//  995  0x00007B6C:         add r15.yzw, r10.xxyz, r10.xxyz
//  996  0x00007B88:         movc r15.yzw, cb0[13].zzzz, r15.yyzw, r10.xxyz
//  997  0x00007BB0:         mul r14.xy, r14.zwzz, l(8.000000, 8.000000, 0.000000, 0.000000)
//  998  0x00007BD8:         round_ni r14.xy, r14.xyxx
//  999  0x00007BEC:         add r5.w, r14.y, r14.x
// 1000  0x00007C08:         mul r5.w, r5.w, l(0.500000)
// 1001  0x00007C24:         frc r5.w, r5.w
// 1002  0x00007C38:         dp3 r6.w, r15.yzwy, l(0.212500, 0.715400, 0.072100, 0.000000)
// 1003  0x00007C60:         mul_sat r6.w, r6.w, l(0.600000)
// 1004  0x00007C7C:         add r6.w, r6.w, l(0.200000)
// 1005  0x00007C98:         mad r5.w, r5.w, l(0.200200), r6.w
// 1006  0x00007CBC:         mul r5.w, r2.w, r5.w
// 1007  0x00007CD8:         mul r14.z, r12.z, l(0.900000)
// 1008  0x00007CF4:         movc r15.yzw, cb0[13].xxxx, r5.wwww, r15.yyzw
// 1009  0x00007D1C:         movc r18.xyz, cb0[13].xxxx, l(0,0,1.000000,0), r13.xyzx
// 1010  0x00007D50:         mov r14.xy, l(0.800000,0,0,0)
// 1011  0x00007D70:         movc r14.xyz, cb0[13].xxxx, r14.xyzx, r12.xyzx
// 1012  0x00007D98:         movc r19.xyz, cb0[13].xxxx, l(0,0,0,0), r16.xyzx
// 1013  0x00007DCC:         movc_sat r10.xyz, r1.yyyy, r15.yzwy, r10.xyzx
// 1014  0x00007DF0:         movc r13.xyz, r1.yyyy, r18.xyzx, r13.xyzx
// 1015  0x00007E14:         movc r15.yzw, r1.yyyy, r19.xxyz, r16.xxyz
// 1016  0x00007E38:         movc r12.xyz, r1.yyyy, r14.xyzx, r12.xyzx
// 1017  0x00007E5C:         add r10.xyz, -r5.xyzx, r10.xyzx
// 1018  0x00007E7C:         mad r5.xyz, r12.zzzz, r10.xyzx, r5.xyzx
// 1019  0x00007EA0:         add r10.xyz, -r7.xyzx, r13.xyzx
// 1020  0x00007EC0:         mad r10.xyz, r12.zzzz, r10.xyzx, r7.xyzx
// 1021  0x00007EE4:         dp3 r1.y, r10.xyzx, r10.xyzx
// 1022  0x00007F00:         rsq r1.y, r1.y
// 1023  0x00007F14:         mul r7.xyz, r1.yyyy, r10.xyzx
// 1024  0x00007F30:         add r1.y, -r3.w, r12.y
// 1025  0x00007F50:         mad r3.w, r12.z, r1.y, r3.w
// 1026  0x00007F74:         add r10.xy, -r0.xyxx, r12.xxxx
// 1027  0x00007F94:         mad r0.xy, r12.zzzz, r10.xyxx, r0.xyxx
// 1028  0x00007FB8:         add r1.y, -r2.w, r8.w
// 1029  0x00007FD8:         mad r2.w, r15.x, r1.y, r2.w
// 1030  0x00007FFC:         mul r10.xyz, r15.yzwy, r12.zzzz
// 1031  0x00008018:         mad r1.y, r12.z, l(0.020000), l(0.020000)
// 1032  0x0000803C:         mad r6.x, r12.z, -r6.x, r6.x
// 1033  0x00008064:         mul r12.xyw, r17.xyxz, r12.zzzz
// 1034  0x00008080:         max r5.w, r12.z, l(0.000000)
// 1035  0x0000809C:         add r6.w, -r11.w, l(1.000000)
// 1036  0x000080BC:         mul r6.w, r6.w, r12.z
// 1037  0x000080D8:         max r6.w, r6.w, l(0.000000)
// 1038  0x000080F4:         movc r0.z, cb4[3].y, r12.z, v4.w
// 1039  0x0000811C:       else 
// 1040  0x00008120:         mov r1.y, l(0.020000)
// 1041  0x00008134:         mov r10.xyz, l(0,0,0,0)
// 1042  0x00008154:         mov r12.xyw, l(0,0,0,0)
// 1043  0x00008174:         mov r5.w, l(0)
// 1044  0x00008188:         mov r6.w, l(0)
// 1045  0x0000819C:       endif 
// 1046  0x000081A0:     else 
// 1047  0x000081A4:       mov r1.y, l(0.020000)
// 1048  0x000081B8:       mov r10.xyz, l(0,0,0,0)
// 1049  0x000081D8:       mov r12.xyw, l(0,0,0,0)
// 1050  0x000081F8:       mov r5.w, l(0)
// 1051  0x0000820C:       mov r6.w, l(0)
// 1052  0x00008220:     endif 
// 1053  0x00008224:   else 
// 1054  0x00008228:     mov r10.xyz, l(0,0,0,0)
// 1055  0x00008248:     mov r12.xyw, l(0,0,0,0)
// 1056  0x00008268:     mov r0.z, v4.w
// 1057  0x0000827C:     mov r1.y, l(0.020000)
// 1058  0x00008290:     mov r5.w, l(0)
// 1059  0x000082A4:     mov r6.w, l(0)
// 1060  0x000082B8:   endif 
// 1061  0x000082BC:   or r7.w, cb0[0].y, cb0[21].y
// 1062  0x000082E0:   if_nz r7.w
// 1063  0x000082EC:     movc r7.w, cb4[3].y, l(0), r0.z
// 1064  0x00008314:     eq r13.xy, cb0[22].xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
// 1065  0x00008340:     or r8.w, r13.y, r13.x
// 1066  0x0000835C:     eq r9.w, r6.y, l(0.000000)
// 1067  0x00008378:     or r8.w, r8.w, r9.w
// 1068  0x00008394:     if_z r8.w
// 1069  0x000083A0:       ieq r8.w, cb0[12].w, l(2)
// 1070  0x000083C0:       add r13.xy, v3.wzww, l(-0.500000, -0.500000, 0.000000, 0.000000)
// 1071  0x000083E8:       add r13.xy, r13.xyxx, -cb0[21].wzww
// 1072  0x0000840C:       mul r13.xy, r13.xyxx, |cb0[22].xxxx|
// 1073  0x00008430:       mul r9.w, cb0[22].z, l(6.283180)
// 1074  0x00008450:       sincos r14.x, r15.x, r9.w
// 1075  0x0000846C:       mul r13.zw, r13.xxxy, r14.xxxx
// 1076  0x00008488:       mad r16.x, r13.y, r15.x, -r13.z
// 1077  0x000084B0:       mad r16.y, r13.x, r15.x, r13.w
// 1078  0x000084D4:       add r13.xy, r16.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
// 1079  0x000084FC:       mov_sat r16.xyzw, r13.xyxy
// 1080  0x00008510:       ne r13.xy, r13.xyxx, r16.xyxx
// 1081  0x0000852C:       or r9.w, r13.y, r13.x
// 1082  0x00008548:       ieq r10.w, cb0[13].x, l(0)
// 1083  0x00008568:       and r10.w, r8.w, r10.w
// 1084  0x00008584:       add r11.w, -cb0[13].y, cb4[39].z
// 1085  0x000085AC:       movc r10.w, r10.w, r11.w, l(0.900000)
// 1086  0x000085D0:       lt r11.w, r10.w, l(0.900000)
// 1087  0x000085EC:       sample_b_indexable(texture2d)(float,float,float,float) r13.xyzw, r16.zwzz, t30.xyzw, s0, l(-1.000000)
// 1088  0x00008620:       mul_sat r12.z, r13.w, l(12.750000)
// 1089  0x0000863C:       mul r17.x, r6.y, r12.z
// 1090  0x00008658:       resinfo_indexable(texture2d)(float,float,float,float) r14.yz, l(0), t30.zxyw
// 1091  0x0000867C:       div r14.yz, l(1.000000, 1.000000, 1.000000, 1.000000), r14.yyzy
// 1092  0x000086A4:       add r15.yz, -r14.yyzy, l(0.000000, 1.000000, 1.000000, 0.000000)
// 1093  0x000086D0:       max r14.yz, r14.yyzy, r16.zzwz
// 1094  0x000086EC:       min r14.yz, r15.yyzy, r14.yyzy
// 1095  0x00008708:       lod r14.y, r14.yzyy, t30.x, s0
// 1096  0x0000872C:       add_sat r14.z, r14.y, l(-3.000000)
// 1097  0x00008748:       add r14.z, -r14.z, l(1.000000)
// 1098  0x00008768:       lt r14.w, l(0.000000), r14.z
// 1099  0x00008784:       if_nz r14.w
// 1100  0x00008790:         add r15.yz, r16.zzwz, l(0.000000, -0.500000, -0.500000, 0.000000)
// 1101  0x000087B8:         mul r18.xyz, cb1[20].zxyz, cb1[21].yzxy
// 1102  0x000087DC:         mad r18.xyz, cb1[20].yzxy, cb1[21].zxyz, -r18.xyzx
// 1103  0x0000880C:         dp3 r14.w, r18.xyzx, -r11.xyzx
// 1104  0x0000882C:         dp3 r15.w, cb1[21].xyzx, r11.xyzx
// 1105  0x0000884C:         mul r16.x, r14.x, r15.w
// 1106  0x00008868:         mad r16.x, r14.w, r15.x, -r16.x
// 1107  0x00008890:         mul r15.x, r15.x, r15.w
// 1108  0x000088AC:         mad r16.y, r14.w, r14.x, r15.x
// 1109  0x000088D0:         mad r14.xw, -r16.xxxy, l(0.010000, 0.000000, 0.000000, 0.010000), r15.yyyz
// 1110  0x00008904:         add_sat r14.xw, r14.xxxw, l(0.500000, 0.000000, 0.000000, 0.500000)
// 1111  0x0000892C:         sample_b_indexable(texture2d)(float,float,float,float) r14.x, r14.xwxx, t30.wxyz, s0, l(1.000000)
// 1112  0x00008960:         mul_sat r14.x, r14.x, l(12.750000)
// 1113  0x0000897C:         mul r14.x, r6.y, r14.x
// 1114  0x00008998:         mul r14.x, r14.x, l(0.700000)
// 1115  0x000089B4:         max r14.x, r14.x, r17.x
// 1116  0x000089D0:         mad r12.z, -r12.z, r6.y, r14.x
// 1117  0x000089F8:         mad r17.z, r14.z, r12.z, r17.x
// 1118  0x00008A1C:         mov r17.xy, r17.zxzz
// 1119  0x00008A30:       else 
// 1120  0x00008A34:         mov r17.y, l(1.000000)
// 1121  0x00008A48:       endif 
// 1122  0x00008A4C:       ge r12.z, l(0.000000), r17.x
// 1123  0x00008A68:       not r14.x, r11.w
// 1124  0x00008A7C:       and r12.z, r12.z, r14.x
// 1125  0x00008A98:       or r9.w, r9.w, r12.z
// 1126  0x00008AB4:       sample_b_indexable(texture2d)(float,float,float,float) r15.xyzw, r16.zwzz, t32.zxyw, s0, l(-1.000000)
// 1127  0x00008AE8:       add r12.z, r15.z, r15.y
// 1128  0x00008B04:       add r18.x, r12.z, l(-1.003922)
// 1129  0x00008B20:       add r18.y, -r15.z, r15.y
// 1130  0x00008B40:       add r12.z, -|r18.x|, l(1.000000)
// 1131  0x00008B60:       add r18.z, -|r18.y|, r12.z
// 1132  0x00008B80:       dp3 r12.z, r18.xyzx, r18.xyzx
// 1133  0x00008B9C:       rsq r12.z, r12.z
// 1134  0x00008BB0:       mul r18.xyz, r12.zzzz, r18.xyzx
// 1135  0x00008BCC:       max r12.z, r14.y, l(3.000000)
// 1136  0x00008BE8:       sample_l_indexable(texture2d)(float,float,float,float) r14.xy, r1.zwzz, t20.xyzw, s0, r12.z
// 1137  0x00008C1C:       add r14.z, r14.y, r14.x
// 1138  0x00008C38:       add r19.x, r14.z, l(-1.003922)
// 1139  0x00008C54:       add r19.y, -r14.y, r14.x
// 1140  0x00008C74:       add r14.x, -|r19.x|, l(1.000000)
// 1141  0x00008C94:       add r19.z, -|r19.y|, r14.x
// 1142  0x00008CB4:       dp3 r14.x, r19.xyzx, r19.xyzx
// 1143  0x00008CD0:       rsq r14.x, r14.x
// 1144  0x00008CE4:       mul r14.xyz, r14.xxxx, r19.xyzx
// 1145  0x00008D00:       mov r18.w, -r18.y
// 1146  0x00008D18:       mul r18.xyz, r17.xxxx, r18.xwzx
// 1147  0x00008D34:       mov r14.w, -r14.y
// 1148  0x00008D4C:       mad r14.xyz, r18.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r14.xwzx
// 1149  0x00008D7C:       dp3 r14.w, r14.xyzx, r14.xyzx
// 1150  0x00008D98:       rsq r14.w, r14.w
// 1151  0x00008DAC:       mul r14.xyz, r14.wwww, r14.xyzx
// 1152  0x00008DC8:       sample_l_indexable(texture2d)(float,float,float,float) r12.z, r1.zwzz, t21.yzxw, s0, r12.z
// 1153  0x00008DFC:       log r12.z, r12.z
// 1154  0x00008E10:       mul r12.z, r12.z, l(0.750000)
// 1155  0x00008E2C:       exp r12.z, r12.z
// 1156  0x00008E40:       mad r16.x, r17.y, l(0.500000), l(0.500000)
// 1157  0x00008E64:       min r12.z, r12.z, r16.x
// 1158  0x00008E80:       movc r15.y, cb0[26].x, l(1.000000), l(0)
// 1159  0x00008EA8:       if_nz cb0[27].x
// 1160  0x00008EB8:         sample_b_indexable(texture2d)(float,float,float,float) r16.x, r16.zwzz, t34.wxyz, s0, l(-1.000000)
// 1161  0x00008EEC:         add r16.x, -r16.x, l(1.000000)
// 1162  0x00008F0C:         ne r16.y, l(0.000000, 0.000000, 0.000000, 0.000000), r16.x
// 1163  0x00008F34:         if_nz r16.y
// 1164  0x00008F40:           movc r16.y, cb4[2].x, l(2.500000), l(1.750000)
// 1165  0x00008F68:           mul r16.y, r16.y, cb0[27].z
// 1166  0x00008F88:           add r18.xyz, -r4.yzwy, cb1[19].xyzx
// 1167  0x00008FAC:           dp3 r17.z, r18.xyzx, r18.xyzx
// 1168  0x00008FC8:           rsq r17.z, r17.z
// 1169  0x00008FDC:           mul r18.xyz, r17.zzzz, r18.xyzx
// 1170  0x00008FF8:           mul r17.zw, r16.yyyy, r16.zzzw
// 1171  0x00009014:           add r19.xy, r16.zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
// 1172  0x0000903C:           mul r19.xy, r16.yyyy, r19.xyxx
// 1173  0x00009058:           deriv_rtx_coarse r19.zw, r17.zzzw
// 1174  0x0000906C:           deriv_rty_coarse r20.xy, r17.zwzz
// 1175  0x00009080:           max r19.zw, r19.zzzw, r20.xxxy
// 1176  0x0000909C:           min r16.y, r19.w, r19.z
// 1177  0x000090B8:           mad_sat r16.y, -r16.y, l(40.000000), l(1.000000)
// 1178  0x000090E0:           sample_indexable(texture2d)(float,float,float,float) r20.xyz, r17.zwzz, t33.xywz, s9
// 1179  0x0000910C:           add r17.z, r20.y, r20.x
// 1180  0x00009128:           add r21.x, r17.z, l(-1.003922)
// 1181  0x00009144:           add r21.y, -r20.y, r20.x
// 1182  0x00009164:           add r17.z, -|r21.x|, l(1.000000)
// 1183  0x00009184:           add r21.z, -|r21.y|, r17.z
// 1184  0x000091A4:           dp3 r17.z, r21.xyzx, r21.xyzx
// 1185  0x000091C0:           rsq r17.z, r17.z
// 1186  0x000091D4:           mul r20.xyw, r17.zzzz, r21.xyxz
// 1187  0x000091F0:           mul r20.xyw, r20.wwww, r20.xyxw
// 1188  0x0000920C:           mul r21.xyz, r9.xyzx, r20.yyyy
// 1189  0x00009228:           mad r21.xyz, r20.xxxx, v6.xyzx, r21.xyzx
// 1190  0x0000924C:           mad r21.xyz, r20.wwww, r3.xyzx, r21.xyzx
// 1191  0x00009270:           dp3 r17.z, r21.xyzx, r21.xyzx
// 1192  0x0000928C:           rsq r17.z, r17.z
// 1193  0x000092A0:           mul r21.xyz, r17.zzzz, r21.xyzx
// 1194  0x000092BC:           dp3 r17.z, r18.xyzx, r21.xyzx
// 1195  0x000092D8:           add r17.z, r17.z, r17.z
// 1196  0x000092F4:           mad r21.xyz, r21.xyzx, -r17.zzzz, r18.xyzx
// 1197  0x0000931C:           mul r21.xyz, r21.xyzx, l(12.000000, 12.000000, 12.000000, 0.000000)
// 1198  0x00009344:           sincos r21.xyz, null, r21.xyzx
// 1199  0x0000935C:           max r22.xyz, -r21.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
// 1200  0x00009388:           dp3 r17.z, r22.xyzx, l(0.212500, 0.715400, 0.072100, 0.000000)
// 1201  0x000093B0:           mul r17.z, r17.z, r17.z
// 1202  0x000093CC:           add_sat r22.xyz, -r21.xyzx, l(0.150000, 0.150000, 0.150000, 0.000000)
// 1203  0x000093F8:           dp3 r17.w, r22.xyzx, l(0.212500, 0.715400, 0.072100, 0.000000)
// 1204  0x00009420:           mul r17.w, r17.w, l(0.250000)
// 1205  0x0000943C:           mad r17.z, r17.z, r17.z, r17.w
// 1206  0x00009460:           add r21.xyz, r21.xyzx, l(-0.990000, -0.990000, -0.990000, 0.000000)
// 1207  0x00009488:           max r21.xyz, r21.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
// 1208  0x000094B0:           mul r21.xyz, r21.xyzx, l(100.000099, 100.000099, 100.000099, 0.000000)
// 1209  0x000094D8:           mul r22.xyz, r21.yzxy, r21.yzxy
// 1210  0x000094F4:           mad r21.xyz, r22.xyzx, r22.xyzx, r21.xyzx
// 1211  0x00009518:           mad r21.xyz, r21.xyzx, l(3.000000, 3.000000, 3.000000, 0.000000), r17.zzzz
// 1212  0x00009548:           mul r21.xyz, r20.zzzz, r21.xyzx
// 1213  0x00009564:           mul r16.y, r16.x, r16.y
// 1214  0x00009580:           mul r16.y, r16.y, l(0.040000)
// 1215  0x0000959C:           mad r17.zw, r20.xxxy, r16.yyyy, r14.xxxy
// 1216  0x000095C0:           sample_l_indexable(texture2d)(float,float,float,float) r19.xyz, r19.xyxx, t33.xywz, s2, l(0.000000)
// 1217  0x000095F4:           add r18.w, r19.y, r19.x
// 1218  0x00009610:           add r20.x, r18.w, l(-1.003922)
// 1219  0x0000962C:           add r20.y, -r19.y, r19.x
// 1220  0x0000964C:           add r18.w, -|r20.x|, l(1.000000)
// 1221  0x0000966C:           add r20.z, -|r20.y|, r18.w
// 1222  0x0000968C:           dp3 r18.w, r20.xyzx, r20.xyzx
// 1223  0x000096A8:           rsq r18.w, r18.w
// 1224  0x000096BC:           mul r19.xyw, r18.wwww, r20.xyxz
// 1225  0x000096D8:           mul r20.xyz, r9.xyzx, r19.yyyy
// 1226  0x000096F4:           mad r20.xyz, r19.xxxx, v6.xyzx, r20.xyzx
// 1227  0x00009718:           mad r20.xyz, r19.wwww, r3.xyzx, r20.xyzx
// 1228  0x0000973C:           dp3 r18.w, r20.xyzx, r20.xyzx
// 1229  0x00009758:           rsq r18.w, r18.w
// 1230  0x0000976C:           mul r20.xyz, r18.wwww, r20.xyzx
// 1231  0x00009788:           dp3 r18.w, r18.xyzx, r20.xyzx
// 1232  0x000097A4:           add r18.w, r18.w, r18.w
// 1233  0x000097C0:           mad r18.xyz, r20.xyzx, -r18.wwww, r18.xyzx
// 1234  0x000097E8:           mul r18.xyz, r18.xyzx, l(12.000000, 12.000000, 12.000000, 0.000000)
// 1235  0x00009810:           sincos r18.xyz, null, r18.xyzx
// 1236  0x00009828:           max r20.xyz, -r18.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
// 1237  0x00009854:           dp3 r18.w, r20.xyzx, l(0.212500, 0.715400, 0.072100, 0.000000)
// 1238  0x0000987C:           mul r18.w, r18.w, r18.w
// 1239  0x00009898:           add_sat r20.xyz, -r18.xyzx, l(0.150000, 0.150000, 0.150000, 0.000000)
// 1240  0x000098C4:           dp3 r19.w, r20.xyzx, l(0.212500, 0.715400, 0.072100, 0.000000)
// 1241  0x000098EC:           mul r19.w, r19.w, l(0.250000)
// 1242  0x00009908:           mad r18.w, r18.w, r18.w, r19.w
// 1243  0x0000992C:           add r18.xyz, r18.xyzx, l(-0.990000, -0.990000, -0.990000, 0.000000)
// 1244  0x00009954:           max r18.xyz, r18.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
// 1245  0x0000997C:           mul r18.xyz, r18.xyzx, l(100.000099, 100.000099, 100.000099, 0.000000)
// 1246  0x000099A4:           mul r20.xyz, r18.yzxy, r18.yzxy
// 1247  0x000099C0:           mad r18.xyz, r20.xyzx, r20.xyzx, r18.xyzx
// 1248  0x000099E4:           mad r18.xyz, r18.xyzx, l(3.000000, 3.000000, 3.000000, 0.000000), r18.wwww
// 1249  0x00009A14:           mul r18.xyz, r19.zzzz, r18.xyzx
// 1250  0x00009A30:           max r18.xyz, r18.xyzx, r21.xyzx
// 1251  0x00009A4C:           mov_sat r20.xyz, r13.xyzx
// 1252  0x00009A60:           dp3 r18.w, r20.xyzx, l(0.212500, 0.715400, 0.072100, 0.000000)
// 1253  0x00009A88:           max r19.w, r13.z, r13.y
// 1254  0x00009AA4:           max r19.w, r13.x, r19.w
// 1255  0x00009AC0:           log r19.w, r19.w
// 1256  0x00009AD4:           mul r19.w, r19.w, cb0[9].y
// 1257  0x00009AF4:           exp r19.w, r19.w
// 1258  0x00009B08:           min r19.w, r19.w, l(1.000000)
// 1259  0x00009B24:           add r20.x, -cb0[9].x, cb0[9].z
// 1260  0x00009B4C:           mad r19.w, r19.w, r20.x, cb0[9].x
// 1261  0x00009B74:           max r20.xyz, r13.xyzx, l(0.000300, 0.000300, 0.000300, 0.000000)
// 1262  0x00009B9C:           dp3 r20.w, r20.xyzx, r20.xyzx
// 1263  0x00009BB8:           rsq r20.w, r20.w
// 1264  0x00009BCC:           mul r20.xyz, r20.wwww, r20.xyzx
// 1265  0x00009BE8:           mul r20.xyz, r20.xyzx, l(1.060000, 1.060000, 1.060000, 0.000000)
// 1266  0x00009C10:           mul r21.xyz, r19.wwww, r20.xyzx
// 1267  0x00009C2C:           mul r22.xyz, r20.xyzx, cb0[9].xxxx
// 1268  0x00009C4C:           mul r22.xyz, r22.xyzx, l(1.732000, 1.732000, 1.732000, 0.000000)
// 1269  0x00009C74:           dp3 r19.w, r20.xyzx, r20.xyzx
// 1270  0x00009C90:           sqrt r19.w, r19.w
// 1271  0x00009CA4:           div r22.xyz, r22.xyzx, r19.wwww
// 1272  0x00009CC0:           dp3 r19.w, r20.xyzx, l(0.212500, 0.715400, 0.072100, 0.000000)
// 1273  0x00009CE8:           div r20.xyz, r22.xyzx, r19.wwww
// 1274  0x00009D04:           max r20.xyz, r21.xyzx, r20.xyzx
// 1275  0x00009D20:           add r19.w, cb0[9].x, l(-0.000300)
// 1276  0x00009D40:           add r18.w, r18.w, l(-0.000300)
// 1277  0x00009D5C:           div r19.w, l(1.000000, 1.000000, 1.000000, 1.000000), r19.w
// 1278  0x00009D84:           mul_sat r18.w, r18.w, r19.w
// 1279  0x00009DA0:           mad r19.w, r18.w, l(-2.000000), l(3.000000)
// 1280  0x00009DC4:           mul r18.w, r18.w, r18.w
// 1281  0x00009DE0:           mul r18.w, r18.w, r19.w
// 1282  0x00009DFC:           rsq r18.w, r18.w
// 1283  0x00009E10:           div r18.w, l(1.000000, 1.000000, 1.000000, 1.000000), r18.w
// 1284  0x00009E38:           add r20.xyz, r20.xyzx, -cb0[9].xxxx
// 1285  0x00009E5C:           mad r20.xyz, r18.wwww, r20.xyzx, cb0[9].xxxx
// 1286  0x00009E84:           movc r20.xyz, cb0[25].xxxx, r20.xyzx, r13.xyzx
// 1287  0x00009EAC:           mul r20.xyz, r20.xyzx, cb0[25].wwww
// 1288  0x00009ECC:           mul r18.xyz, r18.xyzx, r20.xyzx
// 1289  0x00009EE8:           mul r19.xy, r16.yyyy, r19.xyxx
// 1290  0x00009F04:           mad r14.xy, r19.xyxx, r19.zzzz, r17.zwzz
// 1291  0x00009F28:           mul r16.y, r16.x, l(0.500000)
// 1292  0x00009F44:           max r15.y, r15.y, r16.y
// 1293  0x00009F60:           mul r18.xyz, r16.xxxx, r18.xyzx
// 1294  0x00009F7C:         else 
// 1295  0x00009F80:           mov r18.xyz, r10.xyzx
// 1296  0x00009F94:         endif 
// 1297  0x00009F98:       else 
// 1298  0x00009F9C:         mov r18.xyz, r10.xyzx
// 1299  0x00009FB0:       endif 
// 1300  0x00009FB4:       if_nz cb0[25].x
// 1301  0x00009FC4:         add r19.xyz, cb0[24].xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
// 1302  0x00009FF0:         mad r19.xyz, r15.yyyy, r19.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
// 1303  0x0000A020:         mul r16.x, r15.y, cb0[24].w
// 1304  0x0000A040:         if_nz cb0[25].y
// 1305  0x0000A050:           dp3 r16.y, r13.xyzx, l(0.212500, 0.715400, 0.072100, 0.000000)
// 1306  0x0000A078:           add r20.xyz, -r13.xyzx, r16.yyyy
// 1307  0x0000A098:           mad r20.xyz, r16.xxxx, r20.xyzx, r13.xyzx
// 1308  0x0000A0BC:           mul_sat r20.xyz, r19.xyzx, r20.xyzx
// 1309  0x0000A0D8:           max r21.xyz, r20.xyzx, l(0.000300, 0.000300, 0.000300, 0.000000)
// 1310  0x0000A100:           dp3 r16.y, r21.xyzx, r21.xyzx
// 1311  0x0000A11C:           rsq r16.y, r16.y
// 1312  0x0000A130:           mul r21.xyz, r16.yyyy, r21.xyzx
// 1313  0x0000A14C:           mul r21.xyz, r21.xyzx, l(1.060000, 1.060000, 1.060000, 0.000000)
// 1314  0x0000A174:           max r16.y, r20.z, r20.y
// 1315  0x0000A190:           max r16.y, r16.y, r20.x
// 1316  0x0000A1AC:           mul r16.y, r16.y, cb0[25].z
// 1317  0x0000A1CC:           mul_sat r20.xyz, r20.xyzx, cb0[25].zzzz
// 1318  0x0000A1EC:           dp3 r17.z, r20.xyzx, l(0.212500, 0.715400, 0.072100, 0.000000)
// 1319  0x0000A214:           add r20.xy, r17.zzzz, l(-0.550000, -0.000300, 0.000000, 0.000000)
// 1320  0x0000A23C:           mul_sat r17.w, r20.x, l(-1.871258)
// 1321  0x0000A258:           mad r18.w, r17.w, l(-2.000000), l(3.000000)
// 1322  0x0000A27C:           mul r17.w, r17.w, r17.w
// 1323  0x0000A298:           mul r17.w, r17.w, r18.w
// 1324  0x0000A2B4:           add r20.xzw, cb0[10].xxyz, -cb0[11].xxyz
// 1325  0x0000A2DC:           mad r20.xzw, r17.wwww, r20.xxzw, cb0[11].xxyz
// 1326  0x0000A304:           add r20.xzw, r20.xxzw, -cb0[9].xxyz
// 1327  0x0000A328:           mad r20.xzw, r15.yyyy, r20.xxzw, cb0[9].xxyz
// 1328  0x0000A350:           add r17.w, -cb0[9].x, cb0[10].x
// 1329  0x0000A378:           mad r17.w, r15.y, r17.w, cb0[9].x
// 1330  0x0000A3A0:           log r16.y, r16.y
// 1331  0x0000A3B4:           mul r16.y, r16.y, r20.z
// 1332  0x0000A3D0:           exp r16.y, r16.y
// 1333  0x0000A3E4:           min r16.y, r16.y, l(1.000000)
// 1334  0x0000A400:           add r18.w, -r20.x, r20.w
// 1335  0x0000A420:           mad r16.y, r16.y, r18.w, r20.x
// 1336  0x0000A444:           mul r22.xyz, r21.xyzx, r16.yyyy
// 1337  0x0000A460:           mul r23.xyz, r17.wwww, r21.xyzx
// 1338  0x0000A47C:           mul r23.xyz, r23.xyzx, l(1.732000, 1.732000, 1.732000, 0.000000)
// 1339  0x0000A4A4:           dp3 r16.y, r21.xyzx, r21.xyzx
// 1340  0x0000A4C0:           sqrt r16.y, r16.y
// 1341  0x0000A4D4:           div r23.xyz, r23.xyzx, r16.yyyy
// 1342  0x0000A4F0:           dp3 r16.y, r21.xyzx, l(0.212500, 0.715400, 0.072100, 0.000000)
// 1343  0x0000A518:           div r21.xyz, r23.xyzx, r16.yyyy
// 1344  0x0000A534:           max r21.xyz, r22.xyzx, r21.xyzx
// 1345  0x0000A550:           add r22.xyz, r17.zzzz, r21.xyzx
// 1346  0x0000A56C:           min r20.xzw, r20.wwww, r22.xxyz
// 1347  0x0000A588:           add r16.y, cb0[25].z, l(-1.000000)
// 1348  0x0000A5A8:           max r16.y, r16.y, l(0.000000)
// 1349  0x0000A5C4:           mul r16.y, r16.y, l(0.015873)
// 1350  0x0000A5E0:           add r20.xzw, -r21.xxyz, r20.xxzw
// 1351  0x0000A600:           mad r20.xzw, r16.yyyy, r20.xxzw, r21.xxyz
// 1352  0x0000A624:           add r16.y, r17.w, l(-0.000300)
// 1353  0x0000A640:           div r16.y, l(1.000000, 1.000000, 1.000000, 1.000000), r16.y
// 1354  0x0000A668:           mul_sat r16.y, r16.y, r20.y
// 1355  0x0000A684:           mad r17.z, r16.y, l(-2.000000), l(3.000000)
// 1356  0x0000A6A8:           mul r16.y, r16.y, r16.y
// 1357  0x0000A6C4:           mul r16.y, r16.y, r17.z
// 1358  0x0000A6E0:           rsq r16.y, r16.y
// 1359  0x0000A6F4:           div r16.y, l(1.000000, 1.000000, 1.000000, 1.000000), r16.y
// 1360  0x0000A71C:           add r20.xyz, -r17.wwww, r20.xzwx
// 1361  0x0000A73C:           mad r20.xyz, r16.yyyy, r20.xyzx, r17.wwww
// 1362  0x0000A760:         else 
// 1363  0x0000A764:           mul r21.xyz, r13.xyzx, r19.xyzx
// 1364  0x0000A780:           mad r19.xyz, -r19.xyzx, r13.xyzx, r19.xyzx
// 1365  0x0000A7A8:           mad r19.xyz, r16.xxxx, r19.xyzx, r21.xyzx
// 1366  0x0000A7CC:           max r19.xyz, r19.xyzx, l(0.000300, 0.000300, 0.000300, 0.000000)
// 1367  0x0000A7F4:           dp3 r16.x, r19.xyzx, r19.xyzx
// 1368  0x0000A810:           rsq r16.x, r16.x
// 1369  0x0000A824:           mul r19.xyz, r16.xxxx, r19.xyzx
// 1370  0x0000A840:           mul r19.xyz, r19.xyzx, l(1.060000, 1.060000, 1.060000, 0.000000)
// 1371  0x0000A868:           max r16.x, r13.z, r13.y
// 1372  0x0000A884:           max r16.x, r13.x, r16.x
// 1373  0x0000A8A0:           mul r16.x, r16.x, cb0[25].z
// 1374  0x0000A8C0:           mul_sat r21.xyz, r13.xyzx, cb0[25].zzzz
// 1375  0x0000A8E0:           dp3 r16.y, r21.xyzx, l(0.212500, 0.715400, 0.072100, 0.000000)
// 1376  0x0000A908:           add r17.zw, r16.yyyy, l(0.000000, 0.000000, -0.550000, -0.000300)
// 1377  0x0000A930:           mul_sat r17.z, r17.z, l(-1.871258)
// 1378  0x0000A94C:           mad r18.w, r17.z, l(-2.000000), l(3.000000)
// 1379  0x0000A970:           mul r17.z, r17.z, r17.z
// 1380  0x0000A98C:           mul r17.z, r17.z, r18.w
// 1381  0x0000A9A8:           add r21.xyz, cb0[10].xyzx, -cb0[11].xyzx
// 1382  0x0000A9D0:           mad r21.xyz, r17.zzzz, r21.xyzx, cb0[11].xyzx
// 1383  0x0000A9F8:           add r21.xyz, r21.xyzx, -cb0[9].xyzx
// 1384  0x0000AA1C:           mad r21.xyz, r15.yyyy, r21.xyzx, cb0[9].xyzx
// 1385  0x0000AA44:           add r17.z, -cb0[9].x, cb0[10].x
// 1386  0x0000AA6C:           mad r17.z, r15.y, r17.z, cb0[9].x
// 1387  0x0000AA94:           log r16.x, r16.x
// 1388  0x0000AAA8:           mul r16.x, r16.x, r21.y
// 1389  0x0000AAC4:           exp r16.x, r16.x
// 1390  0x0000AAD8:           min r16.x, r16.x, l(1.000000)
// 1391  0x0000AAF4:           add r18.w, -r21.x, r21.z
// 1392  0x0000AB14:           mad r16.x, r16.x, r18.w, r21.x
// 1393  0x0000AB38:           mul r21.xyw, r19.xyxz, r16.xxxx
// 1394  0x0000AB54:           mul r22.xyz, r17.zzzz, r19.xyzx
// 1395  0x0000AB70:           mul r22.xyz, r22.xyzx, l(1.732000, 1.732000, 1.732000, 0.000000)
// 1396  0x0000AB98:           dp3 r16.x, r19.xyzx, r19.xyzx
// 1397  0x0000ABB4:           sqrt r16.x, r16.x
// 1398  0x0000ABC8:           div r22.xyz, r22.xyzx, r16.xxxx
// 1399  0x0000ABE4:           dp3 r16.x, r19.xyzx, l(0.212500, 0.715400, 0.072100, 0.000000)
// 1400  0x0000AC0C:           div r19.xyz, r22.xyzx, r16.xxxx
// 1401  0x0000AC28:           max r19.xyz, r21.xywx, r19.xyzx
// 1402  0x0000AC44:           add r21.xyw, r16.yyyy, r19.xyxz
// 1403  0x0000AC60:           min r21.xyz, r21.xywx, r21.zzzz
// 1404  0x0000AC7C:           add r16.x, cb0[25].z, l(-1.000000)
// 1405  0x0000AC9C:           max r16.x, r16.x, l(0.000000)
// 1406  0x0000ACB8:           mul r16.x, r16.x, l(0.015873)
// 1407  0x0000ACD4:           add r21.xyz, -r19.xyzx, r21.xyzx
// 1408  0x0000ACF4:           mad r19.xyz, r16.xxxx, r21.xyzx, r19.xyzx
// 1409  0x0000AD18:           add r16.x, r17.z, l(-0.000300)
// 1410  0x0000AD34:           div r16.x, l(1.000000, 1.000000, 1.000000, 1.000000), r16.x
// 1411  0x0000AD5C:           mul_sat r16.x, r16.x, r17.w
// 1412  0x0000AD78:           mad r16.y, r16.x, l(-2.000000), l(3.000000)
// 1413  0x0000AD9C:           mul r16.x, r16.x, r16.x
// 1414  0x0000ADB8:           mul r16.x, r16.x, r16.y
// 1415  0x0000ADD4:           rsq r16.x, r16.x
// 1416  0x0000ADE8:           div r16.x, l(1.000000, 1.000000, 1.000000, 1.000000), r16.x
// 1417  0x0000AE10:           add r19.xyz, -r17.zzzz, r19.xyzx
// 1418  0x0000AE30:           mad r20.xyz, r16.xxxx, r19.xyzx, r17.zzzz
// 1419  0x0000AE54:         endif 
// 1420  0x0000AE58:       else 
// 1421  0x0000AE5C:         dp3 r16.x, r13.xyzx, l(0.212500, 0.715400, 0.072100, 0.000000)
// 1422  0x0000AE84:         add r19.xyz, -r13.xyzx, r16.xxxx
// 1423  0x0000AEA4:         mad r19.xyz, cb0[24].wwww, r19.xyzx, r13.xyzx
// 1424  0x0000AECC:         mul r19.xyz, r19.xyzx, cb0[24].xyzx
// 1425  0x0000AEEC:         movc r16.x, cb0[25].y, cb0[25].z, l(1.000000)
// 1426  0x0000AF18:         mul r19.xyz, r16.xxxx, r19.xyzx
// 1427  0x0000AF34:         movc r20.xyz, cb0[26].xxxx, r19.xyzx, r13.xyzx
// 1428  0x0000AF5C:       endif 
// 1429  0x0000AF60:       if_nz cb0[26].y
// 1430  0x0000AF70:         sample_b_indexable(texture2d)(float,float,float,float) r19.xyzw, r16.zwzz, t34.xyzw, s9, l(-1.000000)
// 1431  0x0000AFA4:         sample_b_indexable(texture2d)(float,float,float,float) r13.xyz, r16.zwzz, t34.xyzw, s0, l(-1.000000)
// 1432  0x0000AFD8:         add r13.xyz, -r19.xyzx, r13.xyzx
// 1433  0x0000AFF8:         mad r21.yzw, r19.wwww, r13.xxyz, r19.xxyz
// 1434  0x0000B01C:         lt r13.x, l(0.000000), r21.y
// 1435  0x0000B038:         if_nz r13.x
// 1436  0x0000B044:           add r13.xyz, -r4.yzwy, cb1[19].xyzx
// 1437  0x0000B068:           dp3 r16.x, r13.xyzx, r13.xyzx
// 1438  0x0000B084:           rsq r16.x, r16.x
// 1439  0x0000B098:           mul r13.xyz, r13.xyzx, r16.xxxx
// 1440  0x0000B0B4:           dp3 r16.x, r13.xyzx, r3.xyzx
// 1441  0x0000B0D0:           ne r16.y, l(0.000000), cb4[36].y
// 1442  0x0000B0F0:           add r19.xyz, r4.yzwy, cb1[33].xyzx
// 1443  0x0000B110:           mad r22.xyz, -cb1[20].xyzx, cb4[36].yyyy, r19.xyzx
// 1444  0x0000B140:           add r19.xyz, cb1[19].xyzx, cb1[33].xyzx
// 1445  0x0000B164:           mad r19.xyz, cb1[22].wwww, cb1[20].xyzx, r19.xyzx
// 1446  0x0000B190:           dp3 r23.w, r19.xyzx, cb1[20].xyzx
// 1447  0x0000B1B0:           mov r22.w, l(1.000000)
// 1448  0x0000B1C4:           mov r23.xyz, cb1[20].xyzx
// 1449  0x0000B1DC:           dp4 r17.z, r22.xyzw, r23.xyzw
// 1450  0x0000B1F8:           ge r17.w, l(0.000000), r17.z
// 1451  0x0000B214:           mad r19.xyz, r17.zzzz, -cb1[20].xyzx, r4.yzwy
// 1452  0x0000B240:           movc r19.xyz, r17.wwww, r4.yzwy, r19.xyzx
// 1453  0x0000B264:           mul r22.xyz, r19.yyyy, cb4[13].xywx
// 1454  0x0000B284:           mad r22.xyz, cb4[12].xywx, r19.xxxx, r22.xyzx
// 1455  0x0000B2AC:           mad r22.xyz, cb4[14].xywx, r19.zzzz, r22.xyzx
// 1456  0x0000B2D4:           add r22.xyz, r22.xyzx, cb4[15].xywx
// 1457  0x0000B2F4:           div r17.zw, r22.xxxy, r22.zzzz
// 1458  0x0000B310:           add r17.z, r17.z, l(1.000000)
// 1459  0x0000B32C:           mul r17.z, r17.z, cb1[26].z
// 1460  0x0000B34C:           mul r17.z, r17.z, l(0.500000)
// 1461  0x0000B368:           add r23.xy, l(-1.000000, -1.000000, 0.000000, 0.000000), cb1[26].zwzz
// 1462  0x0000B394:           max r17.z, r17.z, l(0.000000)
// 1463  0x0000B3B0:           min r22.x, r23.x, r17.z
// 1464  0x0000B3CC:           add r17.z, -r17.w, l(1.000000)
// 1465  0x0000B3EC:           mul r17.z, r17.z, cb1[26].w
// 1466  0x0000B40C:           mul r17.z, r17.z, l(0.500000)
// 1467  0x0000B428:           max r17.z, r17.z, l(0.000000)
// 1468  0x0000B444:           min r22.y, r23.y, r17.z
// 1469  0x0000B460:           movc r23.xyz, r16.yyyy, r19.xyzx, r4.yzwy
// 1470  0x0000B484:           movc r19.xyz, r16.yyyy, r22.xyzx, v8.xywx
// 1471  0x0000B4A8:           add r17.zw, r19.xxxy, -cb1[26].xxxy
// 1472  0x0000B4CC:           ftou r17.zw, r17.zzzw
// 1473  0x0000B4E0:           ushr r17.zw, r17.zzzw, cb3[25].xxxx
// 1474  0x0000B500:           imad r16.y, r17.w, cb3[25].y, r17.z
// 1475  0x0000B528:           imad r16.y, r16.y, cb3[24].z, cb3[24].y
// 1476  0x0000B554:           mul r17.z, r19.z, cb3[26].x
// 1477  0x0000B574:           max r17.z, r17.z, l(0.000000)
// 1478  0x0000B590:           min r17.z, r17.z, cb3[26].y
// 1479  0x0000B5B0:           ftou r17.z, r17.z
// 1480  0x0000B5C4:           imad r17.z, r17.z, cb3[24].z, cb3[24].x
// 1481  0x0000B5F0:           mov r23.w, l(1.000000)
// 1482  0x0000B604:           mov r19.xyz, l(0,0,0,0)
// 1483  0x0000B624:           mov r22.xyz, l(0,0,0,0)
// 1484  0x0000B644:           mov r24.xyz, l(0,0,0,0)
// 1485  0x0000B664:           mov r25.xyz, l(0,0,0,0)
// 1486  0x0000B684:           mov r26.xyz, l(0,0,0,0)
// 1487  0x0000B6A4:           mov r27.xyz, l(0,0,0,0)
// 1488  0x0000B6C4:           mov r17.w, l(0)
// 1489  0x0000B6D8:           mov r18.w, l(0)
// 1490  0x0000B6EC:           mov r20.w, l(0)
// 1491  0x0000B700:           loop 
// 1492  0x0000B704:             ult r22.w, r20.w, cb3[24].z
// 1493  0x0000B724:             not r24.w, r18.w
// 1494  0x0000B738:             and r22.w, r22.w, r24.w
// 1495  0x0000B754:             breakc_z r22.w
// 1496  0x0000B760:             iadd r22.w, r16.y, r20.w
// 1497  0x0000B77C:             ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r22.w, r22.w, l(0), t13.xxxx
// 1498  0x0000B7A8:             iadd r24.w, r17.z, r20.w
// 1499  0x0000B7C4:             ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r24.w, r24.w, l(0), t13.xxxx
// 1500  0x0000B7F0:             and r22.w, r22.w, r24.w
// 1501  0x0000B80C:             ishl r24.w, r20.w, l(5)
// 1502  0x0000B828:             mov r28.xyz, r19.xyzx
// 1503  0x0000B83C:             mov r29.xyz, r22.xyzx
// 1504  0x0000B850:             mov r30.xyz, r24.xyzx
// 1505  0x0000B864:             mov r31.xyz, r25.xyzx
// 1506  0x0000B878:             mov r32.xyz, r26.xyzx
// 1507  0x0000B88C:             mov r33.xyz, r27.xyzx
// 1508  0x0000B8A0:             mov r25.w, r17.w
// 1509  0x0000B8B4:             mov r26.w, r18.w
// 1510  0x0000B8C8:             mov r27.w, r22.w
// 1511  0x0000B8DC:             loop 
// 1512  0x0000B8E0:               breakc_z r27.w
// 1513  0x0000B8EC:               firstbit_lo r28.w, r27.w
// 1514  0x0000B900:               iadd r28.w, r24.w, r28.w
// 1515  0x0000B91C:               iadd r29.w, r27.w, l(-1)
// 1516  0x0000B938:               and r29.w, r27.w, r29.w
// 1517  0x0000B954:               imul null, r28.w, r28.w, l(6)
// 1518  0x0000B974:               dp4 r34.x, r23.xyzw, cb3[r28.w + 1180].xyzw
// 1519  0x0000B99C:               dp4 r34.y, r23.xyzw, cb3[r28.w + 1181].xyzw
// 1520  0x0000B9C4:               dp4 r34.z, r23.xyzw, cb3[r28.w + 1182].xyzw
// 1521  0x0000B9EC:               add r35.xyz, r34.xyzx, -cb3[r28.w + 1183].xyzx
// 1522  0x0000BA18:               mul_sat r35.xyz, r35.xyzx, cb3[r28.w + 1185].xyzx
// 1523  0x0000BA40:               add r34.xyz, -r34.xyzx, cb3[r28.w + 1184].xyzx
// 1524  0x0000BA6C:               mul_sat r34.xyz, r34.xyzx, cb3[r28.w + 1185].xyzx
// 1525  0x0000BA94:               min r30.w, r35.z, r35.y
// 1526  0x0000BAB0:               min r30.w, r30.w, r35.x
// 1527  0x0000BACC:               min r31.w, r34.z, r34.y
// 1528  0x0000BAE8:               min r31.w, r31.w, r34.x
// 1529  0x0000BB04:               min r30.w, r30.w, r31.w
// 1530  0x0000BB20:               eq r31.w, r30.w, l(0.000000)
// 1531  0x0000BB3C:               if_nz r31.w
// 1532  0x0000BB48:                 mov r27.w, r29.w
// 1533  0x0000BB5C:                 continue 
// 1534  0x0000BB60:               endif 
// 1535  0x0000BB64:               mul r31.w, r30.w, r30.w
// 1536  0x0000BB80:               mad r30.w, r30.w, l(-2.000000), l(3.000000)
// 1537  0x0000BBA4:               mul r30.w, r30.w, r31.w
// 1538  0x0000BBC0:               add r31.w, -r25.w, l(1.000000)
// 1539  0x0000BBE0:               mul r32.w, r30.w, r31.w
// 1540  0x0000BBFC:               mad r30.w, r30.w, r31.w, r25.w
// 1541  0x0000BC20:               imul null, r28.w, l(9), cb3[r28.w + 1185].w
// 1542  0x0000BC4C:               dp4 r34.x, r23.xyzw, cb2[r28.w + 0].xyzw
// 1543  0x0000BC70:               dp4 r34.y, r23.xyzw, cb2[r28.w + 1].xyzw
// 1544  0x0000BC98:               dp4 r31.w, r23.xyzw, cb2[r28.w + 2].xyzw
// 1545  0x0000BCC0:               mul r34.z, r31.w, l(0.166667)
// 1546  0x0000BCDC:               max r34.xyz, r34.xyzx, cb2[r28.w + 3].xyzx
// 1547  0x0000BD04:               min r34.xyz, r34.xyzx, cb2[r28.w + 4].xyzx
// 1548  0x0000BD2C:               mul r34.w, r34.z, l(6.000000)
// 1549  0x0000BD48:               mad r34.xyz, r34.xywx, cb2[r28.w + 6].xyzx, cb2[r28.w + 7].xyzx
// 1550  0x0000BD84:               mul r34.w, r34.z, l(0.166667)
// 1551  0x0000BDA0:               sample_l_indexable(texture3d)(float,float,float,float) r35.xyz, r34.xywx, t16.xyzw, s1, l(0.000000)
// 1552  0x0000BDD4:               mul r35.xyz, r35.xyzx, cb2[r28.w + 5].xyzx
// 1553  0x0000BDFC:               add r36.xyz, r34.xywx, l(0.000000, 0.000000, 0.166667, 0.000000)
// 1554  0x0000BE24:               sample_l_indexable(texture3d)(float,float,float,float) r36.xyz, r36.xyzx, t16.xyzw, s1, l(0.000000)
// 1555  0x0000BE58:               mul r36.xyz, r36.xyzx, cb2[r28.w + 5].xyzx
// 1556  0x0000BE80:               add r37.xyz, r34.xywx, l(0.000000, 0.000000, 0.333333, 0.000000)
// 1557  0x0000BEA8:               sample_l_indexable(texture3d)(float,float,float,float) r37.xyz, r37.xyzx, t16.xyzw, s1, l(0.000000)
// 1558  0x0000BEDC:               mul r37.xyz, r37.xyzx, cb2[r28.w + 5].xyzx
// 1559  0x0000BF04:               add r38.xyz, r34.xywx, l(0.000000, 0.000000, 0.500000, 0.000000)
// 1560  0x0000BF2C:               sample_l_indexable(texture3d)(float,float,float,float) r38.xyz, r38.xyzx, t16.xyzw, s1, l(0.000000)
// 1561  0x0000BF60:               mul r38.xyz, r38.xyzx, cb2[r28.w + 5].xyzx
// 1562  0x0000BF88:               add r39.xyz, r34.xywx, l(0.000000, 0.000000, 0.666667, 0.000000)
// 1563  0x0000BFB0:               sample_l_indexable(texture3d)(float,float,float,float) r39.xyz, r39.xyzx, t16.xyzw, s1, l(0.000000)
// 1564  0x0000BFE4:               mul r39.xyz, r39.xyzx, cb2[r28.w + 5].xyzx
// 1565  0x0000C00C:               add r34.xyz, r34.xywx, l(0.000000, 0.000000, 0.833333, 0.000000)
// 1566  0x0000C034:               sample_l_indexable(texture3d)(float,float,float,float) r34.xyz, r34.xyzx, t16.xyzw, s1, l(0.000000)
// 1567  0x0000C068:               mul r34.xyz, r34.xyzx, cb2[r28.w + 5].xyzx
// 1568  0x0000C090:               mad r35.xyz, r32.wwww, r35.xyzx, r28.xyzx
// 1569  0x0000C0B4:               mad r36.xyz, r32.wwww, r36.xyzx, r29.xyzx
// 1570  0x0000C0D8:               mad r37.xyz, r32.wwww, r37.xyzx, r30.xyzx
// 1571  0x0000C0FC:               mad r38.xyz, r32.wwww, r38.xyzx, r31.xyzx
// 1572  0x0000C120:               mad r39.xyz, r32.wwww, r39.xyzx, r32.xyzx
// 1573  0x0000C144:               mad r34.xyz, r32.wwww, r34.xyzx, r33.xyzx
// 1574  0x0000C168:               lt r28.w, l(0.990000), r30.w
// 1575  0x0000C184:               if_nz r28.w
// 1576  0x0000C190:                 mov r28.xyz, r35.xyzx
// 1577  0x0000C1A4:                 mov r29.xyz, r36.xyzx
// 1578  0x0000C1B8:                 mov r30.xyz, r37.xyzx
// 1579  0x0000C1CC:                 mov r31.xyz, r38.xyzx
// 1580  0x0000C1E0:                 mov r32.xyz, r39.xyzx
// 1581  0x0000C1F4:                 mov r33.xyz, r34.xyzx
// 1582  0x0000C208:                 mov r25.w, r30.w
// 1583  0x0000C21C:                 mov r26.w, l(-1)
// 1584  0x0000C230:                 break 
// 1585  0x0000C234:               endif 
// 1586  0x0000C238:               mov r28.xyz, r35.xyzx
// 1587  0x0000C24C:               mov r29.xyz, r36.xyzx
// 1588  0x0000C260:               mov r30.xyz, r37.xyzx
// 1589  0x0000C274:               mov r31.xyz, r38.xyzx
// 1590  0x0000C288:               mov r32.xyz, r39.xyzx
// 1591  0x0000C29C:               mov r33.xyz, r34.xyzx
// 1592  0x0000C2B0:               mov r25.w, r30.w
// 1593  0x0000C2C4:               mov r27.w, r29.w
// 1594  0x0000C2D8:             endloop 
// 1595  0x0000C2DC:             mov r19.xyz, r28.xyzx
// 1596  0x0000C2F0:             mov r22.xyz, r29.xyzx
// 1597  0x0000C304:             mov r24.xyz, r30.xyzx
// 1598  0x0000C318:             mov r25.xyz, r31.xyzx
// 1599  0x0000C32C:             mov r26.xyz, r32.xyzx
// 1600  0x0000C340:             mov r27.xyz, r33.xyzx
// 1601  0x0000C354:             mov r17.w, r25.w
// 1602  0x0000C368:             mov r18.w, r26.w
// 1603  0x0000C37C:             iadd r20.w, r20.w, l(1)
// 1604  0x0000C398:           endloop 
// 1605  0x0000C39C:           lt r16.y, r17.w, l(0.990000)
// 1606  0x0000C3B8:           if_nz r16.y
// 1607  0x0000C3C4:             add r16.y, -r17.w, l(1.000000)
// 1608  0x0000C3E4:             dp2 r23.x, cb3[7].xwxx, l(1.000000, 1.000000, 0.000000, 0.000000)
// 1609  0x0000C410:             dp2 r23.y, cb3[8].xwxx, l(1.000000, 1.000000, 0.000000, 0.000000)
// 1610  0x0000C43C:             dp2 r23.z, cb3[9].xwxx, l(1.000000, 1.000000, 0.000000, 0.000000)
// 1611  0x0000C468:             mad r19.xyz, r16.yyyy, r23.xyzx, r19.xyzx
// 1612  0x0000C48C:             dp2 r23.x, cb3[7].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
// 1613  0x0000C4B8:             dp2 r23.y, cb3[8].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
// 1614  0x0000C4E4:             dp2 r23.z, cb3[9].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
// 1615  0x0000C510:             mad r22.xyz, r16.yyyy, r23.xyzx, r22.xyzx
// 1616  0x0000C534:             dp2 r23.x, cb3[7].zwzz, l(1.000000, 1.000000, 0.000000, 0.000000)
// 1617  0x0000C560:             dp2 r23.y, cb3[8].zwzz, l(1.000000, 1.000000, 0.000000, 0.000000)
// 1618  0x0000C58C:             dp2 r23.z, cb3[9].zwzz, l(1.000000, 1.000000, 0.000000, 0.000000)
// 1619  0x0000C5B8:             mad r24.xyz, r16.yyyy, r23.xyzx, r24.xyzx
// 1620  0x0000C5DC:             dp2 r23.x, cb3[7].xwxx, l(-1.000000, 1.000000, 0.000000, 0.000000)
// 1621  0x0000C608:             dp2 r23.y, cb3[8].xwxx, l(-1.000000, 1.000000, 0.000000, 0.000000)
// 1622  0x0000C634:             dp2 r23.z, cb3[9].xwxx, l(-1.000000, 1.000000, 0.000000, 0.000000)
// 1623  0x0000C660:             mad r25.xyz, r16.yyyy, r23.xyzx, r25.xyzx
// 1624  0x0000C684:             dp2 r23.x, cb3[7].ywyy, l(-1.000000, 1.000000, 0.000000, 0.000000)
// 1625  0x0000C6B0:             dp2 r23.y, cb3[8].ywyy, l(-1.000000, 1.000000, 0.000000, 0.000000)
// 1626  0x0000C6DC:             dp2 r23.z, cb3[9].ywyy, l(-1.000000, 1.000000, 0.000000, 0.000000)
// 1627  0x0000C708:             mad r26.xyz, r16.yyyy, r23.xyzx, r26.xyzx
// 1628  0x0000C72C:             dp2 r23.x, cb3[7].zwzz, l(-1.000000, 1.000000, 0.000000, 0.000000)
// 1629  0x0000C758:             dp2 r23.y, cb3[8].zwzz, l(-1.000000, 1.000000, 0.000000, 0.000000)
// 1630  0x0000C784:             dp2 r23.z, cb3[9].zwzz, l(-1.000000, 1.000000, 0.000000, 0.000000)
// 1631  0x0000C7B0:             mad r27.xyz, r16.yyyy, r23.xyzx, r27.xyzx
// 1632  0x0000C7D4:           endif 
// 1633  0x0000C7D8:           mul r23.xyz, r9.xyzx, r14.yyyy
// 1634  0x0000C7F4:           mad r23.xyz, r14.xxxx, v6.xyzx, r23.xyzx
// 1635  0x0000C818:           mad r23.xyz, r14.zzzz, r3.xyzx, r23.xyzx
// 1636  0x0000C83C:           dp3 r16.y, r23.xyzx, r23.xyzx
// 1637  0x0000C858:           rsq r16.y, r16.y
// 1638  0x0000C86C:           mul r17.zw, r16.yyyy, r23.xxxy
// 1639  0x0000C888:           dp3 r16.y, r19.xyzx, l(0.212500, 0.715400, 0.072100, 0.000000)
// 1640  0x0000C8B0:           max r19.xy, r17.zwzz, l(0.000000, 0.000000, 0.000000, 0.000000)
// 1641  0x0000C8D8:           dp3 r18.w, r25.xyzx, l(0.212500, 0.715400, 0.072100, 0.000000)
// 1642  0x0000C900:           max r17.zw, -r17.zzzw, l(0.000000, 0.000000, 0.000000, 0.000000)
// 1643  0x0000C92C:           mul r18.w, r17.z, r18.w
// 1644  0x0000C948:           mad r23.x, r16.y, r19.x, -r18.w
// 1645  0x0000C970:           dp3 r16.y, r22.xyzx, l(0.212500, 0.715400, 0.072100, 0.000000)
// 1646  0x0000C998:           dp3 r18.w, r26.xyzx, l(0.212500, 0.715400, 0.072100, 0.000000)
// 1647  0x0000C9C0:           mul r17.w, r17.w, r18.w
// 1648  0x0000C9DC:           mad r23.y, r16.y, r19.y, -r17.w
// 1649  0x0000CA04:           dp3 r16.y, r24.xyzx, l(0.212500, 0.715400, 0.072100, 0.000000)
// 1650  0x0000CA2C:           dp3 r17.w, r27.xyzx, l(0.212500, 0.715400, 0.072100, 0.000000)
// 1651  0x0000CA54:           mul r17.z, r17.z, r17.w
// 1652  0x0000CA70:           mad r23.z, r16.y, r19.y, -r17.z
// 1653  0x0000CA98:           mad r19.xyz, r13.xyzx, l(0.001000, 0.001000, 0.001000, 0.000000), r23.xyzx
// 1654  0x0000CAC8:           dp3 r16.y, cb3[20].xyzx, l(0.212500, 0.715400, 0.072100, 0.000000)
// 1655  0x0000CAF4:           mad r19.xyz, cb3[19].xyzx, r16.yyyy, r19.xyzx
// 1656  0x0000CB1C:           dp3 r16.y, r19.xyzx, r19.xyzx
// 1657  0x0000CB38:           rsq r16.y, r16.y
// 1658  0x0000CB4C:           mul r19.xyz, r16.yyyy, r19.xyzx
// 1659  0x0000CB68:           dp3 r13.x, r13.xyzx, r19.xyzx
// 1660  0x0000CB84:           add r13.x, r13.x, r16.x
// 1661  0x0000CBA0:           add r21.x, r13.x, r21.z
// 1662  0x0000CBBC:           sample_l_indexable(texture2d)(float,float,float,float) r13.xyz, r21.xwxx, t31.xyzw, s9, l(0.000000)
// 1663  0x0000CBF0:           if_nz cb0[27].y
// 1664  0x0000CC00:             sample_b_indexable(texture2d)(float,float,float,float) r19.xyz, r21.xwxx, t31.xyzw, s10, l(-1.000000)
// 1665  0x0000CC34:           else 
// 1666  0x0000CC38:             sample_b_indexable(texture2d)(float,float,float,float) r19.xyz, r21.xwxx, t31.xyzw, s0, l(-1.000000)
// 1667  0x0000CC6C:           endif 
// 1668  0x0000CC70:           add r19.xyz, -r13.xyzx, r19.xyzx
// 1669  0x0000CC90:           mad r13.xyz, r19.wwww, r19.xyzx, r13.xyzx
// 1670  0x0000CCB4:           mul_sat r19.xyz, r13.xyzx, cb0[25].wwww
// 1671  0x0000CCD4:           dp3 r16.x, r19.xyzx, l(0.212500, 0.715400, 0.072100, 0.000000)
// 1672  0x0000CCFC:           max r16.y, r13.z, r13.y
// 1673  0x0000CD18:           max r16.y, r13.x, r16.y
// 1674  0x0000CD34:           mul r16.y, r16.y, cb0[25].w
// 1675  0x0000CD54:           log r16.y, r16.y
// 1676  0x0000CD68:           mul r16.y, r16.y, cb0[12].y
// 1677  0x0000CD88:           exp r16.y, r16.y
// 1678  0x0000CD9C:           min r16.y, r16.y, l(1.000000)
// 1679  0x0000CDB8:           add r17.z, -cb0[12].x, cb0[12].z
// 1680  0x0000CDE0:           mad r16.y, r16.y, r17.z, cb0[12].x
// 1681  0x0000CE08:           max r13.xyz, r13.xyzx, l(0.000300, 0.000300, 0.000300, 0.000000)
// 1682  0x0000CE30:           dp3 r17.z, r13.xyzx, r13.xyzx
// 1683  0x0000CE4C:           rsq r17.z, r17.z
// 1684  0x0000CE60:           mul r13.xyz, r13.xyzx, r17.zzzz
// 1685  0x0000CE7C:           mul r13.xyz, r13.xyzx, l(1.060000, 1.060000, 1.060000, 0.000000)
// 1686  0x0000CEA4:           mul r19.xyz, r13.xyzx, r16.yyyy
// 1687  0x0000CEC0:           mul r21.xzw, r13.xxyz, cb0[12].xxxx
// 1688  0x0000CEE0:           mul r21.xzw, r21.xxzw, l(1.732000, 0.000000, 1.732000, 1.732000)
// 1689  0x0000CF08:           dp3 r16.y, r13.xyzx, r13.xyzx
// 1690  0x0000CF24:           sqrt r16.y, r16.y
// 1691  0x0000CF38:           div r21.xzw, r21.xxzw, r16.yyyy
// 1692  0x0000CF54:           dp3 r13.x, r13.xyzx, l(0.212500, 0.715400, 0.072100, 0.000000)
// 1693  0x0000CF7C:           div r13.xyz, r21.xzwx, r13.xxxx
// 1694  0x0000CF98:           max r13.xyz, r19.xyzx, r13.xyzx
// 1695  0x0000CFB4:           mad r19.xyz, r16.xxxx, cb0[25].wwww, r13.xyzx
// 1696  0x0000CFDC:           min r19.xyz, r19.xyzx, cb0[12].zzzz
// 1697  0x0000CFFC:           add r16.y, cb0[25].w, l(-1.000000)
// 1698  0x0000D01C:           max r16.y, r16.y, l(0.000000)
// 1699  0x0000D038:           div r16.y, r16.y, cb0[11].w
// 1700  0x0000D058:           add r19.xyz, -r13.xyzx, r19.xyzx
// 1701  0x0000D078:           mad r13.xyz, r16.yyyy, r19.xyzx, r13.xyzx
// 1702  0x0000D09C:           add r16.y, cb0[12].x, l(-0.000300)
// 1703  0x0000D0BC:           add r16.x, r16.x, l(-0.000300)
// 1704  0x0000D0D8:           div r16.y, l(1.000000, 1.000000, 1.000000, 1.000000), r16.y
// 1705  0x0000D100:           mul_sat r16.x, r16.y, r16.x
// 1706  0x0000D11C:           mad r16.y, r16.x, l(-2.000000), l(3.000000)
// 1707  0x0000D140:           mul r16.x, r16.x, r16.x
// 1708  0x0000D15C:           mul r16.x, r16.x, r16.y
// 1709  0x0000D178:           rsq r16.x, r16.x
// 1710  0x0000D18C:           div r16.x, l(1.000000, 1.000000, 1.000000, 1.000000), r16.x
// 1711  0x0000D1B4:           add r13.xyz, r13.xyzx, -cb0[12].xxxx
// 1712  0x0000D1D8:           mad r13.xyz, r16.xxxx, r13.xyzx, cb0[12].xxxx
// 1713  0x0000D200:           add r13.xyz, -r20.xyzx, r13.xyzx
// 1714  0x0000D220:           mad r13.xyz, r21.yyyy, r13.xyzx, r20.xyzx
// 1715  0x0000D244:           add r16.x, -r21.y, l(1.000000)
// 1716  0x0000D264:           mul r15.y, r15.y, r16.x
// 1717  0x0000D280:         else 
// 1718  0x0000D284:           mov r13.xyz, r20.xyzx
// 1719  0x0000D298:         endif 
// 1720  0x0000D29C:       else 
// 1721  0x0000D2A0:         mov r13.xyz, r20.xyzx
// 1722  0x0000D2B4:       endif 
// 1723  0x0000D2B8:       lt r16.x, l(0.000000), cb0[22].w
// 1724  0x0000D2D8:       if_nz r16.x
// 1725  0x0000D2E4:         add r13.w, r13.w, l(-0.078431)
// 1726  0x0000D300:         mul_sat r13.w, r13.w, l(1.085106)
// 1727  0x0000D31C:         sample_b_indexable(texture2d)(float,float,float,float) r16.x, r16.zwzz, t23.xyzw, s0, l(-1.000000)
// 1728  0x0000D350:         min r16.x, r16.x, cb0[23].z
// 1729  0x0000D370:         add r16.x, -r16.x, l(1.000000)
// 1730  0x0000D390:         mul r16.y, r16.x, cb0[22].w
// 1731  0x0000D3B0:         mad r16.x, r16.y, l(-0.500000), r16.x
// 1732  0x0000D3D4:         add r16.y, r6.z, l(-0.500000)
// 1733  0x0000D3F0:         add r16.y, r16.y, r16.y
// 1734  0x0000D40C:         add r17.z, cb0[22].w, l(-1.000000)
// 1735  0x0000D42C:         mul_sat r17.z, r17.z, l(-6.666668)
// 1736  0x0000D448:         mad r17.w, r17.z, l(-2.000000), l(3.000000)
// 1737  0x0000D46C:         mul r17.z, r17.z, r17.z
// 1738  0x0000D488:         mul r17.z, r17.z, r17.w
// 1739  0x0000D4A4:         mul r16.y, r16.y, r17.z
// 1740  0x0000D4C0:         mad_sat r16.y, cb0[22].w, r16.y, cb0[22].w
// 1741  0x0000D4EC:         lt r17.z, l(0.000000), cb0[23].y
// 1742  0x0000D50C:         movc r17.z, r17.z, l(0.500000), l(0.250000)
// 1743  0x0000D530:         mad r17.z, cb0[23].y, r17.z, l(0.500000)
// 1744  0x0000D558:         mul r17.z, r17.z, l(0.500000)
// 1745  0x0000D574:         movc r17.z, cb0[26].z, l(0.500000), r17.z
// 1746  0x0000D59C:         mul r17.w, cb0[23].x, cb0[23].x
// 1747  0x0000D5C0:         log r13.w, r13.w
// 1748  0x0000D5D4:         mul r13.w, r13.w, r17.w
// 1749  0x0000D5F0:         exp r13.w, r13.w
// 1750  0x0000D604:         add r13.w, -r13.w, r16.y
// 1751  0x0000D624:         max r13.w, r13.w, l(0.000000)
// 1752  0x0000D640:         add r17.w, r13.w, r13.w
// 1753  0x0000D65C:         min r17.w, r17.w, l(1.000000)
// 1754  0x0000D678:         mad r17.w, cb0[23].y, r16.y, r17.w
// 1755  0x0000D6A0:         add r17.w, r16.x, -r17.w
// 1756  0x0000D6C0:         mul_sat r17.w, r17.w, l(10.000000)
// 1757  0x0000D6DC:         mad r18.w, r17.w, l(-2.000000), l(3.000000)
// 1758  0x0000D700:         mul r17.w, r17.w, r17.w
// 1759  0x0000D71C:         mul r17.w, r17.w, r18.w
// 1760  0x0000D738:         mad r18.w, r16.x, l(0.400000), l(-0.500000)
// 1761  0x0000D75C:         mad r18.w, r16.y, r18.w, l(0.700000)
// 1762  0x0000D780:         add r19.xyz, r13.xyzx, -r18.wwww
// 1763  0x0000D7A0:         mad r19.xyz, r17.wwww, r19.xyzx, r18.wwww
// 1764  0x0000D7C4:         movc r19.xyz, cb0[26].zzzz, r19.xyzx, r13.xyzx
// 1765  0x0000D7EC:         add r17.w, r17.z, l(1.000000)
// 1766  0x0000D808:         mad_sat r13.w, r13.w, r17.w, -r17.z
// 1767  0x0000D830:         add r13.w, -r13.w, r16.x
// 1768  0x0000D850:         mul_sat r13.w, r13.w, l(10.000000)
// 1769  0x0000D86C:         mad r17.z, r13.w, l(-2.000000), l(3.000000)
// 1770  0x0000D890:         mul r13.w, r13.w, r13.w
// 1771  0x0000D8AC:         mul r13.w, r13.w, r17.z
// 1772  0x0000D8C8:         mul r17.x, r13.w, r17.x
// 1773  0x0000D8E4:         mul r17.zw, r16.yyyy, l(0.000000, 0.000000, 0.300000, 2.857143)
// 1774  0x0000D90C:         mad r21.xyz, r19.xyzx, r16.xxxx, -r19.xyzx
// 1775  0x0000D934:         mad r13.xyz, r17.zzzz, r21.xyzx, r19.xyzx
// 1776  0x0000D958:         or r13.w, cb0[26].w, cb0[26].x
// 1777  0x0000D97C:         min r17.z, r17.w, l(1.000000)
// 1778  0x0000D998:         mad r17.w, r17.z, l(-2.000000), l(3.000000)
// 1779  0x0000D9BC:         mul r17.z, r17.z, r17.z
// 1780  0x0000D9D8:         mul r17.z, r17.z, r17.w
// 1781  0x0000D9F4:         ge r16.x, r17.z, r16.x
// 1782  0x0000DA10:         and r16.x, r16.x, l(0x3f800000)
// 1783  0x0000DA2C:         add r17.z, -r15.x, l(0.800000)
// 1784  0x0000DA4C:         mad r16.x, r16.x, r17.z, r15.x
// 1785  0x0000DA70:         movc r15.x, r13.w, r15.x, r16.x
// 1786  0x0000DA94:       else 
// 1787  0x0000DA98:         mov r16.y, cb0[22].w
// 1788  0x0000DAB0:       endif 
// 1789  0x0000DAB4:       add r17.zw, r16.zzzw, l(0.000000, 0.000000, -0.500000, -0.500000)
// 1790  0x0000DADC:       add r19.xy, r14.xyxx, -r17.zwzz
// 1791  0x0000DAFC:       mad r14.xy, r17.xxxx, r19.xyxx, r17.zwzz
// 1792  0x0000DB20:       if_nz r11.w
// 1793  0x0000DB2C:         mul_sat r11.w, r10.w, l(2.222222)
// 1794  0x0000DB48:         rsq r13.w, r11.w
// 1795  0x0000DB5C:         div r13.w, l(1.000000, 1.000000, 1.000000, 1.000000), r13.w
// 1796  0x0000DB84:         add r16.x, -r16.w, r13.w
// 1797  0x0000DBA4:         lt r17.z, r13.w, r16.w
// 1798  0x0000DBC0:         if_nz r17.z
// 1799  0x0000DBCC:           log r17.z, |r16.x|
// 1800  0x0000DBE4:           mul r17.z, r17.z, l(0.200000)
// 1801  0x0000DC00:           exp r17.z, r17.z
// 1802  0x0000DC14:           add r17.z, -r17.z, l(1.000000)
// 1803  0x0000DC34:           mul r17.x, r17.z, r17.x
// 1804  0x0000DC50:           mov r13.xyz, l(0,0,0,0)
// 1805  0x0000DC70:         else 
// 1806  0x0000DC74:           mul_sat r10.w, r10.w, l(1.111111)
// 1807  0x0000DC90:           add r13.w, r13.w, r16.x
// 1808  0x0000DCAC:           mad r13.w, |r16.x|, l(0.300000), r13.w
// 1809  0x0000DCD4:           log r17.z, r16.w
// 1810  0x0000DCE8:           mul r17.z, r17.z, l(0.200000)
// 1811  0x0000DD04:           exp r17.z, r17.z
// 1812  0x0000DD18:           add r13.w, r13.w, l(-1.000000)
// 1813  0x0000DD34:           mad r19.y, r17.z, r13.w, l(1.000000)
// 1814  0x0000DD58:           lt r13.w, r19.y, l(1.000000)
// 1815  0x0000DD74:           if_nz r13.w
// 1816  0x0000DD80:             mov r19.x, r16.z
// 1817  0x0000DD94:             mov_sat r19.xy, r19.xyxx
// 1818  0x0000DDA8:             sample_b_indexable(texture2d)(float,float,float,float) r19.xyzw, r19.xyxx, t30.xyzw, s0, l(-1.000000)
// 1819  0x0000DDDC:             dp3 r13.w, r19.xyzx, l(0.299000, 0.587000, 0.114000, 0.000000)
// 1820  0x0000DE04:             add r17.z, -r13.w, l(0.300000)
// 1821  0x0000DE24:             mad r13.w, r17.z, l(0.800000), r13.w
// 1822  0x0000DE48:             log r16.x, |r16.x|
// 1823  0x0000DE60:             mul r17.zw, r16.xxxx, l(0.000000, 0.000000, 0.200000, 0.100000)
// 1824  0x0000DE88:             exp r17.zw, r17.zzzw
// 1825  0x0000DE9C:             mul_sat r16.x, r19.w, l(12.750000)
// 1826  0x0000DEB8:             add r18.w, -r17.w, l(1.000000)
// 1827  0x0000DED8:             mad r11.w, r11.w, r18.w, r17.w
// 1828  0x0000DEFC:             mul r19.xyz, r11.wwww, r13.xyzx
// 1829  0x0000DF18:             mad r21.xyz, r13.wwww, r17.zzzz, -r19.xyzx
// 1830  0x0000DF40:             mad r13.xyz, r16.xxxx, r21.xyzx, r19.xyzx
// 1831  0x0000DF64:             max r17.x, r16.x, r17.x
// 1832  0x0000DF80:             add r19.xyz, -r14.xyzx, l(0.000000, 0.000000, 1.000000, 0.000000)
// 1833  0x0000DFAC:             mad r14.xyz, r16.xxxx, r19.xyzx, r14.xyzx
// 1834  0x0000DFD0:             mad r15.y, r16.x, -r15.y, r15.y
// 1835  0x0000DFF8:             add r13.w, -r15.x, l(0.800000)
// 1836  0x0000E018:             mad r15.x, r16.x, r13.w, r15.x
// 1837  0x0000E03C:             add r13.w, -r17.y, l(1.000000)
// 1838  0x0000E05C:             mad r17.y, r16.x, r13.w, r17.y
// 1839  0x0000E080:             add r11.w, -r12.z, r11.w
// 1840  0x0000E0A0:             mad r12.z, r16.x, r11.w, r12.z
// 1841  0x0000E0C4:           else 
// 1842  0x0000E0C8:             mov r14.w, r14.z
// 1843  0x0000E0DC:             mov r14.xyz, r14.xywx
// 1844  0x0000E0F0:           endif 
// 1845  0x0000E0F4:           ge r11.w, r10.w, l(0.500000)
// 1846  0x0000E110:           and r11.w, r11.w, l(0x3f800000)
// 1847  0x0000E12C:           add r10.w, r10.w, l(-1.000000)
// 1848  0x0000E148:           mul r10.w, r10.w, l(-2.000000)
// 1849  0x0000E164:           min r10.w, r10.w, l(1.000000)
// 1850  0x0000E180:           mad r13.w, r10.w, l(-2.000000), l(3.000000)
// 1851  0x0000E1A4:           mul r10.w, r10.w, r10.w
// 1852  0x0000E1C0:           mul r10.w, r10.w, r13.w
// 1853  0x0000E1DC:           log r10.w, r10.w
// 1854  0x0000E1F0:           mul r10.w, r10.w, l(20.000000)
// 1855  0x0000E20C:           exp r10.w, r10.w
// 1856  0x0000E220:           mul r10.w, r10.w, r11.w
// 1857  0x0000E23C:           mul r19.xyz, r10.wwww, r13.xyzx
// 1858  0x0000E258:           mad r13.xyz, r19.xyzx, l(9.000000, 9.000000, 9.000000, 0.000000), r13.xyzx
// 1859  0x0000E288:         endif 
// 1860  0x0000E28C:       endif 
// 1861  0x0000E290:       if_z r9.w
// 1862  0x0000E29C:         mul r19.xyz, r15.wwww, r20.xyzx
// 1863  0x0000E2B8:         add r19.xyz, r19.xyzx, r19.xyzx
// 1864  0x0000E2D4:         movc r19.xyz, cb0[27].wwww, r19.xyzx, l(0,0,0,0)
// 1865  0x0000E308:         add r9.w, -cb0[28].x, cb4[39].z
// 1866  0x0000E330:         lt r10.w, r9.w, l(2.000000)
// 1867  0x0000E34C:         mad r9.w, -r9.w, l(0.500000), l(1.000000)
// 1868  0x0000E374:         mul r11.w, r9.w, r9.w
// 1869  0x0000E390:         mul r11.w, r11.w, r11.w
// 1870  0x0000E3AC:         mad r20.xyz, r9.wwww, r11.wwww, r13.xyzx
// 1871  0x0000E3D0:         movc r13.xyz, r10.wwww, r20.xyzx, r13.xyzx
// 1872  0x0000E3F4:         mul r15.z, r17.x, r17.y
// 1873  0x0000E410:         add r17.yzw, r13.xxyz, r13.xxyz
// 1874  0x0000E42C:         movc r17.yzw, cb0[13].zzzz, r17.yyzw, r13.xxyz
// 1875  0x0000E454:         mul r16.xz, r16.zzwz, l(8.000000, 0.000000, 8.000000, 0.000000)
// 1876  0x0000E47C:         round_ni r16.xz, r16.xxzx
// 1877  0x0000E490:         add r9.w, r16.z, r16.x
// 1878  0x0000E4AC:         mul r9.w, r9.w, l(0.500000)
// 1879  0x0000E4C8:         frc r9.w, r9.w
// 1880  0x0000E4DC:         dp3 r10.w, r17.yzwy, l(0.212500, 0.715400, 0.072100, 0.000000)
// 1881  0x0000E504:         mul_sat r10.w, r10.w, l(0.600000)
// 1882  0x0000E520:         add r10.w, r10.w, l(0.200000)
// 1883  0x0000E53C:         mad r9.w, r9.w, l(0.200200), r10.w
// 1884  0x0000E560:         mul r9.w, r2.w, r9.w
// 1885  0x0000E57C:         mul r20.z, r15.z, l(0.900000)
// 1886  0x0000E598:         movc r16.xzw, cb0[13].xxxx, r9.wwww, r17.yyzw
// 1887  0x0000E5C0:         movc r17.yzw, cb0[13].xxxx, l(0,0,0,1.000000), r14.xxyz
// 1888  0x0000E5F4:         mov r20.xy, l(0.800000,0,0,0)
// 1889  0x0000E614:         movc r20.xyz, cb0[13].xxxx, r20.xyzx, r15.xyzx
// 1890  0x0000E63C:         movc r21.xyz, cb0[13].xxxx, l(0,0,0,0), r18.xyzx
// 1891  0x0000E670:         movc_sat r13.xyz, r8.wwww, r16.xzwx, r13.xyzx
// 1892  0x0000E694:         movc r14.xyz, r8.wwww, r17.yzwy, r14.xyzx
// 1893  0x0000E6B8:         movc r16.xzw, r8.wwww, r21.xxyz, r18.xxyz
// 1894  0x0000E6DC:         movc r15.xyz, r8.wwww, r20.xyzx, r15.xyzx
// 1895  0x0000E700:         add r13.xyz, -r5.xyzx, r13.xyzx
// 1896  0x0000E720:         mad r5.xyz, r15.zzzz, r13.xyzx, r5.xyzx
// 1897  0x0000E744:         add r13.xyz, -r7.xyzx, r14.xyzx
// 1898  0x0000E764:         mad r13.xyz, r15.zzzz, r13.xyzx, r7.xyzx
// 1899  0x0000E788:         dp3 r8.w, r13.xyzx, r13.xyzx
// 1900  0x0000E7A4:         rsq r8.w, r8.w
// 1901  0x0000E7B8:         mul r7.xyz, r8.wwww, r13.xyzx
// 1902  0x0000E7D4:         add r8.w, -r3.w, r15.y
// 1903  0x0000E7F4:         mad r3.w, r15.z, r8.w, r3.w
// 1904  0x0000E818:         add r13.xy, -r0.xyxx, r15.xxxx
// 1905  0x0000E838:         mad r0.xy, r15.zzzz, r13.xyxx, r0.xyxx
// 1906  0x0000E85C:         add r8.w, -r2.w, r12.z
// 1907  0x0000E87C:         mad r2.w, r17.x, r8.w, r2.w
// 1908  0x0000E8A0:         add r13.xyz, -r10.xyzx, r16.xzwx
// 1909  0x0000E8C0:         mad r10.xyz, r15.zzzz, r13.xyzx, r10.xyzx
// 1910  0x0000E8E4:         add r8.w, -r1.y, l(0.040000)
// 1911  0x0000E904:         mad r1.y, r15.z, r8.w, r1.y
// 1912  0x0000E928:         mad r6.x, r15.z, -r6.x, r6.x
// 1913  0x0000E950:         add r13.xyz, -r12.xywx, r19.xyzx
// 1914  0x0000E970:         mad r12.xyw, r15.zzzz, r13.xyxz, r12.xyxw
// 1915  0x0000E994:         max r5.w, r5.w, r15.z
// 1916  0x0000E9B0:         add r8.w, -r16.y, l(1.000000)
// 1917  0x0000E9D0:         mul r8.w, r8.w, r15.z
// 1918  0x0000E9EC:         max r6.w, r6.w, r8.w
// 1919  0x0000EA08:         movc r0.z, cb4[3].y, r15.z, r0.z
// 1920  0x0000EA30:       else 
// 1921  0x0000EA34:         mov r0.z, r7.w
// 1922  0x0000EA48:       endif 
// 1923  0x0000EA4C:     else 
// 1924  0x0000EA50:       mov r0.z, r7.w
// 1925  0x0000EA64:     endif 
// 1926  0x0000EA68:   endif 
// 1927  0x0000EA6C:   or r7.w, cb0[0].y, cb0[28].y
// 1928  0x0000EA90:   if_nz r7.w
// 1929  0x0000EA9C:     movc r7.w, cb4[3].y, l(0), r0.z
// 1930  0x0000EAC4:     eq r13.xy, cb0[29].xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
// 1931  0x0000EAF0:     or r8.w, r13.y, r13.x
// 1932  0x0000EB0C:     eq r9.w, r6.y, l(0.000000)
// 1933  0x0000EB28:     or r8.w, r8.w, r9.w
// 1934  0x0000EB44:     if_z r8.w
// 1935  0x0000EB50:       ieq r8.w, cb0[12].w, l(3)
// 1936  0x0000EB70:       add r13.xy, v3.wzww, l(-0.500000, -0.500000, 0.000000, 0.000000)
// 1937  0x0000EB98:       add r13.xy, r13.xyxx, -cb0[28].wzww
// 1938  0x0000EBBC:       mul r13.xy, r13.xyxx, |cb0[29].xxxx|
// 1939  0x0000EBE0:       mul r9.w, cb0[29].z, l(6.283180)
// 1940  0x0000EC00:       sincos r14.x, r15.x, r9.w
// 1941  0x0000EC1C:       mul r13.zw, r13.xxxy, r14.xxxx
// 1942  0x0000EC38:       mad r16.x, r13.y, r15.x, -r13.z
// 1943  0x0000EC60:       mad r16.y, r13.x, r15.x, r13.w
// 1944  0x0000EC84:       add r13.xy, r16.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
// 1945  0x0000ECAC:       mov_sat r16.xyzw, r13.xyxy
// 1946  0x0000ECC0:       ne r13.xy, r13.xyxx, r16.xyxx
// 1947  0x0000ECDC:       or r9.w, r13.y, r13.x
// 1948  0x0000ECF8:       ieq r10.w, cb0[13].x, l(0)
// 1949  0x0000ED18:       and r10.w, r8.w, r10.w
// 1950  0x0000ED34:       add r11.w, -cb0[13].y, cb4[39].z
// 1951  0x0000ED5C:       movc r10.w, r10.w, r11.w, l(0.900000)
// 1952  0x0000ED80:       lt r11.w, r10.w, l(0.900000)
// 1953  0x0000ED9C:       sample_b_indexable(texture2d)(float,float,float,float) r13.xyzw, r16.zwzz, t35.xyzw, s0, l(-1.000000)
// 1954  0x0000EDD0:       mul_sat r12.z, r13.w, l(12.750000)
// 1955  0x0000EDEC:       mul r17.x, r6.y, r12.z
// 1956  0x0000EE08:       resinfo_indexable(texture2d)(float,float,float,float) r14.yz, l(0), t35.zxyw
// 1957  0x0000EE2C:       div r14.yz, l(1.000000, 1.000000, 1.000000, 1.000000), r14.yyzy
// 1958  0x0000EE54:       add r15.yz, -r14.yyzy, l(0.000000, 1.000000, 1.000000, 0.000000)
// 1959  0x0000EE80:       max r14.yz, r14.yyzy, r16.zzwz
// 1960  0x0000EE9C:       min r14.yz, r15.yyzy, r14.yyzy
// 1961  0x0000EEB8:       lod r14.y, r14.yzyy, t35.x, s0
// 1962  0x0000EEDC:       add_sat r14.z, r14.y, l(-3.000000)
// 1963  0x0000EEF8:       add r14.z, -r14.z, l(1.000000)
// 1964  0x0000EF18:       lt r14.w, l(0.000000), r14.z
// 1965  0x0000EF34:       if_nz r14.w
// 1966  0x0000EF40:         add r15.yz, r16.zzwz, l(0.000000, -0.500000, -0.500000, 0.000000)
// 1967  0x0000EF68:         mul r18.xyz, cb1[20].zxyz, cb1[21].yzxy
// 1968  0x0000EF8C:         mad r18.xyz, cb1[20].yzxy, cb1[21].zxyz, -r18.xyzx
// 1969  0x0000EFBC:         dp3 r14.w, r18.xyzx, -r11.xyzx
// 1970  0x0000EFDC:         dp3 r15.w, cb1[21].xyzx, r11.xyzx
// 1971  0x0000EFFC:         mul r16.x, r14.x, r15.w
// 1972  0x0000F018:         mad r16.x, r14.w, r15.x, -r16.x
// 1973  0x0000F040:         mul r15.x, r15.x, r15.w
// 1974  0x0000F05C:         mad r16.y, r14.w, r14.x, r15.x
// 1975  0x0000F080:         mad r14.xw, -r16.xxxy, l(0.010000, 0.000000, 0.000000, 0.010000), r15.yyyz
// 1976  0x0000F0B4:         add_sat r14.xw, r14.xxxw, l(0.500000, 0.000000, 0.000000, 0.500000)
// 1977  0x0000F0DC:         sample_b_indexable(texture2d)(float,float,float,float) r14.x, r14.xwxx, t35.wxyz, s0, l(1.000000)
// 1978  0x0000F110:         mul_sat r14.x, r14.x, l(12.750000)
// 1979  0x0000F12C:         mul r14.x, r6.y, r14.x
// 1980  0x0000F148:         mul r14.x, r14.x, l(0.700000)
// 1981  0x0000F164:         max r14.x, r14.x, r17.x
// 1982  0x0000F180:         mad r12.z, -r12.z, r6.y, r14.x
// 1983  0x0000F1A8:         mad r17.z, r14.z, r12.z, r17.x
// 1984  0x0000F1CC:         mov r17.xy, r17.zxzz
// 1985  0x0000F1E0:       else 
// 1986  0x0000F1E4:         mov r17.y, l(1.000000)
// 1987  0x0000F1F8:       endif 
// 1988  0x0000F1FC:       ge r12.z, l(0.000000), r17.x
// 1989  0x0000F218:       not r14.x, r11.w
// 1990  0x0000F22C:       and r12.z, r12.z, r14.x
// 1991  0x0000F248:       or r9.w, r9.w, r12.z
// 1992  0x0000F264:       sample_b_indexable(texture2d)(float,float,float,float) r15.xyzw, r16.zwzz, t37.zxyw, s0, l(-1.000000)
// 1993  0x0000F298:       add r12.z, r15.z, r15.y
// 1994  0x0000F2B4:       add r18.x, r12.z, l(-1.003922)
// 1995  0x0000F2D0:       add r18.y, -r15.z, r15.y
// 1996  0x0000F2F0:       add r12.z, -|r18.x|, l(1.000000)
// 1997  0x0000F310:       add r18.z, -|r18.y|, r12.z
// 1998  0x0000F330:       dp3 r12.z, r18.xyzx, r18.xyzx
// 1999  0x0000F34C:       rsq r12.z, r12.z
// 2000  0x0000F360:       mul r18.xyz, r12.zzzz, r18.xyzx
// 2001  0x0000F37C:       max r12.z, r14.y, l(3.000000)
// 2002  0x0000F398:       sample_l_indexable(texture2d)(float,float,float,float) r14.xy, r1.zwzz, t20.xyzw, s0, r12.z
// 2003  0x0000F3CC:       add r14.z, r14.y, r14.x
// 2004  0x0000F3E8:       add r19.x, r14.z, l(-1.003922)
// 2005  0x0000F404:       add r19.y, -r14.y, r14.x
// 2006  0x0000F424:       add r14.x, -|r19.x|, l(1.000000)
// 2007  0x0000F444:       add r19.z, -|r19.y|, r14.x
// 2008  0x0000F464:       dp3 r14.x, r19.xyzx, r19.xyzx
// 2009  0x0000F480:       rsq r14.x, r14.x
// 2010  0x0000F494:       mul r14.xyz, r14.xxxx, r19.xyzx
// 2011  0x0000F4B0:       mov r18.w, -r18.y
// 2012  0x0000F4C8:       mul r18.xyz, r17.xxxx, r18.xwzx
// 2013  0x0000F4E4:       mov r14.w, -r14.y
// 2014  0x0000F4FC:       mad r14.xyz, r18.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r14.xwzx
// 2015  0x0000F52C:       dp3 r14.w, r14.xyzx, r14.xyzx
// 2016  0x0000F548:       rsq r14.w, r14.w
// 2017  0x0000F55C:       mul r14.xyz, r14.wwww, r14.xyzx
// 2018  0x0000F578:       sample_l_indexable(texture2d)(float,float,float,float) r12.z, r1.zwzz, t21.yzxw, s0, r12.z
// 2019  0x0000F5AC:       log r12.z, r12.z
// 2020  0x0000F5C0:       mul r12.z, r12.z, l(0.750000)
// 2021  0x0000F5DC:       exp r12.z, r12.z
// 2022  0x0000F5F0:       mad r16.x, r17.y, l(0.500000), l(0.500000)
// 2023  0x0000F614:       min r12.z, r12.z, r16.x
// 2024  0x0000F630:       movc r15.y, cb0[33].x, l(1.000000), l(0)
// 2025  0x0000F658:       if_nz cb0[34].x
// 2026  0x0000F668:         sample_b_indexable(texture2d)(float,float,float,float) r16.x, r16.zwzz, t39.wxyz, s0, l(-1.000000)
// 2027  0x0000F69C:         add r16.x, -r16.x, l(1.000000)
// 2028  0x0000F6BC:         ne r16.y, l(0.000000, 0.000000, 0.000000, 0.000000), r16.x
// 2029  0x0000F6E4:         if_nz r16.y
// 2030  0x0000F6F0:           movc r16.y, cb4[2].x, l(2.500000), l(1.750000)
// 2031  0x0000F718:           mul r16.y, r16.y, cb0[34].z
// 2032  0x0000F738:           add r18.xyz, -r4.yzwy, cb1[19].xyzx
// 2033  0x0000F75C:           dp3 r17.z, r18.xyzx, r18.xyzx
// 2034  0x0000F778:           rsq r17.z, r17.z
// 2035  0x0000F78C:           mul r18.xyz, r17.zzzz, r18.xyzx
// 2036  0x0000F7A8:           mul r17.zw, r16.yyyy, r16.zzzw
// 2037  0x0000F7C4:           add r19.xy, r16.zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
// 2038  0x0000F7EC:           mul r19.xy, r16.yyyy, r19.xyxx
// 2039  0x0000F808:           deriv_rtx_coarse r19.zw, r17.zzzw
// 2040  0x0000F81C:           deriv_rty_coarse r20.xy, r17.zwzz
// 2041  0x0000F830:           max r19.zw, r19.zzzw, r20.xxxy
// 2042  0x0000F84C:           min r16.y, r19.w, r19.z
// 2043  0x0000F868:           mad_sat r16.y, -r16.y, l(40.000000), l(1.000000)
// 2044  0x0000F890:           sample_indexable(texture2d)(float,float,float,float) r20.xyz, r17.zwzz, t38.xywz, s9
// 2045  0x0000F8BC:           add r17.z, r20.y, r20.x
// 2046  0x0000F8D8:           add r21.x, r17.z, l(-1.003922)
// 2047  0x0000F8F4:           add r21.y, -r20.y, r20.x
// 2048  0x0000F914:           add r17.z, -|r21.x|, l(1.000000)
// 2049  0x0000F934:           add r21.z, -|r21.y|, r17.z
// 2050  0x0000F954:           dp3 r17.z, r21.xyzx, r21.xyzx
// 2051  0x0000F970:           rsq r17.z, r17.z
// 2052  0x0000F984:           mul r20.xyw, r17.zzzz, r21.xyxz
// 2053  0x0000F9A0:           mul r20.xyw, r20.wwww, r20.xyxw
// 2054  0x0000F9BC:           mul r21.xyz, r9.xyzx, r20.yyyy
// 2055  0x0000F9D8:           mad r21.xyz, r20.xxxx, v6.xyzx, r21.xyzx
// 2056  0x0000F9FC:           mad r21.xyz, r20.wwww, r3.xyzx, r21.xyzx
// 2057  0x0000FA20:           dp3 r17.z, r21.xyzx, r21.xyzx
// 2058  0x0000FA3C:           rsq r17.z, r17.z
// 2059  0x0000FA50:           mul r21.xyz, r17.zzzz, r21.xyzx
// 2060  0x0000FA6C:           dp3 r17.z, r18.xyzx, r21.xyzx
// 2061  0x0000FA88:           add r17.z, r17.z, r17.z
// 2062  0x0000FAA4:           mad r21.xyz, r21.xyzx, -r17.zzzz, r18.xyzx
// 2063  0x0000FACC:           mul r21.xyz, r21.xyzx, l(12.000000, 12.000000, 12.000000, 0.000000)
// 2064  0x0000FAF4:           sincos r21.xyz, null, r21.xyzx
// 2065  0x0000FB0C:           max r22.xyz, -r21.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
// 2066  0x0000FB38:           dp3 r17.z, r22.xyzx, l(0.212500, 0.715400, 0.072100, 0.000000)
// 2067  0x0000FB60:           mul r17.z, r17.z, r17.z
// 2068  0x0000FB7C:           add_sat r22.xyz, -r21.xyzx, l(0.150000, 0.150000, 0.150000, 0.000000)
// 2069  0x0000FBA8:           dp3 r17.w, r22.xyzx, l(0.212500, 0.715400, 0.072100, 0.000000)
// 2070  0x0000FBD0:           mul r17.w, r17.w, l(0.250000)
// 2071  0x0000FBEC:           mad r17.z, r17.z, r17.z, r17.w
// 2072  0x0000FC10:           add r21.xyz, r21.xyzx, l(-0.990000, -0.990000, -0.990000, 0.000000)
// 2073  0x0000FC38:           max r21.xyz, r21.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
// 2074  0x0000FC60:           mul r21.xyz, r21.xyzx, l(100.000099, 100.000099, 100.000099, 0.000000)
// 2075  0x0000FC88:           mul r22.xyz, r21.yzxy, r21.yzxy
// 2076  0x0000FCA4:           mad r21.xyz, r22.xyzx, r22.xyzx, r21.xyzx
// 2077  0x0000FCC8:           mad r21.xyz, r21.xyzx, l(3.000000, 3.000000, 3.000000, 0.000000), r17.zzzz
// 2078  0x0000FCF8:           mul r21.xyz, r20.zzzz, r21.xyzx
// 2079  0x0000FD14:           mul r16.y, r16.x, r16.y
// 2080  0x0000FD30:           mul r16.y, r16.y, l(0.040000)
// 2081  0x0000FD4C:           mad r17.zw, r20.xxxy, r16.yyyy, r14.xxxy
// 2082  0x0000FD70:           sample_l_indexable(texture2d)(float,float,float,float) r19.xyz, r19.xyxx, t38.xywz, s2, l(0.000000)
// 2083  0x0000FDA4:           add r18.w, r19.y, r19.x
// 2084  0x0000FDC0:           add r20.x, r18.w, l(-1.003922)
// 2085  0x0000FDDC:           add r20.y, -r19.y, r19.x
// 2086  0x0000FDFC:           add r18.w, -|r20.x|, l(1.000000)
// 2087  0x0000FE1C:           add r20.z, -|r20.y|, r18.w
// 2088  0x0000FE3C:           dp3 r18.w, r20.xyzx, r20.xyzx
// 2089  0x0000FE58:           rsq r18.w, r18.w
// 2090  0x0000FE6C:           mul r19.xyw, r18.wwww, r20.xyxz
// 2091  0x0000FE88:           mul r20.xyz, r9.xyzx, r19.yyyy
// 2092  0x0000FEA4:           mad r20.xyz, r19.xxxx, v6.xyzx, r20.xyzx
// 2093  0x0000FEC8:           mad r20.xyz, r19.wwww, r3.xyzx, r20.xyzx
// 2094  0x0000FEEC:           dp3 r18.w, r20.xyzx, r20.xyzx
// 2095  0x0000FF08:           rsq r18.w, r18.w
// 2096  0x0000FF1C:           mul r20.xyz, r18.wwww, r20.xyzx
// 2097  0x0000FF38:           dp3 r18.w, r18.xyzx, r20.xyzx
// 2098  0x0000FF54:           add r18.w, r18.w, r18.w
// 2099  0x0000FF70:           mad r18.xyz, r20.xyzx, -r18.wwww, r18.xyzx
// 2100  0x0000FF98:           mul r18.xyz, r18.xyzx, l(12.000000, 12.000000, 12.000000, 0.000000)
// 2101  0x0000FFC0:           sincos r18.xyz, null, r18.xyzx
// 2102  0x0000FFD8:           max r20.xyz, -r18.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
// 2103  0x00010004:           dp3 r18.w, r20.xyzx, l(0.212500, 0.715400, 0.072100, 0.000000)
// 2104  0x0001002C:           mul r18.w, r18.w, r18.w
// 2105  0x00010048:           add_sat r20.xyz, -r18.xyzx, l(0.150000, 0.150000, 0.150000, 0.000000)
// 2106  0x00010074:           dp3 r19.w, r20.xyzx, l(0.212500, 0.715400, 0.072100, 0.000000)
// 2107  0x0001009C:           mul r19.w, r19.w, l(0.250000)
// 2108  0x000100B8:           mad r18.w, r18.w, r18.w, r19.w
// 2109  0x000100DC:           add r18.xyz, r18.xyzx, l(-0.990000, -0.990000, -0.990000, 0.000000)
// 2110  0x00010104:           max r18.xyz, r18.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
// 2111  0x0001012C:           mul r18.xyz, r18.xyzx, l(100.000099, 100.000099, 100.000099, 0.000000)
// 2112  0x00010154:           mul r20.xyz, r18.yzxy, r18.yzxy
// 2113  0x00010170:           mad r18.xyz, r20.xyzx, r20.xyzx, r18.xyzx
// 2114  0x00010194:           mad r18.xyz, r18.xyzx, l(3.000000, 3.000000, 3.000000, 0.000000), r18.wwww
// 2115  0x000101C4:           mul r18.xyz, r19.zzzz, r18.xyzx
// 2116  0x000101E0:           max r18.xyz, r18.xyzx, r21.xyzx
// 2117  0x000101FC:           mov_sat r20.xyz, r13.xyzx
// 2118  0x00010210:           dp3 r18.w, r20.xyzx, l(0.212500, 0.715400, 0.072100, 0.000000)
// 2119  0x00010238:           max r19.w, r13.z, r13.y
// 2120  0x00010254:           max r19.w, r13.x, r19.w
// 2121  0x00010270:           log r19.w, r19.w
// 2122  0x00010284:           mul r19.w, r19.w, cb0[9].y
// 2123  0x000102A4:           exp r19.w, r19.w
// 2124  0x000102B8:           min r19.w, r19.w, l(1.000000)
// 2125  0x000102D4:           add r20.x, -cb0[9].x, cb0[9].z
// 2126  0x000102FC:           mad r19.w, r19.w, r20.x, cb0[9].x
// 2127  0x00010324:           max r20.xyz, r13.xyzx, l(0.000300, 0.000300, 0.000300, 0.000000)
// 2128  0x0001034C:           dp3 r20.w, r20.xyzx, r20.xyzx
// 2129  0x00010368:           rsq r20.w, r20.w
// 2130  0x0001037C:           mul r20.xyz, r20.wwww, r20.xyzx
// 2131  0x00010398:           mul r20.xyz, r20.xyzx, l(1.060000, 1.060000, 1.060000, 0.000000)
// 2132  0x000103C0:           mul r21.xyz, r19.wwww, r20.xyzx
// 2133  0x000103DC:           mul r22.xyz, r20.xyzx, cb0[9].xxxx
// 2134  0x000103FC:           mul r22.xyz, r22.xyzx, l(1.732000, 1.732000, 1.732000, 0.000000)
// 2135  0x00010424:           dp3 r19.w, r20.xyzx, r20.xyzx
// 2136  0x00010440:           sqrt r19.w, r19.w
// 2137  0x00010454:           div r22.xyz, r22.xyzx, r19.wwww
// 2138  0x00010470:           dp3 r19.w, r20.xyzx, l(0.212500, 0.715400, 0.072100, 0.000000)
// 2139  0x00010498:           div r20.xyz, r22.xyzx, r19.wwww
// 2140  0x000104B4:           max r20.xyz, r21.xyzx, r20.xyzx
// 2141  0x000104D0:           add r19.w, cb0[9].x, l(-0.000300)
// 2142  0x000104F0:           add r18.w, r18.w, l(-0.000300)
// 2143  0x0001050C:           div r19.w, l(1.000000, 1.000000, 1.000000, 1.000000), r19.w
// 2144  0x00010534:           mul_sat r18.w, r18.w, r19.w
// 2145  0x00010550:           mad r19.w, r18.w, l(-2.000000), l(3.000000)
// 2146  0x00010574:           mul r18.w, r18.w, r18.w
// 2147  0x00010590:           mul r18.w, r18.w, r19.w
// 2148  0x000105AC:           rsq r18.w, r18.w
// 2149  0x000105C0:           div r18.w, l(1.000000, 1.000000, 1.000000, 1.000000), r18.w
// 2150  0x000105E8:           add r20.xyz, r20.xyzx, -cb0[9].xxxx
// 2151  0x0001060C:           mad r20.xyz, r18.wwww, r20.xyzx, cb0[9].xxxx
// 2152  0x00010634:           movc r20.xyz, cb0[32].xxxx, r20.xyzx, r13.xyzx
// 2153  0x0001065C:           mul r20.xyz, r20.xyzx, cb0[32].wwww
// 2154  0x0001067C:           mul r18.xyz, r18.xyzx, r20.xyzx
// 2155  0x00010698:           mul r19.xy, r16.yyyy, r19.xyxx
// 2156  0x000106B4:           mad r14.xy, r19.xyxx, r19.zzzz, r17.zwzz
// 2157  0x000106D8:           mul r16.y, r16.x, l(0.500000)
// 2158  0x000106F4:           max r15.y, r15.y, r16.y
// 2159  0x00010710:           mul r18.xyz, r16.xxxx, r18.xyzx
// 2160  0x0001072C:         else 
// 2161  0x00010730:           mov r18.xyz, r10.xyzx
// 2162  0x00010744:         endif 
// 2163  0x00010748:       else 
// 2164  0x0001074C:         mov r18.xyz, r10.xyzx
// 2165  0x00010760:       endif 
// 2166  0x00010764:       if_nz cb0[32].x
// 2167  0x00010774:         add r19.xyz, cb0[31].xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
// 2168  0x000107A0:         mad r19.xyz, r15.yyyy, r19.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
// 2169  0x000107D0:         mul r16.x, r15.y, cb0[31].w
// 2170  0x000107F0:         if_nz cb0[32].y
// 2171  0x00010800:           dp3 r16.y, r13.xyzx, l(0.212500, 0.715400, 0.072100, 0.000000)
// 2172  0x00010828:           add r20.xyz, -r13.xyzx, r16.yyyy
// 2173  0x00010848:           mad r20.xyz, r16.xxxx, r20.xyzx, r13.xyzx
// 2174  0x0001086C:           mul_sat r20.xyz, r19.xyzx, r20.xyzx
// 2175  0x00010888:           max r21.xyz, r20.xyzx, l(0.000300, 0.000300, 0.000300, 0.000000)
// 2176  0x000108B0:           dp3 r16.y, r21.xyzx, r21.xyzx
// 2177  0x000108CC:           rsq r16.y, r16.y
// 2178  0x000108E0:           mul r21.xyz, r16.yyyy, r21.xyzx
// 2179  0x000108FC:           mul r21.xyz, r21.xyzx, l(1.060000, 1.060000, 1.060000, 0.000000)
// 2180  0x00010924:           max r16.y, r20.z, r20.y
// 2181  0x00010940:           max r16.y, r16.y, r20.x
// 2182  0x0001095C:           mul r16.y, r16.y, cb0[32].z
// 2183  0x0001097C:           mul_sat r20.xyz, r20.xyzx, cb0[32].zzzz
// 2184  0x0001099C:           dp3 r17.z, r20.xyzx, l(0.212500, 0.715400, 0.072100, 0.000000)
// 2185  0x000109C4:           add r20.xy, r17.zzzz, l(-0.550000, -0.000300, 0.000000, 0.000000)
// 2186  0x000109EC:           mul_sat r17.w, r20.x, l(-1.871258)
// 2187  0x00010A08:           mad r18.w, r17.w, l(-2.000000), l(3.000000)
// 2188  0x00010A2C:           mul r17.w, r17.w, r17.w
// 2189  0x00010A48:           mul r17.w, r17.w, r18.w
// 2190  0x00010A64:           add r20.xzw, cb0[10].xxyz, -cb0[11].xxyz
// 2191  0x00010A8C:           mad r20.xzw, r17.wwww, r20.xxzw, cb0[11].xxyz
// 2192  0x00010AB4:           add r20.xzw, r20.xxzw, -cb0[9].xxyz
// 2193  0x00010AD8:           mad r20.xzw, r15.yyyy, r20.xxzw, cb0[9].xxyz
// 2194  0x00010B00:           add r17.w, -cb0[9].x, cb0[10].x
// 2195  0x00010B28:           mad r17.w, r15.y, r17.w, cb0[9].x
// 2196  0x00010B50:           log r16.y, r16.y
// 2197  0x00010B64:           mul r16.y, r16.y, r20.z
// 2198  0x00010B80:           exp r16.y, r16.y
// 2199  0x00010B94:           min r16.y, r16.y, l(1.000000)
// 2200  0x00010BB0:           add r18.w, -r20.x, r20.w
// 2201  0x00010BD0:           mad r16.y, r16.y, r18.w, r20.x
// 2202  0x00010BF4:           mul r22.xyz, r21.xyzx, r16.yyyy
// 2203  0x00010C10:           mul r23.xyz, r17.wwww, r21.xyzx
// 2204  0x00010C2C:           mul r23.xyz, r23.xyzx, l(1.732000, 1.732000, 1.732000, 0.000000)
// 2205  0x00010C54:           dp3 r16.y, r21.xyzx, r21.xyzx
// 2206  0x00010C70:           sqrt r16.y, r16.y
// 2207  0x00010C84:           div r23.xyz, r23.xyzx, r16.yyyy
// 2208  0x00010CA0:           dp3 r16.y, r21.xyzx, l(0.212500, 0.715400, 0.072100, 0.000000)
// 2209  0x00010CC8:           div r21.xyz, r23.xyzx, r16.yyyy
// 2210  0x00010CE4:           max r21.xyz, r22.xyzx, r21.xyzx
// 2211  0x00010D00:           add r22.xyz, r17.zzzz, r21.xyzx
// 2212  0x00010D1C:           min r20.xzw, r20.wwww, r22.xxyz
// 2213  0x00010D38:           add r16.y, cb0[32].z, l(-1.000000)
// 2214  0x00010D58:           max r16.y, r16.y, l(0.000000)
// 2215  0x00010D74:           mul r16.y, r16.y, l(0.015873)
// 2216  0x00010D90:           add r20.xzw, -r21.xxyz, r20.xxzw
// 2217  0x00010DB0:           mad r20.xzw, r16.yyyy, r20.xxzw, r21.xxyz
// 2218  0x00010DD4:           add r16.y, r17.w, l(-0.000300)
// 2219  0x00010DF0:           div r16.y, l(1.000000, 1.000000, 1.000000, 1.000000), r16.y
// 2220  0x00010E18:           mul_sat r16.y, r16.y, r20.y
// 2221  0x00010E34:           mad r17.z, r16.y, l(-2.000000), l(3.000000)
// 2222  0x00010E58:           mul r16.y, r16.y, r16.y
// 2223  0x00010E74:           mul r16.y, r16.y, r17.z
// 2224  0x00010E90:           rsq r16.y, r16.y
// 2225  0x00010EA4:           div r16.y, l(1.000000, 1.000000, 1.000000, 1.000000), r16.y
// 2226  0x00010ECC:           add r20.xyz, -r17.wwww, r20.xzwx
// 2227  0x00010EEC:           mad r20.xyz, r16.yyyy, r20.xyzx, r17.wwww
// 2228  0x00010F10:         else 
// 2229  0x00010F14:           mul r21.xyz, r13.xyzx, r19.xyzx
// 2230  0x00010F30:           mad r19.xyz, -r19.xyzx, r13.xyzx, r19.xyzx
// 2231  0x00010F58:           mad r19.xyz, r16.xxxx, r19.xyzx, r21.xyzx
// 2232  0x00010F7C:           max r19.xyz, r19.xyzx, l(0.000300, 0.000300, 0.000300, 0.000000)
// 2233  0x00010FA4:           dp3 r16.x, r19.xyzx, r19.xyzx
// 2234  0x00010FC0:           rsq r16.x, r16.x
// 2235  0x00010FD4:           mul r19.xyz, r16.xxxx, r19.xyzx
// 2236  0x00010FF0:           mul r19.xyz, r19.xyzx, l(1.060000, 1.060000, 1.060000, 0.000000)
// 2237  0x00011018:           max r16.x, r13.z, r13.y
// 2238  0x00011034:           max r16.x, r13.x, r16.x
// 2239  0x00011050:           mul r16.x, r16.x, cb0[32].z
// 2240  0x00011070:           mul_sat r21.xyz, r13.xyzx, cb0[32].zzzz
// 2241  0x00011090:           dp3 r16.y, r21.xyzx, l(0.212500, 0.715400, 0.072100, 0.000000)
// 2242  0x000110B8:           add r17.zw, r16.yyyy, l(0.000000, 0.000000, -0.550000, -0.000300)
// 2243  0x000110E0:           mul_sat r17.z, r17.z, l(-1.871258)
// 2244  0x000110FC:           mad r18.w, r17.z, l(-2.000000), l(3.000000)
// 2245  0x00011120:           mul r17.z, r17.z, r17.z
// 2246  0x0001113C:           mul r17.z, r17.z, r18.w
// 2247  0x00011158:           add r21.xyz, cb0[10].xyzx, -cb0[11].xyzx
// 2248  0x00011180:           mad r21.xyz, r17.zzzz, r21.xyzx, cb0[11].xyzx
// 2249  0x000111A8:           add r21.xyz, r21.xyzx, -cb0[9].xyzx
// 2250  0x000111CC:           mad r21.xyz, r15.yyyy, r21.xyzx, cb0[9].xyzx
// 2251  0x000111F4:           add r17.z, -cb0[9].x, cb0[10].x
// 2252  0x0001121C:           mad r17.z, r15.y, r17.z, cb0[9].x
// 2253  0x00011244:           log r16.x, r16.x
// 2254  0x00011258:           mul r16.x, r16.x, r21.y
// 2255  0x00011274:           exp r16.x, r16.x
// 2256  0x00011288:           min r16.x, r16.x, l(1.000000)
// 2257  0x000112A4:           add r18.w, -r21.x, r21.z
// 2258  0x000112C4:           mad r16.x, r16.x, r18.w, r21.x
// 2259  0x000112E8:           mul r21.xyw, r19.xyxz, r16.xxxx
// 2260  0x00011304:           mul r22.xyz, r17.zzzz, r19.xyzx
// 2261  0x00011320:           mul r22.xyz, r22.xyzx, l(1.732000, 1.732000, 1.732000, 0.000000)
// 2262  0x00011348:           dp3 r16.x, r19.xyzx, r19.xyzx
// 2263  0x00011364:           sqrt r16.x, r16.x
// 2264  0x00011378:           div r22.xyz, r22.xyzx, r16.xxxx
// 2265  0x00011394:           dp3 r16.x, r19.xyzx, l(0.212500, 0.715400, 0.072100, 0.000000)
// 2266  0x000113BC:           div r19.xyz, r22.xyzx, r16.xxxx
// 2267  0x000113D8:           max r19.xyz, r21.xywx, r19.xyzx
// 2268  0x000113F4:           add r21.xyw, r16.yyyy, r19.xyxz
// 2269  0x00011410:           min r21.xyz, r21.xywx, r21.zzzz
// 2270  0x0001142C:           add r16.x, cb0[32].z, l(-1.000000)
// 2271  0x0001144C:           max r16.x, r16.x, l(0.000000)
// 2272  0x00011468:           mul r16.x, r16.x, l(0.015873)
// 2273  0x00011484:           add r21.xyz, -r19.xyzx, r21.xyzx
// 2274  0x000114A4:           mad r19.xyz, r16.xxxx, r21.xyzx, r19.xyzx
// 2275  0x000114C8:           add r16.x, r17.z, l(-0.000300)
// 2276  0x000114E4:           div r16.x, l(1.000000, 1.000000, 1.000000, 1.000000), r16.x
// 2277  0x0001150C:           mul_sat r16.x, r16.x, r17.w
// 2278  0x00011528:           mad r16.y, r16.x, l(-2.000000), l(3.000000)
// 2279  0x0001154C:           mul r16.x, r16.x, r16.x
// 2280  0x00011568:           mul r16.x, r16.x, r16.y
// 2281  0x00011584:           rsq r16.x, r16.x
// 2282  0x00011598:           div r16.x, l(1.000000, 1.000000, 1.000000, 1.000000), r16.x
// 2283  0x000115C0:           add r19.xyz, -r17.zzzz, r19.xyzx
// 2284  0x000115E0:           mad r20.xyz, r16.xxxx, r19.xyzx, r17.zzzz
// 2285  0x00011604:         endif 
// 2286  0x00011608:       else 
// 2287  0x0001160C:         dp3 r16.x, r13.xyzx, l(0.212500, 0.715400, 0.072100, 0.000000)
// 2288  0x00011634:         add r19.xyz, -r13.xyzx, r16.xxxx
// 2289  0x00011654:         mad r19.xyz, cb0[31].wwww, r19.xyzx, r13.xyzx
// 2290  0x0001167C:         mul r19.xyz, r19.xyzx, cb0[31].xyzx
// 2291  0x0001169C:         movc r16.x, cb0[32].y, cb0[32].z, l(1.000000)
// 2292  0x000116C8:         mul r19.xyz, r16.xxxx, r19.xyzx
// 2293  0x000116E4:         movc r20.xyz, cb0[33].xxxx, r19.xyzx, r13.xyzx
// 2294  0x0001170C:       endif 
// 2295  0x00011710:       if_nz cb0[33].y
// 2296  0x00011720:         sample_b_indexable(texture2d)(float,float,float,float) r19.xyzw, r16.zwzz, t39.xyzw, s9, l(-1.000000)
// 2297  0x00011754:         sample_b_indexable(texture2d)(float,float,float,float) r13.xyz, r16.zwzz, t39.xyzw, s0, l(-1.000000)
// 2298  0x00011788:         add r13.xyz, -r19.xyzx, r13.xyzx
// 2299  0x000117A8:         mad r21.yzw, r19.wwww, r13.xxyz, r19.xxyz
// 2300  0x000117CC:         lt r13.x, l(0.000000), r21.y
// 2301  0x000117E8:         if_nz r13.x
// 2302  0x000117F4:           add r13.xyz, -r4.yzwy, cb1[19].xyzx
// 2303  0x00011818:           dp3 r16.x, r13.xyzx, r13.xyzx
// 2304  0x00011834:           rsq r16.x, r16.x
// 2305  0x00011848:           mul r13.xyz, r13.xyzx, r16.xxxx
// 2306  0x00011864:           dp3 r16.x, r13.xyzx, r3.xyzx
// 2307  0x00011880:           ne r16.y, l(0.000000), cb4[36].y
// 2308  0x000118A0:           add r19.xyz, r4.yzwy, cb1[33].xyzx
// 2309  0x000118C0:           mad r22.xyz, -cb1[20].xyzx, cb4[36].yyyy, r19.xyzx
// 2310  0x000118F0:           add r19.xyz, cb1[19].xyzx, cb1[33].xyzx
// 2311  0x00011914:           mad r19.xyz, cb1[22].wwww, cb1[20].xyzx, r19.xyzx
// 2312  0x00011940:           dp3 r23.w, r19.xyzx, cb1[20].xyzx
// 2313  0x00011960:           mov r22.w, l(1.000000)
// 2314  0x00011974:           mov r23.xyz, cb1[20].xyzx
// 2315  0x0001198C:           dp4 r17.z, r22.xyzw, r23.xyzw
// 2316  0x000119A8:           ge r17.w, l(0.000000), r17.z
// 2317  0x000119C4:           mad r19.xyz, r17.zzzz, -cb1[20].xyzx, r4.yzwy
// 2318  0x000119F0:           movc r19.xyz, r17.wwww, r4.yzwy, r19.xyzx
// 2319  0x00011A14:           mul r22.xyz, r19.yyyy, cb4[13].xywx
// 2320  0x00011A34:           mad r22.xyz, cb4[12].xywx, r19.xxxx, r22.xyzx
// 2321  0x00011A5C:           mad r22.xyz, cb4[14].xywx, r19.zzzz, r22.xyzx
// 2322  0x00011A84:           add r22.xyz, r22.xyzx, cb4[15].xywx
// 2323  0x00011AA4:           div r17.zw, r22.xxxy, r22.zzzz
// 2324  0x00011AC0:           add r17.z, r17.z, l(1.000000)
// 2325  0x00011ADC:           mul r17.z, r17.z, cb1[26].z
// 2326  0x00011AFC:           mul r17.z, r17.z, l(0.500000)
// 2327  0x00011B18:           add r23.xy, l(-1.000000, -1.000000, 0.000000, 0.000000), cb1[26].zwzz
// 2328  0x00011B44:           max r17.z, r17.z, l(0.000000)
// 2329  0x00011B60:           min r22.x, r23.x, r17.z
// 2330  0x00011B7C:           add r17.z, -r17.w, l(1.000000)
// 2331  0x00011B9C:           mul r17.z, r17.z, cb1[26].w
// 2332  0x00011BBC:           mul r17.z, r17.z, l(0.500000)
// 2333  0x00011BD8:           max r17.z, r17.z, l(0.000000)
// 2334  0x00011BF4:           min r22.y, r23.y, r17.z
// 2335  0x00011C10:           movc r23.xyz, r16.yyyy, r19.xyzx, r4.yzwy
// 2336  0x00011C34:           movc r19.xyz, r16.yyyy, r22.xyzx, v8.xywx
// 2337  0x00011C58:           add r17.zw, r19.xxxy, -cb1[26].xxxy
// 2338  0x00011C7C:           ftou r17.zw, r17.zzzw
// 2339  0x00011C90:           ushr r17.zw, r17.zzzw, cb3[25].xxxx
// 2340  0x00011CB0:           imad r16.y, r17.w, cb3[25].y, r17.z
// 2341  0x00011CD8:           imad r16.y, r16.y, cb3[24].z, cb3[24].y
// 2342  0x00011D04:           mul r17.z, r19.z, cb3[26].x
// 2343  0x00011D24:           max r17.z, r17.z, l(0.000000)
// 2344  0x00011D40:           min r17.z, r17.z, cb3[26].y
// 2345  0x00011D60:           ftou r17.z, r17.z
// 2346  0x00011D74:           imad r17.z, r17.z, cb3[24].z, cb3[24].x
// 2347  0x00011DA0:           mov r23.w, l(1.000000)
// 2348  0x00011DB4:           mov r19.xyz, l(0,0,0,0)
// 2349  0x00011DD4:           mov r22.xyz, l(0,0,0,0)
// 2350  0x00011DF4:           mov r24.xyz, l(0,0,0,0)
// 2351  0x00011E14:           mov r25.xyz, l(0,0,0,0)
// 2352  0x00011E34:           mov r26.xyz, l(0,0,0,0)
// 2353  0x00011E54:           mov r27.xyz, l(0,0,0,0)
// 2354  0x00011E74:           mov r17.w, l(0)
// 2355  0x00011E88:           mov r18.w, l(0)
// 2356  0x00011E9C:           mov r20.w, l(0)
// 2357  0x00011EB0:           loop 
// 2358  0x00011EB4:             ult r22.w, r20.w, cb3[24].z
// 2359  0x00011ED4:             not r24.w, r18.w
// 2360  0x00011EE8:             and r22.w, r22.w, r24.w
// 2361  0x00011F04:             breakc_z r22.w
// 2362  0x00011F10:             iadd r22.w, r16.y, r20.w
// 2363  0x00011F2C:             ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r22.w, r22.w, l(0), t13.xxxx
// 2364  0x00011F58:             iadd r24.w, r17.z, r20.w
// 2365  0x00011F74:             ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r24.w, r24.w, l(0), t13.xxxx
// 2366  0x00011FA0:             and r22.w, r22.w, r24.w
// 2367  0x00011FBC:             ishl r24.w, r20.w, l(5)
// 2368  0x00011FD8:             mov r28.xyz, r19.xyzx
// 2369  0x00011FEC:             mov r29.xyz, r22.xyzx
// 2370  0x00012000:             mov r30.xyz, r24.xyzx
// 2371  0x00012014:             mov r31.xyz, r25.xyzx
// 2372  0x00012028:             mov r32.xyz, r26.xyzx
// 2373  0x0001203C:             mov r33.xyz, r27.xyzx
// 2374  0x00012050:             mov r25.w, r17.w
// 2375  0x00012064:             mov r26.w, r18.w
// 2376  0x00012078:             mov r27.w, r22.w
// 2377  0x0001208C:             loop 
// 2378  0x00012090:               breakc_z r27.w
// 2379  0x0001209C:               firstbit_lo r28.w, r27.w
// 2380  0x000120B0:               iadd r28.w, r24.w, r28.w
// 2381  0x000120CC:               iadd r29.w, r27.w, l(-1)
// 2382  0x000120E8:               and r29.w, r27.w, r29.w
// 2383  0x00012104:               imul null, r28.w, r28.w, l(6)
// 2384  0x00012124:               dp4 r34.x, r23.xyzw, cb3[r28.w + 1180].xyzw
// 2385  0x0001214C:               dp4 r34.y, r23.xyzw, cb3[r28.w + 1181].xyzw
// 2386  0x00012174:               dp4 r34.z, r23.xyzw, cb3[r28.w + 1182].xyzw
// 2387  0x0001219C:               add r35.xyz, r34.xyzx, -cb3[r28.w + 1183].xyzx
// 2388  0x000121C8:               mul_sat r35.xyz, r35.xyzx, cb3[r28.w + 1185].xyzx
// 2389  0x000121F0:               add r34.xyz, -r34.xyzx, cb3[r28.w + 1184].xyzx
// 2390  0x0001221C:               mul_sat r34.xyz, r34.xyzx, cb3[r28.w + 1185].xyzx
// 2391  0x00012244:               min r30.w, r35.z, r35.y
// 2392  0x00012260:               min r30.w, r30.w, r35.x
// 2393  0x0001227C:               min r31.w, r34.z, r34.y
// 2394  0x00012298:               min r31.w, r31.w, r34.x
// 2395  0x000122B4:               min r30.w, r30.w, r31.w
// 2396  0x000122D0:               eq r31.w, r30.w, l(0.000000)
// 2397  0x000122EC:               if_nz r31.w
// 2398  0x000122F8:                 mov r27.w, r29.w
// 2399  0x0001230C:                 continue 
// 2400  0x00012310:               endif 
// 2401  0x00012314:               mul r31.w, r30.w, r30.w
// 2402  0x00012330:               mad r30.w, r30.w, l(-2.000000), l(3.000000)
// 2403  0x00012354:               mul r30.w, r30.w, r31.w
// 2404  0x00012370:               add r31.w, -r25.w, l(1.000000)
// 2405  0x00012390:               mul r32.w, r30.w, r31.w
// 2406  0x000123AC:               mad r30.w, r30.w, r31.w, r25.w
// 2407  0x000123D0:               imul null, r28.w, l(9), cb3[r28.w + 1185].w
// 2408  0x000123FC:               dp4 r34.x, r23.xyzw, cb2[r28.w + 0].xyzw
// 2409  0x00012420:               dp4 r34.y, r23.xyzw, cb2[r28.w + 1].xyzw
// 2410  0x00012448:               dp4 r31.w, r23.xyzw, cb2[r28.w + 2].xyzw
// 2411  0x00012470:               mul r34.z, r31.w, l(0.166667)
// 2412  0x0001248C:               max r34.xyz, r34.xyzx, cb2[r28.w + 3].xyzx
// 2413  0x000124B4:               min r34.xyz, r34.xyzx, cb2[r28.w + 4].xyzx
// 2414  0x000124DC:               mul r34.w, r34.z, l(6.000000)
// 2415  0x000124F8:               mad r34.xyz, r34.xywx, cb2[r28.w + 6].xyzx, cb2[r28.w + 7].xyzx
// 2416  0x00012534:               mul r34.w, r34.z, l(0.166667)
// 2417  0x00012550:               sample_l_indexable(texture3d)(float,float,float,float) r35.xyz, r34.xywx, t16.xyzw, s1, l(0.000000)
// 2418  0x00012584:               mul r35.xyz, r35.xyzx, cb2[r28.w + 5].xyzx
// 2419  0x000125AC:               add r36.xyz, r34.xywx, l(0.000000, 0.000000, 0.166667, 0.000000)
// 2420  0x000125D4:               sample_l_indexable(texture3d)(float,float,float,float) r36.xyz, r36.xyzx, t16.xyzw, s1, l(0.000000)
// 2421  0x00012608:               mul r36.xyz, r36.xyzx, cb2[r28.w + 5].xyzx
// 2422  0x00012630:               add r37.xyz, r34.xywx, l(0.000000, 0.000000, 0.333333, 0.000000)
// 2423  0x00012658:               sample_l_indexable(texture3d)(float,float,float,float) r37.xyz, r37.xyzx, t16.xyzw, s1, l(0.000000)
// 2424  0x0001268C:               mul r37.xyz, r37.xyzx, cb2[r28.w + 5].xyzx
// 2425  0x000126B4:               add r38.xyz, r34.xywx, l(0.000000, 0.000000, 0.500000, 0.000000)
// 2426  0x000126DC:               sample_l_indexable(texture3d)(float,float,float,float) r38.xyz, r38.xyzx, t16.xyzw, s1, l(0.000000)
// 2427  0x00012710:               mul r38.xyz, r38.xyzx, cb2[r28.w + 5].xyzx
// 2428  0x00012738:               add r39.xyz, r34.xywx, l(0.000000, 0.000000, 0.666667, 0.000000)
// 2429  0x00012760:               sample_l_indexable(texture3d)(float,float,float,float) r39.xyz, r39.xyzx, t16.xyzw, s1, l(0.000000)
// 2430  0x00012794:               mul r39.xyz, r39.xyzx, cb2[r28.w + 5].xyzx
// 2431  0x000127BC:               add r34.xyz, r34.xywx, l(0.000000, 0.000000, 0.833333, 0.000000)
// 2432  0x000127E4:               sample_l_indexable(texture3d)(float,float,float,float) r34.xyz, r34.xyzx, t16.xyzw, s1, l(0.000000)
// 2433  0x00012818:               mul r34.xyz, r34.xyzx, cb2[r28.w + 5].xyzx
// 2434  0x00012840:               mad r35.xyz, r32.wwww, r35.xyzx, r28.xyzx
// 2435  0x00012864:               mad r36.xyz, r32.wwww, r36.xyzx, r29.xyzx
// 2436  0x00012888:               mad r37.xyz, r32.wwww, r37.xyzx, r30.xyzx
// 2437  0x000128AC:               mad r38.xyz, r32.wwww, r38.xyzx, r31.xyzx
// 2438  0x000128D0:               mad r39.xyz, r32.wwww, r39.xyzx, r32.xyzx
// 2439  0x000128F4:               mad r34.xyz, r32.wwww, r34.xyzx, r33.xyzx
// 2440  0x00012918:               lt r28.w, l(0.990000), r30.w
// 2441  0x00012934:               if_nz r28.w
// 2442  0x00012940:                 mov r28.xyz, r35.xyzx
// 2443  0x00012954:                 mov r29.xyz, r36.xyzx
// 2444  0x00012968:                 mov r30.xyz, r37.xyzx
// 2445  0x0001297C:                 mov r31.xyz, r38.xyzx
// 2446  0x00012990:                 mov r32.xyz, r39.xyzx
// 2447  0x000129A4:                 mov r33.xyz, r34.xyzx
// 2448  0x000129B8:                 mov r25.w, r30.w
// 2449  0x000129CC:                 mov r26.w, l(-1)
// 2450  0x000129E0:                 break 
// 2451  0x000129E4:               endif 
// 2452  0x000129E8:               mov r28.xyz, r35.xyzx
// 2453  0x000129FC:               mov r29.xyz, r36.xyzx
// 2454  0x00012A10:               mov r30.xyz, r37.xyzx
// 2455  0x00012A24:               mov r31.xyz, r38.xyzx
// 2456  0x00012A38:               mov r32.xyz, r39.xyzx
// 2457  0x00012A4C:               mov r33.xyz, r34.xyzx
// 2458  0x00012A60:               mov r25.w, r30.w
// 2459  0x00012A74:               mov r27.w, r29.w
// 2460  0x00012A88:             endloop 
// 2461  0x00012A8C:             mov r19.xyz, r28.xyzx
// 2462  0x00012AA0:             mov r22.xyz, r29.xyzx
// 2463  0x00012AB4:             mov r24.xyz, r30.xyzx
// 2464  0x00012AC8:             mov r25.xyz, r31.xyzx
// 2465  0x00012ADC:             mov r26.xyz, r32.xyzx
// 2466  0x00012AF0:             mov r27.xyz, r33.xyzx
// 2467  0x00012B04:             mov r17.w, r25.w
// 2468  0x00012B18:             mov r18.w, r26.w
// 2469  0x00012B2C:             iadd r20.w, r20.w, l(1)
// 2470  0x00012B48:           endloop 
// 2471  0x00012B4C:           lt r16.y, r17.w, l(0.990000)
// 2472  0x00012B68:           if_nz r16.y
// 2473  0x00012B74:             add r16.y, -r17.w, l(1.000000)
// 2474  0x00012B94:             dp2 r23.x, cb3[7].xwxx, l(1.000000, 1.000000, 0.000000, 0.000000)
// 2475  0x00012BC0:             dp2 r23.y, cb3[8].xwxx, l(1.000000, 1.000000, 0.000000, 0.000000)
// 2476  0x00012BEC:             dp2 r23.z, cb3[9].xwxx, l(1.000000, 1.000000, 0.000000, 0.000000)
// 2477  0x00012C18:             mad r19.xyz, r16.yyyy, r23.xyzx, r19.xyzx
// 2478  0x00012C3C:             dp2 r23.x, cb3[7].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
// 2479  0x00012C68:             dp2 r23.y, cb3[8].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
// 2480  0x00012C94:             dp2 r23.z, cb3[9].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
// 2481  0x00012CC0:             mad r22.xyz, r16.yyyy, r23.xyzx, r22.xyzx
// 2482  0x00012CE4:             dp2 r23.x, cb3[7].zwzz, l(1.000000, 1.000000, 0.000000, 0.000000)
// 2483  0x00012D10:             dp2 r23.y, cb3[8].zwzz, l(1.000000, 1.000000, 0.000000, 0.000000)
// 2484  0x00012D3C:             dp2 r23.z, cb3[9].zwzz, l(1.000000, 1.000000, 0.000000, 0.000000)
// 2485  0x00012D68:             mad r24.xyz, r16.yyyy, r23.xyzx, r24.xyzx
// 2486  0x00012D8C:             dp2 r23.x, cb3[7].xwxx, l(-1.000000, 1.000000, 0.000000, 0.000000)
// 2487  0x00012DB8:             dp2 r23.y, cb3[8].xwxx, l(-1.000000, 1.000000, 0.000000, 0.000000)
// 2488  0x00012DE4:             dp2 r23.z, cb3[9].xwxx, l(-1.000000, 1.000000, 0.000000, 0.000000)
// 2489  0x00012E10:             mad r25.xyz, r16.yyyy, r23.xyzx, r25.xyzx
// 2490  0x00012E34:             dp2 r23.x, cb3[7].ywyy, l(-1.000000, 1.000000, 0.000000, 0.000000)
// 2491  0x00012E60:             dp2 r23.y, cb3[8].ywyy, l(-1.000000, 1.000000, 0.000000, 0.000000)
// 2492  0x00012E8C:             dp2 r23.z, cb3[9].ywyy, l(-1.000000, 1.000000, 0.000000, 0.000000)
// 2493  0x00012EB8:             mad r26.xyz, r16.yyyy, r23.xyzx, r26.xyzx
// 2494  0x00012EDC:             dp2 r23.x, cb3[7].zwzz, l(-1.000000, 1.000000, 0.000000, 0.000000)
// 2495  0x00012F08:             dp2 r23.y, cb3[8].zwzz, l(-1.000000, 1.000000, 0.000000, 0.000000)
// 2496  0x00012F34:             dp2 r23.z, cb3[9].zwzz, l(-1.000000, 1.000000, 0.000000, 0.000000)
// 2497  0x00012F60:             mad r27.xyz, r16.yyyy, r23.xyzx, r27.xyzx
// 2498  0x00012F84:           endif 
// 2499  0x00012F88:           mul r23.xyz, r9.xyzx, r14.yyyy
// 2500  0x00012FA4:           mad r23.xyz, r14.xxxx, v6.xyzx, r23.xyzx
// 2501  0x00012FC8:           mad r23.xyz, r14.zzzz, r3.xyzx, r23.xyzx
// 2502  0x00012FEC:           dp3 r16.y, r23.xyzx, r23.xyzx
// 2503  0x00013008:           rsq r16.y, r16.y
// 2504  0x0001301C:           mul r17.zw, r16.yyyy, r23.xxxy
// 2505  0x00013038:           dp3 r16.y, r19.xyzx, l(0.212500, 0.715400, 0.072100, 0.000000)
// 2506  0x00013060:           max r19.xy, r17.zwzz, l(0.000000, 0.000000, 0.000000, 0.000000)
// 2507  0x00013088:           dp3 r18.w, r25.xyzx, l(0.212500, 0.715400, 0.072100, 0.000000)
// 2508  0x000130B0:           max r17.zw, -r17.zzzw, l(0.000000, 0.000000, 0.000000, 0.000000)
// 2509  0x000130DC:           mul r18.w, r17.z, r18.w
// 2510  0x000130F8:           mad r23.x, r16.y, r19.x, -r18.w
// 2511  0x00013120:           dp3 r16.y, r22.xyzx, l(0.212500, 0.715400, 0.072100, 0.000000)
// 2512  0x00013148:           dp3 r18.w, r26.xyzx, l(0.212500, 0.715400, 0.072100, 0.000000)
// 2513  0x00013170:           mul r17.w, r17.w, r18.w
// 2514  0x0001318C:           mad r23.y, r16.y, r19.y, -r17.w
// 2515  0x000131B4:           dp3 r16.y, r24.xyzx, l(0.212500, 0.715400, 0.072100, 0.000000)
// 2516  0x000131DC:           dp3 r17.w, r27.xyzx, l(0.212500, 0.715400, 0.072100, 0.000000)
// 2517  0x00013204:           mul r17.z, r17.z, r17.w
// 2518  0x00013220:           mad r23.z, r16.y, r19.y, -r17.z
// 2519  0x00013248:           mad r19.xyz, r13.xyzx, l(0.001000, 0.001000, 0.001000, 0.000000), r23.xyzx
// 2520  0x00013278:           dp3 r16.y, cb3[20].xyzx, l(0.212500, 0.715400, 0.072100, 0.000000)
// 2521  0x000132A4:           mad r19.xyz, cb3[19].xyzx, r16.yyyy, r19.xyzx
// 2522  0x000132CC:           dp3 r16.y, r19.xyzx, r19.xyzx
// 2523  0x000132E8:           rsq r16.y, r16.y
// 2524  0x000132FC:           mul r19.xyz, r16.yyyy, r19.xyzx
// 2525  0x00013318:           dp3 r13.x, r13.xyzx, r19.xyzx
// 2526  0x00013334:           add r13.x, r13.x, r16.x
// 2527  0x00013350:           add r21.x, r13.x, r21.z
// 2528  0x0001336C:           sample_l_indexable(texture2d)(float,float,float,float) r13.xyz, r21.xwxx, t36.xyzw, s9, l(0.000000)
// 2529  0x000133A0:           if_nz cb0[34].y
// 2530  0x000133B0:             sample_b_indexable(texture2d)(float,float,float,float) r19.xyz, r21.xwxx, t36.xyzw, s10, l(-1.000000)
// 2531  0x000133E4:           else 
// 2532  0x000133E8:             sample_b_indexable(texture2d)(float,float,float,float) r19.xyz, r21.xwxx, t36.xyzw, s0, l(-1.000000)
// 2533  0x0001341C:           endif 
// 2534  0x00013420:           add r19.xyz, -r13.xyzx, r19.xyzx
// 2535  0x00013440:           mad r13.xyz, r19.wwww, r19.xyzx, r13.xyzx
// 2536  0x00013464:           mul_sat r19.xyz, r13.xyzx, cb0[32].wwww
// 2537  0x00013484:           dp3 r16.x, r19.xyzx, l(0.212500, 0.715400, 0.072100, 0.000000)
// 2538  0x000134AC:           max r16.y, r13.z, r13.y
// 2539  0x000134C8:           max r16.y, r13.x, r16.y
// 2540  0x000134E4:           mul r16.y, r16.y, cb0[32].w
// 2541  0x00013504:           log r16.y, r16.y
// 2542  0x00013518:           mul r16.y, r16.y, cb0[12].y
// 2543  0x00013538:           exp r16.y, r16.y
// 2544  0x0001354C:           min r16.y, r16.y, l(1.000000)
// 2545  0x00013568:           add r17.z, -cb0[12].x, cb0[12].z
// 2546  0x00013590:           mad r16.y, r16.y, r17.z, cb0[12].x
// 2547  0x000135B8:           max r13.xyz, r13.xyzx, l(0.000300, 0.000300, 0.000300, 0.000000)
// 2548  0x000135E0:           dp3 r17.z, r13.xyzx, r13.xyzx
// 2549  0x000135FC:           rsq r17.z, r17.z
// 2550  0x00013610:           mul r13.xyz, r13.xyzx, r17.zzzz
// 2551  0x0001362C:           mul r13.xyz, r13.xyzx, l(1.060000, 1.060000, 1.060000, 0.000000)
// 2552  0x00013654:           mul r19.xyz, r13.xyzx, r16.yyyy
// 2553  0x00013670:           mul r21.xzw, r13.xxyz, cb0[12].xxxx
// 2554  0x00013690:           mul r21.xzw, r21.xxzw, l(1.732000, 0.000000, 1.732000, 1.732000)
// 2555  0x000136B8:           dp3 r16.y, r13.xyzx, r13.xyzx
// 2556  0x000136D4:           sqrt r16.y, r16.y
// 2557  0x000136E8:           div r21.xzw, r21.xxzw, r16.yyyy
// 2558  0x00013704:           dp3 r13.x, r13.xyzx, l(0.212500, 0.715400, 0.072100, 0.000000)
// 2559  0x0001372C:           div r13.xyz, r21.xzwx, r13.xxxx
// 2560  0x00013748:           max r13.xyz, r19.xyzx, r13.xyzx
// 2561  0x00013764:           mad r19.xyz, r16.xxxx, cb0[32].wwww, r13.xyzx
// 2562  0x0001378C:           min r19.xyz, r19.xyzx, cb0[12].zzzz
// 2563  0x000137AC:           add r16.y, cb0[32].w, l(-1.000000)
// 2564  0x000137CC:           max r16.y, r16.y, l(0.000000)
// 2565  0x000137E8:           div r16.y, r16.y, cb0[11].w
// 2566  0x00013808:           add r19.xyz, -r13.xyzx, r19.xyzx
// 2567  0x00013828:           mad r13.xyz, r16.yyyy, r19.xyzx, r13.xyzx
// 2568  0x0001384C:           add r16.y, cb0[12].x, l(-0.000300)
// 2569  0x0001386C:           add r16.x, r16.x, l(-0.000300)
// 2570  0x00013888:           div r16.y, l(1.000000, 1.000000, 1.000000, 1.000000), r16.y
// 2571  0x000138B0:           mul_sat r16.x, r16.y, r16.x
// 2572  0x000138CC:           mad r16.y, r16.x, l(-2.000000), l(3.000000)
// 2573  0x000138F0:           mul r16.x, r16.x, r16.x
// 2574  0x0001390C:           mul r16.x, r16.x, r16.y
// 2575  0x00013928:           rsq r16.x, r16.x
// 2576  0x0001393C:           div r16.x, l(1.000000, 1.000000, 1.000000, 1.000000), r16.x
// 2577  0x00013964:           add r13.xyz, r13.xyzx, -cb0[12].xxxx
// 2578  0x00013988:           mad r13.xyz, r16.xxxx, r13.xyzx, cb0[12].xxxx
// 2579  0x000139B0:           add r13.xyz, -r20.xyzx, r13.xyzx
// 2580  0x000139D0:           mad r13.xyz, r21.yyyy, r13.xyzx, r20.xyzx
// 2581  0x000139F4:           add r16.x, -r21.y, l(1.000000)
// 2582  0x00013A14:           mul r15.y, r15.y, r16.x
// 2583  0x00013A30:         else 
// 2584  0x00013A34:           mov r13.xyz, r20.xyzx
// 2585  0x00013A48:         endif 
// 2586  0x00013A4C:       else 
// 2587  0x00013A50:         mov r13.xyz, r20.xyzx
// 2588  0x00013A64:       endif 
// 2589  0x00013A68:       lt r16.x, l(0.000000), cb0[29].w
// 2590  0x00013A88:       if_nz r16.x
// 2591  0x00013A94:         add r13.w, r13.w, l(-0.078431)
// 2592  0x00013AB0:         mul_sat r13.w, r13.w, l(1.085106)
// 2593  0x00013ACC:         sample_b_indexable(texture2d)(float,float,float,float) r16.x, r16.zwzz, t23.xyzw, s0, l(-1.000000)
// 2594  0x00013B00:         min r16.x, r16.x, cb0[30].z
// 2595  0x00013B20:         add r16.x, -r16.x, l(1.000000)
// 2596  0x00013B40:         mul r16.y, r16.x, cb0[29].w
// 2597  0x00013B60:         mad r16.x, r16.y, l(-0.500000), r16.x
// 2598  0x00013B84:         add r16.y, r6.z, l(-0.500000)
// 2599  0x00013BA0:         add r16.y, r16.y, r16.y
// 2600  0x00013BBC:         add r17.z, cb0[29].w, l(-1.000000)
// 2601  0x00013BDC:         mul_sat r17.z, r17.z, l(-6.666668)
// 2602  0x00013BF8:         mad r17.w, r17.z, l(-2.000000), l(3.000000)
// 2603  0x00013C1C:         mul r17.z, r17.z, r17.z
// 2604  0x00013C38:         mul r17.z, r17.z, r17.w
// 2605  0x00013C54:         mul r16.y, r16.y, r17.z
// 2606  0x00013C70:         mad_sat r16.y, cb0[29].w, r16.y, cb0[29].w
// 2607  0x00013C9C:         lt r17.z, l(0.000000), cb0[30].y
// 2608  0x00013CBC:         movc r17.z, r17.z, l(0.500000), l(0.250000)
// 2609  0x00013CE0:         mad r17.z, cb0[30].y, r17.z, l(0.500000)
// 2610  0x00013D08:         mul r17.z, r17.z, l(0.500000)
// 2611  0x00013D24:         movc r17.z, cb0[33].z, l(0.500000), r17.z
// 2612  0x00013D4C:         mul r17.w, cb0[30].x, cb0[30].x
// 2613  0x00013D70:         log r13.w, r13.w
// 2614  0x00013D84:         mul r13.w, r13.w, r17.w
// 2615  0x00013DA0:         exp r13.w, r13.w
// 2616  0x00013DB4:         add r13.w, -r13.w, r16.y
// 2617  0x00013DD4:         max r13.w, r13.w, l(0.000000)
// 2618  0x00013DF0:         add r17.w, r13.w, r13.w
// 2619  0x00013E0C:         min r17.w, r17.w, l(1.000000)
// 2620  0x00013E28:         mad r17.w, cb0[30].y, r16.y, r17.w
// 2621  0x00013E50:         add r17.w, r16.x, -r17.w
// 2622  0x00013E70:         mul_sat r17.w, r17.w, l(10.000000)
// 2623  0x00013E8C:         mad r18.w, r17.w, l(-2.000000), l(3.000000)
// 2624  0x00013EB0:         mul r17.w, r17.w, r17.w
// 2625  0x00013ECC:         mul r17.w, r17.w, r18.w
// 2626  0x00013EE8:         mad r18.w, r16.x, l(0.400000), l(-0.500000)
// 2627  0x00013F0C:         mad r18.w, r16.y, r18.w, l(0.700000)
// 2628  0x00013F30:         add r19.xyz, r13.xyzx, -r18.wwww
// 2629  0x00013F50:         mad r19.xyz, r17.wwww, r19.xyzx, r18.wwww
// 2630  0x00013F74:         movc r19.xyz, cb0[33].zzzz, r19.xyzx, r13.xyzx
// 2631  0x00013F9C:         add r17.w, r17.z, l(1.000000)
// 2632  0x00013FB8:         mad_sat r13.w, r13.w, r17.w, -r17.z
// 2633  0x00013FE0:         add r13.w, -r13.w, r16.x
// 2634  0x00014000:         mul_sat r13.w, r13.w, l(10.000000)
// 2635  0x0001401C:         mad r17.z, r13.w, l(-2.000000), l(3.000000)
// 2636  0x00014040:         mul r13.w, r13.w, r13.w
// 2637  0x0001405C:         mul r13.w, r13.w, r17.z
// 2638  0x00014078:         mul r17.x, r13.w, r17.x
// 2639  0x00014094:         mul r17.zw, r16.yyyy, l(0.000000, 0.000000, 0.300000, 2.857143)
// 2640  0x000140BC:         mad r21.xyz, r19.xyzx, r16.xxxx, -r19.xyzx
// 2641  0x000140E4:         mad r13.xyz, r17.zzzz, r21.xyzx, r19.xyzx
// 2642  0x00014108:         or r13.w, cb0[33].w, cb0[33].x
// 2643  0x0001412C:         min r17.z, r17.w, l(1.000000)
// 2644  0x00014148:         mad r17.w, r17.z, l(-2.000000), l(3.000000)
// 2645  0x0001416C:         mul r17.z, r17.z, r17.z
// 2646  0x00014188:         mul r17.z, r17.z, r17.w
// 2647  0x000141A4:         ge r16.x, r17.z, r16.x
// 2648  0x000141C0:         and r16.x, r16.x, l(0x3f800000)
// 2649  0x000141DC:         add r17.z, -r15.x, l(0.800000)
// 2650  0x000141FC:         mad r16.x, r16.x, r17.z, r15.x
// 2651  0x00014220:         movc r15.x, r13.w, r15.x, r16.x
// 2652  0x00014244:       else 
// 2653  0x00014248:         mov r16.y, cb0[29].w
// 2654  0x00014260:       endif 
// 2655  0x00014264:       add r17.zw, r16.zzzw, l(0.000000, 0.000000, -0.500000, -0.500000)
// 2656  0x0001428C:       add r19.xy, r14.xyxx, -r17.zwzz
// 2657  0x000142AC:       mad r14.xy, r17.xxxx, r19.xyxx, r17.zwzz
// 2658  0x000142D0:       if_nz r11.w
// 2659  0x000142DC:         mul_sat r11.w, r10.w, l(2.222222)
// 2660  0x000142F8:         rsq r13.w, r11.w
// 2661  0x0001430C:         div r13.w, l(1.000000, 1.000000, 1.000000, 1.000000), r13.w
// 2662  0x00014334:         add r16.x, -r16.w, r13.w
// 2663  0x00014354:         lt r17.z, r13.w, r16.w
// 2664  0x00014370:         if_nz r17.z
// 2665  0x0001437C:           log r17.z, |r16.x|
// 2666  0x00014394:           mul r17.z, r17.z, l(0.200000)
// 2667  0x000143B0:           exp r17.z, r17.z
// 2668  0x000143C4:           add r17.z, -r17.z, l(1.000000)
// 2669  0x000143E4:           mul r17.x, r17.z, r17.x
// 2670  0x00014400:           mov r13.xyz, l(0,0,0,0)
// 2671  0x00014420:         else 
// 2672  0x00014424:           mul_sat r10.w, r10.w, l(1.111111)
// 2673  0x00014440:           add r13.w, r13.w, r16.x
// 2674  0x0001445C:           mad r13.w, |r16.x|, l(0.300000), r13.w
// 2675  0x00014484:           log r17.z, r16.w
// 2676  0x00014498:           mul r17.z, r17.z, l(0.200000)
// 2677  0x000144B4:           exp r17.z, r17.z
// 2678  0x000144C8:           add r13.w, r13.w, l(-1.000000)
// 2679  0x000144E4:           mad r19.y, r17.z, r13.w, l(1.000000)
// 2680  0x00014508:           lt r13.w, r19.y, l(1.000000)
// 2681  0x00014524:           if_nz r13.w
// 2682  0x00014530:             mov r19.x, r16.z
// 2683  0x00014544:             mov_sat r19.xy, r19.xyxx
// 2684  0x00014558:             sample_b_indexable(texture2d)(float,float,float,float) r19.xyzw, r19.xyxx, t35.xyzw, s0, l(-1.000000)
// 2685  0x0001458C:             dp3 r13.w, r19.xyzx, l(0.299000, 0.587000, 0.114000, 0.000000)
// 2686  0x000145B4:             add r17.z, -r13.w, l(0.300000)
// 2687  0x000145D4:             mad r13.w, r17.z, l(0.800000), r13.w
// 2688  0x000145F8:             log r16.x, |r16.x|
// 2689  0x00014610:             mul r17.zw, r16.xxxx, l(0.000000, 0.000000, 0.200000, 0.100000)
// 2690  0x00014638:             exp r17.zw, r17.zzzw
// 2691  0x0001464C:             mul_sat r16.x, r19.w, l(12.750000)
// 2692  0x00014668:             add r18.w, -r17.w, l(1.000000)
// 2693  0x00014688:             mad r11.w, r11.w, r18.w, r17.w
// 2694  0x000146AC:             mul r19.xyz, r11.wwww, r13.xyzx
// 2695  0x000146C8:             mad r21.xyz, r13.wwww, r17.zzzz, -r19.xyzx
// 2696  0x000146F0:             mad r13.xyz, r16.xxxx, r21.xyzx, r19.xyzx
// 2697  0x00014714:             max r17.x, r16.x, r17.x
// 2698  0x00014730:             add r19.xyz, -r14.xyzx, l(0.000000, 0.000000, 1.000000, 0.000000)
// 2699  0x0001475C:             mad r14.xyz, r16.xxxx, r19.xyzx, r14.xyzx
// 2700  0x00014780:             mad r15.y, r16.x, -r15.y, r15.y
// 2701  0x000147A8:             add r13.w, -r15.x, l(0.800000)
// 2702  0x000147C8:             mad r15.x, r16.x, r13.w, r15.x
// 2703  0x000147EC:             add r13.w, -r17.y, l(1.000000)
// 2704  0x0001480C:             mad r17.y, r16.x, r13.w, r17.y
// 2705  0x00014830:             add r11.w, -r12.z, r11.w
// 2706  0x00014850:             mad r12.z, r16.x, r11.w, r12.z
// 2707  0x00014874:           else 
// 2708  0x00014878:             mov r14.w, r14.z
// 2709  0x0001488C:             mov r14.xyz, r14.xywx
// 2710  0x000148A0:           endif 
// 2711  0x000148A4:           ge r11.w, r10.w, l(0.500000)
// 2712  0x000148C0:           and r11.w, r11.w, l(0x3f800000)
// 2713  0x000148DC:           add r10.w, r10.w, l(-1.000000)
// 2714  0x000148F8:           mul r10.w, r10.w, l(-2.000000)
// 2715  0x00014914:           min r10.w, r10.w, l(1.000000)
// 2716  0x00014930:           mad r13.w, r10.w, l(-2.000000), l(3.000000)
// 2717  0x00014954:           mul r10.w, r10.w, r10.w
// 2718  0x00014970:           mul r10.w, r10.w, r13.w
// 2719  0x0001498C:           log r10.w, r10.w
// 2720  0x000149A0:           mul r10.w, r10.w, l(20.000000)
// 2721  0x000149BC:           exp r10.w, r10.w
// 2722  0x000149D0:           mul r10.w, r10.w, r11.w
// 2723  0x000149EC:           mul r19.xyz, r10.wwww, r13.xyzx
// 2724  0x00014A08:           mad r13.xyz, r19.xyzx, l(9.000000, 9.000000, 9.000000, 0.000000), r13.xyzx
// 2725  0x00014A38:         endif 
// 2726  0x00014A3C:       endif 
// 2727  0x00014A40:       if_z r9.w
// 2728  0x00014A4C:         mul r19.xyz, r15.wwww, r20.xyzx
// 2729  0x00014A68:         add r19.xyz, r19.xyzx, r19.xyzx
// 2730  0x00014A84:         movc r19.xyz, cb0[34].wwww, r19.xyzx, l(0,0,0,0)
// 2731  0x00014AB8:         add r9.w, -cb0[35].x, cb4[39].z
// 2732  0x00014AE0:         lt r10.w, r9.w, l(2.000000)
// 2733  0x00014AFC:         mad r9.w, -r9.w, l(0.500000), l(1.000000)
// 2734  0x00014B24:         mul r11.w, r9.w, r9.w
// 2735  0x00014B40:         mul r11.w, r11.w, r11.w
// 2736  0x00014B5C:         mad r20.xyz, r9.wwww, r11.wwww, r13.xyzx
// 2737  0x00014B80:         movc r13.xyz, r10.wwww, r20.xyzx, r13.xyzx
// 2738  0x00014BA4:         mul r15.z, r17.x, r17.y
// 2739  0x00014BC0:         add r17.yzw, r13.xxyz, r13.xxyz
// 2740  0x00014BDC:         movc r17.yzw, cb0[13].zzzz, r17.yyzw, r13.xxyz
// 2741  0x00014C04:         mul r16.xz, r16.zzwz, l(8.000000, 0.000000, 8.000000, 0.000000)
// 2742  0x00014C2C:         round_ni r16.xz, r16.xxzx
// 2743  0x00014C40:         add r9.w, r16.z, r16.x
// 2744  0x00014C5C:         mul r9.w, r9.w, l(0.500000)
// 2745  0x00014C78:         frc r9.w, r9.w
// 2746  0x00014C8C:         dp3 r10.w, r17.yzwy, l(0.212500, 0.715400, 0.072100, 0.000000)
// 2747  0x00014CB4:         mul_sat r10.w, r10.w, l(0.600000)
// 2748  0x00014CD0:         add r10.w, r10.w, l(0.200000)
// 2749  0x00014CEC:         mad r9.w, r9.w, l(0.200200), r10.w
// 2750  0x00014D10:         mul r9.w, r2.w, r9.w
// 2751  0x00014D2C:         mul r20.z, r15.z, l(0.900000)
// 2752  0x00014D48:         movc r16.xzw, cb0[13].xxxx, r9.wwww, r17.yyzw
// 2753  0x00014D70:         movc r17.yzw, cb0[13].xxxx, l(0,0,0,1.000000), r14.xxyz
// 2754  0x00014DA4:         mov r20.xy, l(0.800000,0,0,0)
// 2755  0x00014DC4:         movc r20.xyz, cb0[13].xxxx, r20.xyzx, r15.xyzx
// 2756  0x00014DEC:         movc r21.xyz, cb0[13].xxxx, l(0,0,0,0), r18.xyzx
// 2757  0x00014E20:         movc_sat r13.xyz, r8.wwww, r16.xzwx, r13.xyzx
// 2758  0x00014E44:         movc r14.xyz, r8.wwww, r17.yzwy, r14.xyzx
// 2759  0x00014E68:         movc r16.xzw, r8.wwww, r21.xxyz, r18.xxyz
// 2760  0x00014E8C:         movc r15.xyz, r8.wwww, r20.xyzx, r15.xyzx
// 2761  0x00014EB0:         add r13.xyz, -r5.xyzx, r13.xyzx
// 2762  0x00014ED0:         mad r5.xyz, r15.zzzz, r13.xyzx, r5.xyzx
// 2763  0x00014EF4:         add r13.xyz, -r7.xyzx, r14.xyzx
// 2764  0x00014F14:         mad r13.xyz, r15.zzzz, r13.xyzx, r7.xyzx
// 2765  0x00014F38:         dp3 r8.w, r13.xyzx, r13.xyzx
// 2766  0x00014F54:         rsq r8.w, r8.w
// 2767  0x00014F68:         mul r7.xyz, r8.wwww, r13.xyzx
// 2768  0x00014F84:         add r8.w, -r3.w, r15.y
// 2769  0x00014FA4:         mad r3.w, r15.z, r8.w, r3.w
// 2770  0x00014FC8:         add r13.xy, -r0.xyxx, r15.xxxx
// 2771  0x00014FE8:         mad r0.xy, r15.zzzz, r13.xyxx, r0.xyxx
// 2772  0x0001500C:         add r8.w, -r2.w, r12.z
// 2773  0x0001502C:         mad r2.w, r17.x, r8.w, r2.w
// 2774  0x00015050:         add r13.xyz, -r10.xyzx, r16.xzwx
// 2775  0x00015070:         mad r10.xyz, r15.zzzz, r13.xyzx, r10.xyzx
// 2776  0x00015094:         add r8.w, -r1.y, l(0.040000)
// 2777  0x000150B4:         mad r1.y, r15.z, r8.w, r1.y
// 2778  0x000150D8:         mad r6.x, r15.z, -r6.x, r6.x
// 2779  0x00015100:         add r13.xyz, -r12.xywx, r19.xyzx
// 2780  0x00015120:         mad r12.xyw, r15.zzzz, r13.xyxz, r12.xyxw
// 2781  0x00015144:         max r5.w, r5.w, r15.z
// 2782  0x00015160:         add r8.w, -r16.y, l(1.000000)
// 2783  0x00015180:         mul r8.w, r8.w, r15.z
// 2784  0x0001519C:         max r6.w, r6.w, r8.w
// 2785  0x000151B8:         movc r0.z, cb4[3].y, r15.z, r0.z
// 2786  0x000151E0:       else 
// 2787  0x000151E4:         mov r0.z, r7.w
// 2788  0x000151F8:       endif 
// 2789  0x000151FC:     else 
// 2790  0x00015200:       mov r0.z, r7.w
// 2791  0x00015214:     endif 
// 2792  0x00015218:   endif 
// 2793  0x0001521C:   or r7.w, cb0[0].y, cb0[35].y
// 2794  0x00015240:   if_nz r7.w
// 2795  0x0001524C:     movc r7.w, cb4[3].y, l(0), r0.z
// 2796  0x00015274:     eq r13.xy, cb0[36].xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
// 2797  0x000152A0:     or r8.w, r13.y, r13.x
// 2798  0x000152BC:     eq r9.w, r6.y, l(0.000000)
// 2799  0x000152D8:     or r8.w, r8.w, r9.w
// 2800  0x000152F4:     if_z r8.w
// 2801  0x00015300:       ieq r8.w, cb0[12].w, l(4)
// 2802  0x00015320:       add r13.xy, v3.wzww, l(-0.500000, -0.500000, 0.000000, 0.000000)
// 2803  0x00015348:       add r13.xy, r13.xyxx, -cb0[35].wzww
// 2804  0x0001536C:       mul r13.xy, r13.xyxx, |cb0[36].xxxx|
// 2805  0x00015390:       mul r9.w, cb0[36].z, l(6.283180)
// 2806  0x000153B0:       sincos r14.x, r15.x, r9.w
// 2807  0x000153CC:       mul r13.zw, r13.xxxy, r14.xxxx
// 2808  0x000153E8:       mad r16.x, r13.y, r15.x, -r13.z
// 2809  0x00015410:       mad r16.y, r13.x, r15.x, r13.w
// 2810  0x00015434:       add r13.xy, r16.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
// 2811  0x0001545C:       mov_sat r16.xyzw, r13.xyxy
// 2812  0x00015470:       ne r13.xy, r13.xyxx, r16.xyxx
// 2813  0x0001548C:       or r9.w, r13.y, r13.x
// 2814  0x000154A8:       ieq r10.w, cb0[13].x, l(0)
// 2815  0x000154C8:       and r10.w, r8.w, r10.w
// 2816  0x000154E4:       add r11.w, -cb0[13].y, cb4[39].z
// 2817  0x0001550C:       movc r10.w, r10.w, r11.w, l(0.900000)
// 2818  0x00015530:       lt r11.w, r10.w, l(0.900000)
// 2819  0x0001554C:       sample_b_indexable(texture2d)(float,float,float,float) r13.xyzw, r16.zwzz, t40.xyzw, s0, l(-1.000000)
// 2820  0x00015580:       mul_sat r12.z, r13.w, l(12.750000)
// 2821  0x0001559C:       mul r17.x, r6.y, r12.z
// 2822  0x000155B8:       resinfo_indexable(texture2d)(float,float,float,float) r14.yz, l(0), t40.zxyw
// 2823  0x000155DC:       div r14.yz, l(1.000000, 1.000000, 1.000000, 1.000000), r14.yyzy
// 2824  0x00015604:       add r15.yz, -r14.yyzy, l(0.000000, 1.000000, 1.000000, 0.000000)
// 2825  0x00015630:       max r14.yz, r14.yyzy, r16.zzwz
// 2826  0x0001564C:       min r14.yz, r15.yyzy, r14.yyzy
// 2827  0x00015668:       lod r14.y, r14.yzyy, t40.x, s0
// 2828  0x0001568C:       add_sat r14.z, r14.y, l(-3.000000)
// 2829  0x000156A8:       add r14.z, -r14.z, l(1.000000)
// 2830  0x000156C8:       lt r14.w, l(0.000000), r14.z
// 2831  0x000156E4:       if_nz r14.w
// 2832  0x000156F0:         add r15.yz, r16.zzwz, l(0.000000, -0.500000, -0.500000, 0.000000)
// 2833  0x00015718:         mul r18.xyz, cb1[20].zxyz, cb1[21].yzxy
// 2834  0x0001573C:         mad r18.xyz, cb1[20].yzxy, cb1[21].zxyz, -r18.xyzx
// 2835  0x0001576C:         dp3 r14.w, r18.xyzx, -r11.xyzx
// 2836  0x0001578C:         dp3 r15.w, cb1[21].xyzx, r11.xyzx
// 2837  0x000157AC:         mul r16.x, r14.x, r15.w
// 2838  0x000157C8:         mad r16.x, r14.w, r15.x, -r16.x
// 2839  0x000157F0:         mul r15.x, r15.x, r15.w
// 2840  0x0001580C:         mad r16.y, r14.w, r14.x, r15.x
// 2841  0x00015830:         mad r14.xw, -r16.xxxy, l(0.010000, 0.000000, 0.000000, 0.010000), r15.yyyz
// 2842  0x00015864:         add_sat r14.xw, r14.xxxw, l(0.500000, 0.000000, 0.000000, 0.500000)
// 2843  0x0001588C:         sample_b_indexable(texture2d)(float,float,float,float) r14.x, r14.xwxx, t40.wxyz, s0, l(1.000000)
// 2844  0x000158C0:         mul_sat r14.x, r14.x, l(12.750000)
// 2845  0x000158DC:         mul r14.x, r6.y, r14.x
// 2846  0x000158F8:         mul r14.x, r14.x, l(0.700000)
// 2847  0x00015914:         max r14.x, r14.x, r17.x
// 2848  0x00015930:         mad r12.z, -r12.z, r6.y, r14.x
// 2849  0x00015958:         mad r17.z, r14.z, r12.z, r17.x
// 2850  0x0001597C:         mov r17.xy, r17.zxzz
// 2851  0x00015990:       else 
// 2852  0x00015994:         mov r17.y, l(1.000000)
// 2853  0x000159A8:       endif 
// 2854  0x000159AC:       ge r12.z, l(0.000000), r17.x
// 2855  0x000159C8:       not r14.x, r11.w
// 2856  0x000159DC:       and r12.z, r12.z, r14.x
// 2857  0x000159F8:       or r9.w, r9.w, r12.z
// 2858  0x00015A14:       sample_b_indexable(texture2d)(float,float,float,float) r15.xyzw, r16.zwzz, t42.zxyw, s0, l(-1.000000)
// 2859  0x00015A48:       add r12.z, r15.z, r15.y
// 2860  0x00015A64:       add r18.x, r12.z, l(-1.003922)
// 2861  0x00015A80:       add r18.y, -r15.z, r15.y
// 2862  0x00015AA0:       add r12.z, -|r18.x|, l(1.000000)
// 2863  0x00015AC0:       add r18.z, -|r18.y|, r12.z
// 2864  0x00015AE0:       dp3 r12.z, r18.xyzx, r18.xyzx
// 2865  0x00015AFC:       rsq r12.z, r12.z
// 2866  0x00015B10:       mul r18.xyz, r12.zzzz, r18.xyzx
// 2867  0x00015B2C:       max r12.z, r14.y, l(3.000000)
// 2868  0x00015B48:       sample_l_indexable(texture2d)(float,float,float,float) r14.xy, r1.zwzz, t20.xyzw, s0, r12.z
// 2869  0x00015B7C:       add r14.z, r14.y, r14.x
// 2870  0x00015B98:       add r19.x, r14.z, l(-1.003922)
// 2871  0x00015BB4:       add r19.y, -r14.y, r14.x
// 2872  0x00015BD4:       add r14.x, -|r19.x|, l(1.000000)
// 2873  0x00015BF4:       add r19.z, -|r19.y|, r14.x
// 2874  0x00015C14:       dp3 r14.x, r19.xyzx, r19.xyzx
// 2875  0x00015C30:       rsq r14.x, r14.x
// 2876  0x00015C44:       mul r14.xyz, r14.xxxx, r19.xyzx
// 2877  0x00015C60:       mov r18.w, -r18.y
// 2878  0x00015C78:       mul r18.xyz, r17.xxxx, r18.xwzx
// 2879  0x00015C94:       mov r14.w, -r14.y
// 2880  0x00015CAC:       mad r14.xyz, r18.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r14.xwzx
// 2881  0x00015CDC:       dp3 r14.w, r14.xyzx, r14.xyzx
// 2882  0x00015CF8:       rsq r14.w, r14.w
// 2883  0x00015D0C:       mul r14.xyz, r14.wwww, r14.xyzx
// 2884  0x00015D28:       sample_l_indexable(texture2d)(float,float,float,float) r12.z, r1.zwzz, t21.yzxw, s0, r12.z
// 2885  0x00015D5C:       log r12.z, r12.z
// 2886  0x00015D70:       mul r12.z, r12.z, l(0.750000)
// 2887  0x00015D8C:       exp r12.z, r12.z
// 2888  0x00015DA0:       mad r16.x, r17.y, l(0.500000), l(0.500000)
// 2889  0x00015DC4:       min r12.z, r12.z, r16.x
// 2890  0x00015DE0:       movc r15.y, cb0[40].x, l(1.000000), l(0)
// 2891  0x00015E08:       if_nz cb0[41].x
// 2892  0x00015E18:         sample_b_indexable(texture2d)(float,float,float,float) r16.x, r16.zwzz, t44.wxyz, s0, l(-1.000000)
// 2893  0x00015E4C:         add r16.x, -r16.x, l(1.000000)
// 2894  0x00015E6C:         ne r16.y, l(0.000000, 0.000000, 0.000000, 0.000000), r16.x
// 2895  0x00015E94:         if_nz r16.y
// 2896  0x00015EA0:           movc r16.y, cb4[2].x, l(2.500000), l(1.750000)
// 2897  0x00015EC8:           mul r16.y, r16.y, cb0[41].z
// 2898  0x00015EE8:           add r18.xyz, -r4.yzwy, cb1[19].xyzx
// 2899  0x00015F0C:           dp3 r17.z, r18.xyzx, r18.xyzx
// 2900  0x00015F28:           rsq r17.z, r17.z
// 2901  0x00015F3C:           mul r18.xyz, r17.zzzz, r18.xyzx
// 2902  0x00015F58:           mul r17.zw, r16.yyyy, r16.zzzw
// 2903  0x00015F74:           add r19.xy, r16.zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
// 2904  0x00015F9C:           mul r19.xy, r16.yyyy, r19.xyxx
// 2905  0x00015FB8:           deriv_rtx_coarse r19.zw, r17.zzzw
// 2906  0x00015FCC:           deriv_rty_coarse r20.xy, r17.zwzz
// 2907  0x00015FE0:           max r19.zw, r19.zzzw, r20.xxxy
// 2908  0x00015FFC:           min r16.y, r19.w, r19.z
// 2909  0x00016018:           mad_sat r16.y, -r16.y, l(40.000000), l(1.000000)
// 2910  0x00016040:           sample_indexable(texture2d)(float,float,float,float) r20.xyz, r17.zwzz, t43.xywz, s9
// 2911  0x0001606C:           add r17.z, r20.y, r20.x
// 2912  0x00016088:           add r21.x, r17.z, l(-1.003922)
// 2913  0x000160A4:           add r21.y, -r20.y, r20.x
// 2914  0x000160C4:           add r17.z, -|r21.x|, l(1.000000)
// 2915  0x000160E4:           add r21.z, -|r21.y|, r17.z
// 2916  0x00016104:           dp3 r17.z, r21.xyzx, r21.xyzx
// 2917  0x00016120:           rsq r17.z, r17.z
// 2918  0x00016134:           mul r20.xyw, r17.zzzz, r21.xyxz
// 2919  0x00016150:           mul r20.xyw, r20.wwww, r20.xyxw
// 2920  0x0001616C:           mul r21.xyz, r9.xyzx, r20.yyyy
// 2921  0x00016188:           mad r21.xyz, r20.xxxx, v6.xyzx, r21.xyzx
// 2922  0x000161AC:           mad r21.xyz, r20.wwww, r3.xyzx, r21.xyzx
// 2923  0x000161D0:           dp3 r17.z, r21.xyzx, r21.xyzx
// 2924  0x000161EC:           rsq r17.z, r17.z
// 2925  0x00016200:           mul r21.xyz, r17.zzzz, r21.xyzx
// 2926  0x0001621C:           dp3 r17.z, r18.xyzx, r21.xyzx
// 2927  0x00016238:           add r17.z, r17.z, r17.z
// 2928  0x00016254:           mad r21.xyz, r21.xyzx, -r17.zzzz, r18.xyzx
// 2929  0x0001627C:           mul r21.xyz, r21.xyzx, l(12.000000, 12.000000, 12.000000, 0.000000)
// 2930  0x000162A4:           sincos r21.xyz, null, r21.xyzx
// 2931  0x000162BC:           max r22.xyz, -r21.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
// 2932  0x000162E8:           dp3 r17.z, r22.xyzx, l(0.212500, 0.715400, 0.072100, 0.000000)
// 2933  0x00016310:           mul r17.z, r17.z, r17.z
// 2934  0x0001632C:           add_sat r22.xyz, -r21.xyzx, l(0.150000, 0.150000, 0.150000, 0.000000)
// 2935  0x00016358:           dp3 r17.w, r22.xyzx, l(0.212500, 0.715400, 0.072100, 0.000000)
// 2936  0x00016380:           mul r17.w, r17.w, l(0.250000)
// 2937  0x0001639C:           mad r17.z, r17.z, r17.z, r17.w
// 2938  0x000163C0:           add r21.xyz, r21.xyzx, l(-0.990000, -0.990000, -0.990000, 0.000000)
// 2939  0x000163E8:           max r21.xyz, r21.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
// 2940  0x00016410:           mul r21.xyz, r21.xyzx, l(100.000099, 100.000099, 100.000099, 0.000000)
// 2941  0x00016438:           mul r22.xyz, r21.yzxy, r21.yzxy
// 2942  0x00016454:           mad r21.xyz, r22.xyzx, r22.xyzx, r21.xyzx
// 2943  0x00016478:           mad r21.xyz, r21.xyzx, l(3.000000, 3.000000, 3.000000, 0.000000), r17.zzzz
// 2944  0x000164A8:           mul r21.xyz, r20.zzzz, r21.xyzx
// 2945  0x000164C4:           mul r16.y, r16.x, r16.y
// 2946  0x000164E0:           mul r16.y, r16.y, l(0.040000)
// 2947  0x000164FC:           mad r17.zw, r20.xxxy, r16.yyyy, r14.xxxy
// 2948  0x00016520:           sample_l_indexable(texture2d)(float,float,float,float) r19.xyz, r19.xyxx, t43.xywz, s2, l(0.000000)
// 2949  0x00016554:           add r18.w, r19.y, r19.x
// 2950  0x00016570:           add r20.x, r18.w, l(-1.003922)
// 2951  0x0001658C:           add r20.y, -r19.y, r19.x
// 2952  0x000165AC:           add r18.w, -|r20.x|, l(1.000000)
// 2953  0x000165CC:           add r20.z, -|r20.y|, r18.w
// 2954  0x000165EC:           dp3 r18.w, r20.xyzx, r20.xyzx
// 2955  0x00016608:           rsq r18.w, r18.w
// 2956  0x0001661C:           mul r19.xyw, r18.wwww, r20.xyxz
// 2957  0x00016638:           mul r20.xyz, r9.xyzx, r19.yyyy
// 2958  0x00016654:           mad r20.xyz, r19.xxxx, v6.xyzx, r20.xyzx
// 2959  0x00016678:           mad r20.xyz, r19.wwww, r3.xyzx, r20.xyzx
// 2960  0x0001669C:           dp3 r18.w, r20.xyzx, r20.xyzx
// 2961  0x000166B8:           rsq r18.w, r18.w
// 2962  0x000166CC:           mul r20.xyz, r18.wwww, r20.xyzx
// 2963  0x000166E8:           dp3 r18.w, r18.xyzx, r20.xyzx
// 2964  0x00016704:           add r18.w, r18.w, r18.w
// 2965  0x00016720:           mad r18.xyz, r20.xyzx, -r18.wwww, r18.xyzx
// 2966  0x00016748:           mul r18.xyz, r18.xyzx, l(12.000000, 12.000000, 12.000000, 0.000000)
// 2967  0x00016770:           sincos r18.xyz, null, r18.xyzx
// 2968  0x00016788:           max r20.xyz, -r18.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
// 2969  0x000167B4:           dp3 r18.w, r20.xyzx, l(0.212500, 0.715400, 0.072100, 0.000000)
// 2970  0x000167DC:           mul r18.w, r18.w, r18.w
// 2971  0x000167F8:           add_sat r20.xyz, -r18.xyzx, l(0.150000, 0.150000, 0.150000, 0.000000)
// 2972  0x00016824:           dp3 r19.w, r20.xyzx, l(0.212500, 0.715400, 0.072100, 0.000000)
// 2973  0x0001684C:           mul r19.w, r19.w, l(0.250000)
// 2974  0x00016868:           mad r18.w, r18.w, r18.w, r19.w
// 2975  0x0001688C:           add r18.xyz, r18.xyzx, l(-0.990000, -0.990000, -0.990000, 0.000000)
// 2976  0x000168B4:           max r18.xyz, r18.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
// 2977  0x000168DC:           mul r18.xyz, r18.xyzx, l(100.000099, 100.000099, 100.000099, 0.000000)
// 2978  0x00016904:           mul r20.xyz, r18.yzxy, r18.yzxy
// 2979  0x00016920:           mad r18.xyz, r20.xyzx, r20.xyzx, r18.xyzx
// 2980  0x00016944:           mad r18.xyz, r18.xyzx, l(3.000000, 3.000000, 3.000000, 0.000000), r18.wwww
// 2981  0x00016974:           mul r18.xyz, r19.zzzz, r18.xyzx
// 2982  0x00016990:           max r18.xyz, r18.xyzx, r21.xyzx
// 2983  0x000169AC:           mov_sat r20.xyz, r13.xyzx
// 2984  0x000169C0:           dp3 r18.w, r20.xyzx, l(0.212500, 0.715400, 0.072100, 0.000000)
// 2985  0x000169E8:           max r19.w, r13.z, r13.y
// 2986  0x00016A04:           max r19.w, r13.x, r19.w
// 2987  0x00016A20:           log r19.w, r19.w
// 2988  0x00016A34:           mul r19.w, r19.w, cb0[9].y
// 2989  0x00016A54:           exp r19.w, r19.w
// 2990  0x00016A68:           min r19.w, r19.w, l(1.000000)
// 2991  0x00016A84:           add r20.x, -cb0[9].x, cb0[9].z
// 2992  0x00016AAC:           mad r19.w, r19.w, r20.x, cb0[9].x
// 2993  0x00016AD4:           max r20.xyz, r13.xyzx, l(0.000300, 0.000300, 0.000300, 0.000000)
// 2994  0x00016AFC:           dp3 r20.w, r20.xyzx, r20.xyzx
// 2995  0x00016B18:           rsq r20.w, r20.w
// 2996  0x00016B2C:           mul r20.xyz, r20.wwww, r20.xyzx
// 2997  0x00016B48:           mul r20.xyz, r20.xyzx, l(1.060000, 1.060000, 1.060000, 0.000000)
// 2998  0x00016B70:           mul r21.xyz, r19.wwww, r20.xyzx
// 2999  0x00016B8C:           mul r22.xyz, r20.xyzx, cb0[9].xxxx
// 3000  0x00016BAC:           mul r22.xyz, r22.xyzx, l(1.732000, 1.732000, 1.732000, 0.000000)
// 3001  0x00016BD4:           dp3 r19.w, r20.xyzx, r20.xyzx
// 3002  0x00016BF0:           sqrt r19.w, r19.w
// 3003  0x00016C04:           div r22.xyz, r22.xyzx, r19.wwww
// 3004  0x00016C20:           dp3 r19.w, r20.xyzx, l(0.212500, 0.715400, 0.072100, 0.000000)
// 3005  0x00016C48:           div r20.xyz, r22.xyzx, r19.wwww
// 3006  0x00016C64:           max r20.xyz, r21.xyzx, r20.xyzx
// 3007  0x00016C80:           add r19.w, cb0[9].x, l(-0.000300)
// 3008  0x00016CA0:           add r18.w, r18.w, l(-0.000300)
// 3009  0x00016CBC:           div r19.w, l(1.000000, 1.000000, 1.000000, 1.000000), r19.w
// 3010  0x00016CE4:           mul_sat r18.w, r18.w, r19.w
// 3011  0x00016D00:           mad r19.w, r18.w, l(-2.000000), l(3.000000)
// 3012  0x00016D24:           mul r18.w, r18.w, r18.w
// 3013  0x00016D40:           mul r18.w, r18.w, r19.w
// 3014  0x00016D5C:           rsq r18.w, r18.w
// 3015  0x00016D70:           div r18.w, l(1.000000, 1.000000, 1.000000, 1.000000), r18.w
// 3016  0x00016D98:           add r20.xyz, r20.xyzx, -cb0[9].xxxx
// 3017  0x00016DBC:           mad r20.xyz, r18.wwww, r20.xyzx, cb0[9].xxxx
// 3018  0x00016DE4:           movc r20.xyz, cb0[39].xxxx, r20.xyzx, r13.xyzx
// 3019  0x00016E0C:           mul r20.xyz, r20.xyzx, cb0[39].wwww
// 3020  0x00016E2C:           mul r18.xyz, r18.xyzx, r20.xyzx
// 3021  0x00016E48:           mul r19.xy, r16.yyyy, r19.xyxx
// 3022  0x00016E64:           mad r14.xy, r19.xyxx, r19.zzzz, r17.zwzz
// 3023  0x00016E88:           mul r16.y, r16.x, l(0.500000)
// 3024  0x00016EA4:           max r15.y, r15.y, r16.y
// 3025  0x00016EC0:           mul r18.xyz, r16.xxxx, r18.xyzx
// 3026  0x00016EDC:         else 
// 3027  0x00016EE0:           mov r18.xyz, r10.xyzx
// 3028  0x00016EF4:         endif 
// 3029  0x00016EF8:       else 
// 3030  0x00016EFC:         mov r18.xyz, r10.xyzx
// 3031  0x00016F10:       endif 
// 3032  0x00016F14:       if_nz cb0[39].x
// 3033  0x00016F24:         add r19.xyz, cb0[38].xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
// 3034  0x00016F50:         mad r19.xyz, r15.yyyy, r19.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
// 3035  0x00016F80:         mul r16.x, r15.y, cb0[38].w
// 3036  0x00016FA0:         if_nz cb0[39].y
// 3037  0x00016FB0:           dp3 r16.y, r13.xyzx, l(0.212500, 0.715400, 0.072100, 0.000000)
// 3038  0x00016FD8:           add r20.xyz, -r13.xyzx, r16.yyyy
// 3039  0x00016FF8:           mad r20.xyz, r16.xxxx, r20.xyzx, r13.xyzx
// 3040  0x0001701C:           mul_sat r20.xyz, r19.xyzx, r20.xyzx
// 3041  0x00017038:           max r21.xyz, r20.xyzx, l(0.000300, 0.000300, 0.000300, 0.000000)
// 3042  0x00017060:           dp3 r16.y, r21.xyzx, r21.xyzx
// 3043  0x0001707C:           rsq r16.y, r16.y
// 3044  0x00017090:           mul r21.xyz, r16.yyyy, r21.xyzx
// 3045  0x000170AC:           mul r21.xyz, r21.xyzx, l(1.060000, 1.060000, 1.060000, 0.000000)
// 3046  0x000170D4:           max r16.y, r20.z, r20.y
// 3047  0x000170F0:           max r16.y, r16.y, r20.x
// 3048  0x0001710C:           mul r16.y, r16.y, cb0[39].z
// 3049  0x0001712C:           mul_sat r20.xyz, r20.xyzx, cb0[39].zzzz
// 3050  0x0001714C:           dp3 r17.z, r20.xyzx, l(0.212500, 0.715400, 0.072100, 0.000000)
// 3051  0x00017174:           add r20.xy, r17.zzzz, l(-0.550000, -0.000300, 0.000000, 0.000000)
// 3052  0x0001719C:           mul_sat r17.w, r20.x, l(-1.871258)
// 3053  0x000171B8:           mad r18.w, r17.w, l(-2.000000), l(3.000000)
// 3054  0x000171DC:           mul r17.w, r17.w, r17.w
// 3055  0x000171F8:           mul r17.w, r17.w, r18.w
// 3056  0x00017214:           add r20.xzw, cb0[10].xxyz, -cb0[11].xxyz
// 3057  0x0001723C:           mad r20.xzw, r17.wwww, r20.xxzw, cb0[11].xxyz
// 3058  0x00017264:           add r20.xzw, r20.xxzw, -cb0[9].xxyz
// 3059  0x00017288:           mad r20.xzw, r15.yyyy, r20.xxzw, cb0[9].xxyz
// 3060  0x000172B0:           add r17.w, -cb0[9].x, cb0[10].x
// 3061  0x000172D8:           mad r17.w, r15.y, r17.w, cb0[9].x
// 3062  0x00017300:           log r16.y, r16.y
// 3063  0x00017314:           mul r16.y, r16.y, r20.z
// 3064  0x00017330:           exp r16.y, r16.y
// 3065  0x00017344:           min r16.y, r16.y, l(1.000000)
// 3066  0x00017360:           add r18.w, -r20.x, r20.w
// 3067  0x00017380:           mad r16.y, r16.y, r18.w, r20.x
// 3068  0x000173A4:           mul r22.xyz, r21.xyzx, r16.yyyy
// 3069  0x000173C0:           mul r23.xyz, r17.wwww, r21.xyzx
// 3070  0x000173DC:           mul r23.xyz, r23.xyzx, l(1.732000, 1.732000, 1.732000, 0.000000)
// 3071  0x00017404:           dp3 r16.y, r21.xyzx, r21.xyzx
// 3072  0x00017420:           sqrt r16.y, r16.y
// 3073  0x00017434:           div r23.xyz, r23.xyzx, r16.yyyy
// 3074  0x00017450:           dp3 r16.y, r21.xyzx, l(0.212500, 0.715400, 0.072100, 0.000000)
// 3075  0x00017478:           div r21.xyz, r23.xyzx, r16.yyyy
// 3076  0x00017494:           max r21.xyz, r22.xyzx, r21.xyzx
// 3077  0x000174B0:           add r22.xyz, r17.zzzz, r21.xyzx
// 3078  0x000174CC:           min r20.xzw, r20.wwww, r22.xxyz
// 3079  0x000174E8:           add r16.y, cb0[39].z, l(-1.000000)
// 3080  0x00017508:           max r16.y, r16.y, l(0.000000)
// 3081  0x00017524:           mul r16.y, r16.y, l(0.015873)
// 3082  0x00017540:           add r20.xzw, -r21.xxyz, r20.xxzw
// 3083  0x00017560:           mad r20.xzw, r16.yyyy, r20.xxzw, r21.xxyz
// 3084  0x00017584:           add r16.y, r17.w, l(-0.000300)
// 3085  0x000175A0:           div r16.y, l(1.000000, 1.000000, 1.000000, 1.000000), r16.y
// 3086  0x000175C8:           mul_sat r16.y, r16.y, r20.y
// 3087  0x000175E4:           mad r17.z, r16.y, l(-2.000000), l(3.000000)
// 3088  0x00017608:           mul r16.y, r16.y, r16.y
// 3089  0x00017624:           mul r16.y, r16.y, r17.z
// 3090  0x00017640:           rsq r16.y, r16.y
// 3091  0x00017654:           div r16.y, l(1.000000, 1.000000, 1.000000, 1.000000), r16.y
// 3092  0x0001767C:           add r20.xyz, -r17.wwww, r20.xzwx
// 3093  0x0001769C:           mad r20.xyz, r16.yyyy, r20.xyzx, r17.wwww
// 3094  0x000176C0:         else 
// 3095  0x000176C4:           mul r21.xyz, r13.xyzx, r19.xyzx
// 3096  0x000176E0:           mad r19.xyz, -r19.xyzx, r13.xyzx, r19.xyzx
// 3097  0x00017708:           mad r19.xyz, r16.xxxx, r19.xyzx, r21.xyzx
// 3098  0x0001772C:           max r19.xyz, r19.xyzx, l(0.000300, 0.000300, 0.000300, 0.000000)
// 3099  0x00017754:           dp3 r16.x, r19.xyzx, r19.xyzx
// 3100  0x00017770:           rsq r16.x, r16.x
// 3101  0x00017784:           mul r19.xyz, r16.xxxx, r19.xyzx
// 3102  0x000177A0:           mul r19.xyz, r19.xyzx, l(1.060000, 1.060000, 1.060000, 0.000000)
// 3103  0x000177C8:           max r16.x, r13.z, r13.y
// 3104  0x000177E4:           max r16.x, r13.x, r16.x
// 3105  0x00017800:           mul r16.x, r16.x, cb0[39].z
// 3106  0x00017820:           mul_sat r21.xyz, r13.xyzx, cb0[39].zzzz
// 3107  0x00017840:           dp3 r16.y, r21.xyzx, l(0.212500, 0.715400, 0.072100, 0.000000)
// 3108  0x00017868:           add r17.zw, r16.yyyy, l(0.000000, 0.000000, -0.550000, -0.000300)
// 3109  0x00017890:           mul_sat r17.z, r17.z, l(-1.871258)
// 3110  0x000178AC:           mad r18.w, r17.z, l(-2.000000), l(3.000000)
// 3111  0x000178D0:           mul r17.z, r17.z, r17.z
// 3112  0x000178EC:           mul r17.z, r17.z, r18.w
// 3113  0x00017908:           add r21.xyz, cb0[10].xyzx, -cb0[11].xyzx
// 3114  0x00017930:           mad r21.xyz, r17.zzzz, r21.xyzx, cb0[11].xyzx
// 3115  0x00017958:           add r21.xyz, r21.xyzx, -cb0[9].xyzx
// 3116  0x0001797C:           mad r21.xyz, r15.yyyy, r21.xyzx, cb0[9].xyzx
// 3117  0x000179A4:           add r17.z, -cb0[9].x, cb0[10].x
// 3118  0x000179CC:           mad r17.z, r15.y, r17.z, cb0[9].x
// 3119  0x000179F4:           log r16.x, r16.x
// 3120  0x00017A08:           mul r16.x, r16.x, r21.y
// 3121  0x00017A24:           exp r16.x, r16.x
// 3122  0x00017A38:           min r16.x, r16.x, l(1.000000)
// 3123  0x00017A54:           add r18.w, -r21.x, r21.z
// 3124  0x00017A74:           mad r16.x, r16.x, r18.w, r21.x
// 3125  0x00017A98:           mul r21.xyw, r19.xyxz, r16.xxxx
// 3126  0x00017AB4:           mul r22.xyz, r17.zzzz, r19.xyzx
// 3127  0x00017AD0:           mul r22.xyz, r22.xyzx, l(1.732000, 1.732000, 1.732000, 0.000000)
// 3128  0x00017AF8:           dp3 r16.x, r19.xyzx, r19.xyzx
// 3129  0x00017B14:           sqrt r16.x, r16.x
// 3130  0x00017B28:           div r22.xyz, r22.xyzx, r16.xxxx
// 3131  0x00017B44:           dp3 r16.x, r19.xyzx, l(0.212500, 0.715400, 0.072100, 0.000000)
// 3132  0x00017B6C:           div r19.xyz, r22.xyzx, r16.xxxx
// 3133  0x00017B88:           max r19.xyz, r21.xywx, r19.xyzx
// 3134  0x00017BA4:           add r21.xyw, r16.yyyy, r19.xyxz
// 3135  0x00017BC0:           min r21.xyz, r21.xywx, r21.zzzz
// 3136  0x00017BDC:           add r16.x, cb0[39].z, l(-1.000000)
// 3137  0x00017BFC:           max r16.x, r16.x, l(0.000000)
// 3138  0x00017C18:           mul r16.x, r16.x, l(0.015873)
// 3139  0x00017C34:           add r21.xyz, -r19.xyzx, r21.xyzx
// 3140  0x00017C54:           mad r19.xyz, r16.xxxx, r21.xyzx, r19.xyzx
// 3141  0x00017C78:           add r16.x, r17.z, l(-0.000300)
// 3142  0x00017C94:           div r16.x, l(1.000000, 1.000000, 1.000000, 1.000000), r16.x
// 3143  0x00017CBC:           mul_sat r16.x, r16.x, r17.w
// 3144  0x00017CD8:           mad r16.y, r16.x, l(-2.000000), l(3.000000)
// 3145  0x00017CFC:           mul r16.x, r16.x, r16.x
// 3146  0x00017D18:           mul r16.x, r16.x, r16.y
// 3147  0x00017D34:           rsq r16.x, r16.x
// 3148  0x00017D48:           div r16.x, l(1.000000, 1.000000, 1.000000, 1.000000), r16.x
// 3149  0x00017D70:           add r19.xyz, -r17.zzzz, r19.xyzx
// 3150  0x00017D90:           mad r20.xyz, r16.xxxx, r19.xyzx, r17.zzzz
// 3151  0x00017DB4:         endif 
// 3152  0x00017DB8:       else 
// 3153  0x00017DBC:         dp3 r16.x, r13.xyzx, l(0.212500, 0.715400, 0.072100, 0.000000)
// 3154  0x00017DE4:         add r19.xyz, -r13.xyzx, r16.xxxx
// 3155  0x00017E04:         mad r19.xyz, cb0[38].wwww, r19.xyzx, r13.xyzx
// 3156  0x00017E2C:         mul r19.xyz, r19.xyzx, cb0[38].xyzx
// 3157  0x00017E4C:         movc r16.x, cb0[39].y, cb0[39].z, l(1.000000)
// 3158  0x00017E78:         mul r19.xyz, r16.xxxx, r19.xyzx
// 3159  0x00017E94:         movc r20.xyz, cb0[40].xxxx, r19.xyzx, r13.xyzx
// 3160  0x00017EBC:       endif 
// 3161  0x00017EC0:       if_nz cb0[40].y
// 3162  0x00017ED0:         sample_b_indexable(texture2d)(float,float,float,float) r19.xyzw, r16.zwzz, t44.xyzw, s9, l(-1.000000)
// 3163  0x00017F04:         sample_b_indexable(texture2d)(float,float,float,float) r13.xyz, r16.zwzz, t44.xyzw, s0, l(-1.000000)
// 3164  0x00017F38:         add r13.xyz, -r19.xyzx, r13.xyzx
// 3165  0x00017F58:         mad r21.yzw, r19.wwww, r13.xxyz, r19.xxyz
// 3166  0x00017F7C:         lt r13.x, l(0.000000), r21.y
// 3167  0x00017F98:         if_nz r13.x
// 3168  0x00017FA4:           add r13.xyz, -r4.yzwy, cb1[19].xyzx
// 3169  0x00017FC8:           dp3 r16.x, r13.xyzx, r13.xyzx
// 3170  0x00017FE4:           rsq r16.x, r16.x
// 3171  0x00017FF8:           mul r13.xyz, r13.xyzx, r16.xxxx
// 3172  0x00018014:           dp3 r16.x, r13.xyzx, r3.xyzx
// 3173  0x00018030:           ne r16.y, l(0.000000), cb4[36].y
// 3174  0x00018050:           add r19.xyz, r4.yzwy, cb1[33].xyzx
// 3175  0x00018070:           mad r22.xyz, -cb1[20].xyzx, cb4[36].yyyy, r19.xyzx
// 3176  0x000180A0:           add r19.xyz, cb1[19].xyzx, cb1[33].xyzx
// 3177  0x000180C4:           mad r19.xyz, cb1[22].wwww, cb1[20].xyzx, r19.xyzx
// 3178  0x000180F0:           dp3 r23.w, r19.xyzx, cb1[20].xyzx
// 3179  0x00018110:           mov r22.w, l(1.000000)
// 3180  0x00018124:           mov r23.xyz, cb1[20].xyzx
// 3181  0x0001813C:           dp4 r17.z, r22.xyzw, r23.xyzw
// 3182  0x00018158:           ge r17.w, l(0.000000), r17.z
// 3183  0x00018174:           mad r19.xyz, r17.zzzz, -cb1[20].xyzx, r4.yzwy
// 3184  0x000181A0:           movc r19.xyz, r17.wwww, r4.yzwy, r19.xyzx
// 3185  0x000181C4:           mul r22.xyz, r19.yyyy, cb4[13].xywx
// 3186  0x000181E4:           mad r22.xyz, cb4[12].xywx, r19.xxxx, r22.xyzx
// 3187  0x0001820C:           mad r22.xyz, cb4[14].xywx, r19.zzzz, r22.xyzx
// 3188  0x00018234:           add r22.xyz, r22.xyzx, cb4[15].xywx
// 3189  0x00018254:           div r17.zw, r22.xxxy, r22.zzzz
// 3190  0x00018270:           add r17.z, r17.z, l(1.000000)
// 3191  0x0001828C:           mul r17.z, r17.z, cb1[26].z
// 3192  0x000182AC:           mul r17.z, r17.z, l(0.500000)
// 3193  0x000182C8:           add r23.xy, l(-1.000000, -1.000000, 0.000000, 0.000000), cb1[26].zwzz
// 3194  0x000182F4:           max r17.z, r17.z, l(0.000000)
// 3195  0x00018310:           min r22.x, r23.x, r17.z
// 3196  0x0001832C:           add r17.z, -r17.w, l(1.000000)
// 3197  0x0001834C:           mul r17.z, r17.z, cb1[26].w
// 3198  0x0001836C:           mul r17.z, r17.z, l(0.500000)
// 3199  0x00018388:           max r17.z, r17.z, l(0.000000)
// 3200  0x000183A4:           min r22.y, r23.y, r17.z
// 3201  0x000183C0:           movc r23.xyz, r16.yyyy, r19.xyzx, r4.yzwy
// 3202  0x000183E4:           movc r19.xyz, r16.yyyy, r22.xyzx, v8.xywx
// 3203  0x00018408:           add r17.zw, r19.xxxy, -cb1[26].xxxy
// 3204  0x0001842C:           ftou r17.zw, r17.zzzw
// 3205  0x00018440:           ushr r17.zw, r17.zzzw, cb3[25].xxxx
// 3206  0x00018460:           imad r16.y, r17.w, cb3[25].y, r17.z
// 3207  0x00018488:           imad r16.y, r16.y, cb3[24].z, cb3[24].y
// 3208  0x000184B4:           mul r17.z, r19.z, cb3[26].x
// 3209  0x000184D4:           max r17.z, r17.z, l(0.000000)
// 3210  0x000184F0:           min r17.z, r17.z, cb3[26].y
// 3211  0x00018510:           ftou r17.z, r17.z
// 3212  0x00018524:           imad r17.z, r17.z, cb3[24].z, cb3[24].x
// 3213  0x00018550:           mov r23.w, l(1.000000)
// 3214  0x00018564:           mov r19.xyz, l(0,0,0,0)
// 3215  0x00018584:           mov r22.xyz, l(0,0,0,0)
// 3216  0x000185A4:           mov r24.xyz, l(0,0,0,0)
// 3217  0x000185C4:           mov r25.xyz, l(0,0,0,0)
// 3218  0x000185E4:           mov r26.xyz, l(0,0,0,0)
// 3219  0x00018604:           mov r27.xyz, l(0,0,0,0)
// 3220  0x00018624:           mov r17.w, l(0)
// 3221  0x00018638:           mov r18.w, l(0)
// 3222  0x0001864C:           mov r20.w, l(0)
// 3223  0x00018660:           loop 
// 3224  0x00018664:             ult r22.w, r20.w, cb3[24].z
// 3225  0x00018684:             not r24.w, r18.w
// 3226  0x00018698:             and r22.w, r22.w, r24.w
// 3227  0x000186B4:             breakc_z r22.w
// 3228  0x000186C0:             iadd r22.w, r16.y, r20.w
// 3229  0x000186DC:             ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r22.w, r22.w, l(0), t13.xxxx
// 3230  0x00018708:             iadd r24.w, r17.z, r20.w
// 3231  0x00018724:             ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r24.w, r24.w, l(0), t13.xxxx
// 3232  0x00018750:             and r22.w, r22.w, r24.w
// 3233  0x0001876C:             ishl r24.w, r20.w, l(5)
// 3234  0x00018788:             mov r28.xyz, r19.xyzx
// 3235  0x0001879C:             mov r29.xyz, r22.xyzx
// 3236  0x000187B0:             mov r30.xyz, r24.xyzx
// 3237  0x000187C4:             mov r31.xyz, r25.xyzx
// 3238  0x000187D8:             mov r32.xyz, r26.xyzx
// 3239  0x000187EC:             mov r33.xyz, r27.xyzx
// 3240  0x00018800:             mov r25.w, r17.w
// 3241  0x00018814:             mov r26.w, r18.w
// 3242  0x00018828:             mov r27.w, r22.w
// 3243  0x0001883C:             loop 
// 3244  0x00018840:               breakc_z r27.w
// 3245  0x0001884C:               firstbit_lo r28.w, r27.w
// 3246  0x00018860:               iadd r28.w, r24.w, r28.w
// 3247  0x0001887C:               iadd r29.w, r27.w, l(-1)
// 3248  0x00018898:               and r29.w, r27.w, r29.w
// 3249  0x000188B4:               imul null, r28.w, r28.w, l(6)
// 3250  0x000188D4:               dp4 r34.x, r23.xyzw, cb3[r28.w + 1180].xyzw
// 3251  0x000188FC:               dp4 r34.y, r23.xyzw, cb3[r28.w + 1181].xyzw
// 3252  0x00018924:               dp4 r34.z, r23.xyzw, cb3[r28.w + 1182].xyzw
// 3253  0x0001894C:               add r35.xyz, r34.xyzx, -cb3[r28.w + 1183].xyzx
// 3254  0x00018978:               mul_sat r35.xyz, r35.xyzx, cb3[r28.w + 1185].xyzx
// 3255  0x000189A0:               add r34.xyz, -r34.xyzx, cb3[r28.w + 1184].xyzx
// 3256  0x000189CC:               mul_sat r34.xyz, r34.xyzx, cb3[r28.w + 1185].xyzx
// 3257  0x000189F4:               min r30.w, r35.z, r35.y
// 3258  0x00018A10:               min r30.w, r30.w, r35.x
// 3259  0x00018A2C:               min r31.w, r34.z, r34.y
// 3260  0x00018A48:               min r31.w, r31.w, r34.x
// 3261  0x00018A64:               min r30.w, r30.w, r31.w
// 3262  0x00018A80:               eq r31.w, r30.w, l(0.000000)
// 3263  0x00018A9C:               if_nz r31.w
// 3264  0x00018AA8:                 mov r27.w, r29.w
// 3265  0x00018ABC:                 continue 
// 3266  0x00018AC0:               endif 
// 3267  0x00018AC4:               mul r31.w, r30.w, r30.w
// 3268  0x00018AE0:               mad r30.w, r30.w, l(-2.000000), l(3.000000)
// 3269  0x00018B04:               mul r30.w, r30.w, r31.w
// 3270  0x00018B20:               add r31.w, -r25.w, l(1.000000)
// 3271  0x00018B40:               mul r32.w, r30.w, r31.w
// 3272  0x00018B5C:               mad r30.w, r30.w, r31.w, r25.w
// 3273  0x00018B80:               imul null, r28.w, l(9), cb3[r28.w + 1185].w
// 3274  0x00018BAC:               dp4 r34.x, r23.xyzw, cb2[r28.w + 0].xyzw
// 3275  0x00018BD0:               dp4 r34.y, r23.xyzw, cb2[r28.w + 1].xyzw
// 3276  0x00018BF8:               dp4 r31.w, r23.xyzw, cb2[r28.w + 2].xyzw
// 3277  0x00018C20:               mul r34.z, r31.w, l(0.166667)
// 3278  0x00018C3C:               max r34.xyz, r34.xyzx, cb2[r28.w + 3].xyzx
// 3279  0x00018C64:               min r34.xyz, r34.xyzx, cb2[r28.w + 4].xyzx
// 3280  0x00018C8C:               mul r34.w, r34.z, l(6.000000)
// 3281  0x00018CA8:               mad r34.xyz, r34.xywx, cb2[r28.w + 6].xyzx, cb2[r28.w + 7].xyzx
// 3282  0x00018CE4:               mul r34.w, r34.z, l(0.166667)
// 3283  0x00018D00:               sample_l_indexable(texture3d)(float,float,float,float) r35.xyz, r34.xywx, t16.xyzw, s1, l(0.000000)
// 3284  0x00018D34:               mul r35.xyz, r35.xyzx, cb2[r28.w + 5].xyzx
// 3285  0x00018D5C:               add r36.xyz, r34.xywx, l(0.000000, 0.000000, 0.166667, 0.000000)
// 3286  0x00018D84:               sample_l_indexable(texture3d)(float,float,float,float) r36.xyz, r36.xyzx, t16.xyzw, s1, l(0.000000)
// 3287  0x00018DB8:               mul r36.xyz, r36.xyzx, cb2[r28.w + 5].xyzx
// 3288  0x00018DE0:               add r37.xyz, r34.xywx, l(0.000000, 0.000000, 0.333333, 0.000000)
// 3289  0x00018E08:               sample_l_indexable(texture3d)(float,float,float,float) r37.xyz, r37.xyzx, t16.xyzw, s1, l(0.000000)
// 3290  0x00018E3C:               mul r37.xyz, r37.xyzx, cb2[r28.w + 5].xyzx
// 3291  0x00018E64:               add r38.xyz, r34.xywx, l(0.000000, 0.000000, 0.500000, 0.000000)
// 3292  0x00018E8C:               sample_l_indexable(texture3d)(float,float,float,float) r38.xyz, r38.xyzx, t16.xyzw, s1, l(0.000000)
// 3293  0x00018EC0:               mul r38.xyz, r38.xyzx, cb2[r28.w + 5].xyzx
// 3294  0x00018EE8:               add r39.xyz, r34.xywx, l(0.000000, 0.000000, 0.666667, 0.000000)
// 3295  0x00018F10:               sample_l_indexable(texture3d)(float,float,float,float) r39.xyz, r39.xyzx, t16.xyzw, s1, l(0.000000)
// 3296  0x00018F44:               mul r39.xyz, r39.xyzx, cb2[r28.w + 5].xyzx
// 3297  0x00018F6C:               add r34.xyz, r34.xywx, l(0.000000, 0.000000, 0.833333, 0.000000)
// 3298  0x00018F94:               sample_l_indexable(texture3d)(float,float,float,float) r34.xyz, r34.xyzx, t16.xyzw, s1, l(0.000000)
// 3299  0x00018FC8:               mul r34.xyz, r34.xyzx, cb2[r28.w + 5].xyzx
// 3300  0x00018FF0:               mad r35.xyz, r32.wwww, r35.xyzx, r28.xyzx
// 3301  0x00019014:               mad r36.xyz, r32.wwww, r36.xyzx, r29.xyzx
// 3302  0x00019038:               mad r37.xyz, r32.wwww, r37.xyzx, r30.xyzx
// 3303  0x0001905C:               mad r38.xyz, r32.wwww, r38.xyzx, r31.xyzx
// 3304  0x00019080:               mad r39.xyz, r32.wwww, r39.xyzx, r32.xyzx
// 3305  0x000190A4:               mad r34.xyz, r32.wwww, r34.xyzx, r33.xyzx
// 3306  0x000190C8:               lt r28.w, l(0.990000), r30.w
// 3307  0x000190E4:               if_nz r28.w
// 3308  0x000190F0:                 mov r28.xyz, r35.xyzx
// 3309  0x00019104:                 mov r29.xyz, r36.xyzx
// 3310  0x00019118:                 mov r30.xyz, r37.xyzx
// 3311  0x0001912C:                 mov r31.xyz, r38.xyzx
// 3312  0x00019140:                 mov r32.xyz, r39.xyzx
// 3313  0x00019154:                 mov r33.xyz, r34.xyzx
// 3314  0x00019168:                 mov r25.w, r30.w
// 3315  0x0001917C:                 mov r26.w, l(-1)
// 3316  0x00019190:                 break 
// 3317  0x00019194:               endif 
// 3318  0x00019198:               mov r28.xyz, r35.xyzx
// 3319  0x000191AC:               mov r29.xyz, r36.xyzx
// 3320  0x000191C0:               mov r30.xyz, r37.xyzx
// 3321  0x000191D4:               mov r31.xyz, r38.xyzx
// 3322  0x000191E8:               mov r32.xyz, r39.xyzx
// 3323  0x000191FC:               mov r33.xyz, r34.xyzx
// 3324  0x00019210:               mov r25.w, r30.w
// 3325  0x00019224:               mov r27.w, r29.w
// 3326  0x00019238:             endloop 
// 3327  0x0001923C:             mov r19.xyz, r28.xyzx
// 3328  0x00019250:             mov r22.xyz, r29.xyzx
// 3329  0x00019264:             mov r24.xyz, r30.xyzx
// 3330  0x00019278:             mov r25.xyz, r31.xyzx
// 3331  0x0001928C:             mov r26.xyz, r32.xyzx
// 3332  0x000192A0:             mov r27.xyz, r33.xyzx
// 3333  0x000192B4:             mov r17.w, r25.w
// 3334  0x000192C8:             mov r18.w, r26.w
// 3335  0x000192DC:             iadd r20.w, r20.w, l(1)
// 3336  0x000192F8:           endloop 
// 3337  0x000192FC:           lt r16.y, r17.w, l(0.990000)
// 3338  0x00019318:           if_nz r16.y
// 3339  0x00019324:             add r16.y, -r17.w, l(1.000000)
// 3340  0x00019344:             dp2 r23.x, cb3[7].xwxx, l(1.000000, 1.000000, 0.000000, 0.000000)
// 3341  0x00019370:             dp2 r23.y, cb3[8].xwxx, l(1.000000, 1.000000, 0.000000, 0.000000)
// 3342  0x0001939C:             dp2 r23.z, cb3[9].xwxx, l(1.000000, 1.000000, 0.000000, 0.000000)
// 3343  0x000193C8:             mad r19.xyz, r16.yyyy, r23.xyzx, r19.xyzx
// 3344  0x000193EC:             dp2 r23.x, cb3[7].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
// 3345  0x00019418:             dp2 r23.y, cb3[8].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
// 3346  0x00019444:             dp2 r23.z, cb3[9].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
// 3347  0x00019470:             mad r22.xyz, r16.yyyy, r23.xyzx, r22.xyzx
// 3348  0x00019494:             dp2 r23.x, cb3[7].zwzz, l(1.000000, 1.000000, 0.000000, 0.000000)
// 3349  0x000194C0:             dp2 r23.y, cb3[8].zwzz, l(1.000000, 1.000000, 0.000000, 0.000000)
// 3350  0x000194EC:             dp2 r23.z, cb3[9].zwzz, l(1.000000, 1.000000, 0.000000, 0.000000)
// 3351  0x00019518:             mad r24.xyz, r16.yyyy, r23.xyzx, r24.xyzx
// 3352  0x0001953C:             dp2 r23.x, cb3[7].xwxx, l(-1.000000, 1.000000, 0.000000, 0.000000)
// 3353  0x00019568:             dp2 r23.y, cb3[8].xwxx, l(-1.000000, 1.000000, 0.000000, 0.000000)
// 3354  0x00019594:             dp2 r23.z, cb3[9].xwxx, l(-1.000000, 1.000000, 0.000000, 0.000000)
// 3355  0x000195C0:             mad r25.xyz, r16.yyyy, r23.xyzx, r25.xyzx
// 3356  0x000195E4:             dp2 r23.x, cb3[7].ywyy, l(-1.000000, 1.000000, 0.000000, 0.000000)
// 3357  0x00019610:             dp2 r23.y, cb3[8].ywyy, l(-1.000000, 1.000000, 0.000000, 0.000000)
// 3358  0x0001963C:             dp2 r23.z, cb3[9].ywyy, l(-1.000000, 1.000000, 0.000000, 0.000000)
// 3359  0x00019668:             mad r26.xyz, r16.yyyy, r23.xyzx, r26.xyzx
// 3360  0x0001968C:             dp2 r23.x, cb3[7].zwzz, l(-1.000000, 1.000000, 0.000000, 0.000000)
// 3361  0x000196B8:             dp2 r23.y, cb3[8].zwzz, l(-1.000000, 1.000000, 0.000000, 0.000000)
// 3362  0x000196E4:             dp2 r23.z, cb3[9].zwzz, l(-1.000000, 1.000000, 0.000000, 0.000000)
// 3363  0x00019710:             mad r27.xyz, r16.yyyy, r23.xyzx, r27.xyzx
// 3364  0x00019734:           endif 
// 3365  0x00019738:           mul r23.xyz, r9.xyzx, r14.yyyy
// 3366  0x00019754:           mad r23.xyz, r14.xxxx, v6.xyzx, r23.xyzx
// 3367  0x00019778:           mad r23.xyz, r14.zzzz, r3.xyzx, r23.xyzx
// 3368  0x0001979C:           dp3 r16.y, r23.xyzx, r23.xyzx
// 3369  0x000197B8:           rsq r16.y, r16.y
// 3370  0x000197CC:           mul r17.zw, r16.yyyy, r23.xxxy
// 3371  0x000197E8:           dp3 r16.y, r19.xyzx, l(0.212500, 0.715400, 0.072100, 0.000000)
// 3372  0x00019810:           max r19.xy, r17.zwzz, l(0.000000, 0.000000, 0.000000, 0.000000)
// 3373  0x00019838:           dp3 r18.w, r25.xyzx, l(0.212500, 0.715400, 0.072100, 0.000000)
// 3374  0x00019860:           max r17.zw, -r17.zzzw, l(0.000000, 0.000000, 0.000000, 0.000000)
// 3375  0x0001988C:           mul r18.w, r17.z, r18.w
// 3376  0x000198A8:           mad r23.x, r16.y, r19.x, -r18.w
// 3377  0x000198D0:           dp3 r16.y, r22.xyzx, l(0.212500, 0.715400, 0.072100, 0.000000)
// 3378  0x000198F8:           dp3 r18.w, r26.xyzx, l(0.212500, 0.715400, 0.072100, 0.000000)
// 3379  0x00019920:           mul r17.w, r17.w, r18.w
// 3380  0x0001993C:           mad r23.y, r16.y, r19.y, -r17.w
// 3381  0x00019964:           dp3 r16.y, r24.xyzx, l(0.212500, 0.715400, 0.072100, 0.000000)
// 3382  0x0001998C:           dp3 r17.w, r27.xyzx, l(0.212500, 0.715400, 0.072100, 0.000000)
// 3383  0x000199B4:           mul r17.z, r17.z, r17.w
// 3384  0x000199D0:           mad r23.z, r16.y, r19.y, -r17.z
// 3385  0x000199F8:           mad r19.xyz, r13.xyzx, l(0.001000, 0.001000, 0.001000, 0.000000), r23.xyzx
// 3386  0x00019A28:           dp3 r16.y, cb3[20].xyzx, l(0.212500, 0.715400, 0.072100, 0.000000)
// 3387  0x00019A54:           mad r19.xyz, cb3[19].xyzx, r16.yyyy, r19.xyzx
// 3388  0x00019A7C:           dp3 r16.y, r19.xyzx, r19.xyzx
// 3389  0x00019A98:           rsq r16.y, r16.y
// 3390  0x00019AAC:           mul r19.xyz, r16.yyyy, r19.xyzx
// 3391  0x00019AC8:           dp3 r13.x, r13.xyzx, r19.xyzx
// 3392  0x00019AE4:           add r13.x, r13.x, r16.x
// 3393  0x00019B00:           add r21.x, r13.x, r21.z
// 3394  0x00019B1C:           sample_l_indexable(texture2d)(float,float,float,float) r13.xyz, r21.xwxx, t41.xyzw, s9, l(0.000000)
// 3395  0x00019B50:           if_nz cb0[41].y
// 3396  0x00019B60:             sample_b_indexable(texture2d)(float,float,float,float) r19.xyz, r21.xwxx, t41.xyzw, s10, l(-1.000000)
// 3397  0x00019B94:           else 
// 3398  0x00019B98:             sample_b_indexable(texture2d)(float,float,float,float) r19.xyz, r21.xwxx, t41.xyzw, s0, l(-1.000000)
// 3399  0x00019BCC:           endif 
// 3400  0x00019BD0:           add r19.xyz, -r13.xyzx, r19.xyzx
// 3401  0x00019BF0:           mad r13.xyz, r19.wwww, r19.xyzx, r13.xyzx
// 3402  0x00019C14:           mul_sat r19.xyz, r13.xyzx, cb0[39].wwww
// 3403  0x00019C34:           dp3 r16.x, r19.xyzx, l(0.212500, 0.715400, 0.072100, 0.000000)
// 3404  0x00019C5C:           max r16.y, r13.z, r13.y
// 3405  0x00019C78:           max r16.y, r13.x, r16.y
// 3406  0x00019C94:           mul r16.y, r16.y, cb0[39].w
// 3407  0x00019CB4:           log r16.y, r16.y
// 3408  0x00019CC8:           mul r16.y, r16.y, cb0[12].y
// 3409  0x00019CE8:           exp r16.y, r16.y
// 3410  0x00019CFC:           min r16.y, r16.y, l(1.000000)
// 3411  0x00019D18:           add r17.z, -cb0[12].x, cb0[12].z
// 3412  0x00019D40:           mad r16.y, r16.y, r17.z, cb0[12].x
// 3413  0x00019D68:           max r13.xyz, r13.xyzx, l(0.000300, 0.000300, 0.000300, 0.000000)
// 3414  0x00019D90:           dp3 r17.z, r13.xyzx, r13.xyzx
// 3415  0x00019DAC:           rsq r17.z, r17.z
// 3416  0x00019DC0:           mul r13.xyz, r13.xyzx, r17.zzzz
// 3417  0x00019DDC:           mul r13.xyz, r13.xyzx, l(1.060000, 1.060000, 1.060000, 0.000000)
// 3418  0x00019E04:           mul r19.xyz, r13.xyzx, r16.yyyy
// 3419  0x00019E20:           mul r21.xzw, r13.xxyz, cb0[12].xxxx
// 3420  0x00019E40:           mul r21.xzw, r21.xxzw, l(1.732000, 0.000000, 1.732000, 1.732000)
// 3421  0x00019E68:           dp3 r16.y, r13.xyzx, r13.xyzx
// 3422  0x00019E84:           sqrt r16.y, r16.y
// 3423  0x00019E98:           div r21.xzw, r21.xxzw, r16.yyyy
// 3424  0x00019EB4:           dp3 r13.x, r13.xyzx, l(0.212500, 0.715400, 0.072100, 0.000000)
// 3425  0x00019EDC:           div r13.xyz, r21.xzwx, r13.xxxx
// 3426  0x00019EF8:           max r13.xyz, r19.xyzx, r13.xyzx
// 3427  0x00019F14:           mad r19.xyz, r16.xxxx, cb0[39].wwww, r13.xyzx
// 3428  0x00019F3C:           min r19.xyz, r19.xyzx, cb0[12].zzzz
// 3429  0x00019F5C:           add r16.y, cb0[39].w, l(-1.000000)
// 3430  0x00019F7C:           max r16.y, r16.y, l(0.000000)
// 3431  0x00019F98:           div r16.y, r16.y, cb0[11].w
// 3432  0x00019FB8:           add r19.xyz, -r13.xyzx, r19.xyzx
// 3433  0x00019FD8:           mad r13.xyz, r16.yyyy, r19.xyzx, r13.xyzx
// 3434  0x00019FFC:           add r16.y, cb0[12].x, l(-0.000300)
// 3435  0x0001A01C:           add r16.x, r16.x, l(-0.000300)
// 3436  0x0001A038:           div r16.y, l(1.000000, 1.000000, 1.000000, 1.000000), r16.y
// 3437  0x0001A060:           mul_sat r16.x, r16.y, r16.x
// 3438  0x0001A07C:           mad r16.y, r16.x, l(-2.000000), l(3.000000)
// 3439  0x0001A0A0:           mul r16.x, r16.x, r16.x
// 3440  0x0001A0BC:           mul r16.x, r16.x, r16.y
// 3441  0x0001A0D8:           rsq r16.x, r16.x
// 3442  0x0001A0EC:           div r16.x, l(1.000000, 1.000000, 1.000000, 1.000000), r16.x
// 3443  0x0001A114:           add r13.xyz, r13.xyzx, -cb0[12].xxxx
// 3444  0x0001A138:           mad r13.xyz, r16.xxxx, r13.xyzx, cb0[12].xxxx
// 3445  0x0001A160:           add r13.xyz, -r20.xyzx, r13.xyzx
// 3446  0x0001A180:           mad r13.xyz, r21.yyyy, r13.xyzx, r20.xyzx
// 3447  0x0001A1A4:           add r16.x, -r21.y, l(1.000000)
// 3448  0x0001A1C4:           mul r15.y, r15.y, r16.x
// 3449  0x0001A1E0:         else 
// 3450  0x0001A1E4:           mov r13.xyz, r20.xyzx
// 3451  0x0001A1F8:         endif 
// 3452  0x0001A1FC:       else 
// 3453  0x0001A200:         mov r13.xyz, r20.xyzx
// 3454  0x0001A214:       endif 
// 3455  0x0001A218:       lt r16.x, l(0.000000), cb0[36].w
// 3456  0x0001A238:       if_nz r16.x
// 3457  0x0001A244:         add r13.w, r13.w, l(-0.078431)
// 3458  0x0001A260:         mul_sat r13.w, r13.w, l(1.085106)
// 3459  0x0001A27C:         sample_b_indexable(texture2d)(float,float,float,float) r16.x, r16.zwzz, t23.xyzw, s0, l(-1.000000)
// 3460  0x0001A2B0:         min r16.x, r16.x, cb0[37].z
// 3461  0x0001A2D0:         add r16.x, -r16.x, l(1.000000)
// 3462  0x0001A2F0:         mul r16.y, r16.x, cb0[36].w
// 3463  0x0001A310:         mad r16.x, r16.y, l(-0.500000), r16.x
// 3464  0x0001A334:         add r16.y, r6.z, l(-0.500000)
// 3465  0x0001A350:         add r16.y, r16.y, r16.y
// 3466  0x0001A36C:         add r17.z, cb0[36].w, l(-1.000000)
// 3467  0x0001A38C:         mul_sat r17.z, r17.z, l(-6.666668)
// 3468  0x0001A3A8:         mad r17.w, r17.z, l(-2.000000), l(3.000000)
// 3469  0x0001A3CC:         mul r17.z, r17.z, r17.z
// 3470  0x0001A3E8:         mul r17.z, r17.z, r17.w
// 3471  0x0001A404:         mul r16.y, r16.y, r17.z
// 3472  0x0001A420:         mad_sat r16.y, cb0[36].w, r16.y, cb0[36].w
// 3473  0x0001A44C:         lt r17.z, l(0.000000), cb0[37].y
// 3474  0x0001A46C:         movc r17.z, r17.z, l(0.500000), l(0.250000)
// 3475  0x0001A490:         mad r17.z, cb0[37].y, r17.z, l(0.500000)
// 3476  0x0001A4B8:         mul r17.z, r17.z, l(0.500000)
// 3477  0x0001A4D4:         movc r17.z, cb0[40].z, l(0.500000), r17.z
// 3478  0x0001A4FC:         mul r17.w, cb0[37].x, cb0[37].x
// 3479  0x0001A520:         log r13.w, r13.w
// 3480  0x0001A534:         mul r13.w, r13.w, r17.w
// 3481  0x0001A550:         exp r13.w, r13.w
// 3482  0x0001A564:         add r13.w, -r13.w, r16.y
// 3483  0x0001A584:         max r13.w, r13.w, l(0.000000)
// 3484  0x0001A5A0:         add r17.w, r13.w, r13.w
// 3485  0x0001A5BC:         min r17.w, r17.w, l(1.000000)
// 3486  0x0001A5D8:         mad r17.w, cb0[37].y, r16.y, r17.w
// 3487  0x0001A600:         add r17.w, r16.x, -r17.w
// 3488  0x0001A620:         mul_sat r17.w, r17.w, l(10.000000)
// 3489  0x0001A63C:         mad r18.w, r17.w, l(-2.000000), l(3.000000)
// 3490  0x0001A660:         mul r17.w, r17.w, r17.w
// 3491  0x0001A67C:         mul r17.w, r17.w, r18.w
// 3492  0x0001A698:         mad r18.w, r16.x, l(0.400000), l(-0.500000)
// 3493  0x0001A6BC:         mad r18.w, r16.y, r18.w, l(0.700000)
// 3494  0x0001A6E0:         add r19.xyz, r13.xyzx, -r18.wwww
// 3495  0x0001A700:         mad r19.xyz, r17.wwww, r19.xyzx, r18.wwww
// 3496  0x0001A724:         movc r19.xyz, cb0[40].zzzz, r19.xyzx, r13.xyzx
// 3497  0x0001A74C:         add r17.w, r17.z, l(1.000000)
// 3498  0x0001A768:         mad_sat r13.w, r13.w, r17.w, -r17.z
// 3499  0x0001A790:         add r13.w, -r13.w, r16.x
// 3500  0x0001A7B0:         mul_sat r13.w, r13.w, l(10.000000)
// 3501  0x0001A7CC:         mad r17.z, r13.w, l(-2.000000), l(3.000000)
// 3502  0x0001A7F0:         mul r13.w, r13.w, r13.w
// 3503  0x0001A80C:         mul r13.w, r13.w, r17.z
// 3504  0x0001A828:         mul r17.x, r13.w, r17.x
// 3505  0x0001A844:         mul r17.zw, r16.yyyy, l(0.000000, 0.000000, 0.300000, 2.857143)
// 3506  0x0001A86C:         mad r21.xyz, r19.xyzx, r16.xxxx, -r19.xyzx
// 3507  0x0001A894:         mad r13.xyz, r17.zzzz, r21.xyzx, r19.xyzx
// 3508  0x0001A8B8:         or r13.w, cb0[40].w, cb0[40].x
// 3509  0x0001A8DC:         min r17.z, r17.w, l(1.000000)
// 3510  0x0001A8F8:         mad r17.w, r17.z, l(-2.000000), l(3.000000)
// 3511  0x0001A91C:         mul r17.z, r17.z, r17.z
// 3512  0x0001A938:         mul r17.z, r17.z, r17.w
// 3513  0x0001A954:         ge r16.x, r17.z, r16.x
// 3514  0x0001A970:         and r16.x, r16.x, l(0x3f800000)
// 3515  0x0001A98C:         add r17.z, -r15.x, l(0.800000)
// 3516  0x0001A9AC:         mad r16.x, r16.x, r17.z, r15.x
// 3517  0x0001A9D0:         movc r15.x, r13.w, r15.x, r16.x
// 3518  0x0001A9F4:       else 
// 3519  0x0001A9F8:         mov r16.y, cb0[36].w
// 3520  0x0001AA10:       endif 
// 3521  0x0001AA14:       add r17.zw, r16.zzzw, l(0.000000, 0.000000, -0.500000, -0.500000)
// 3522  0x0001AA3C:       add r19.xy, r14.xyxx, -r17.zwzz
// 3523  0x0001AA5C:       mad r14.xy, r17.xxxx, r19.xyxx, r17.zwzz
// 3524  0x0001AA80:       if_nz r11.w
// 3525  0x0001AA8C:         mul_sat r11.w, r10.w, l(2.222222)
// 3526  0x0001AAA8:         rsq r13.w, r11.w
// 3527  0x0001AABC:         div r13.w, l(1.000000, 1.000000, 1.000000, 1.000000), r13.w
// 3528  0x0001AAE4:         add r16.x, -r16.w, r13.w
// 3529  0x0001AB04:         lt r17.z, r13.w, r16.w
// 3530  0x0001AB20:         if_nz r17.z
// 3531  0x0001AB2C:           log r17.z, |r16.x|
// 3532  0x0001AB44:           mul r17.z, r17.z, l(0.200000)
// 3533  0x0001AB60:           exp r17.z, r17.z
// 3534  0x0001AB74:           add r17.z, -r17.z, l(1.000000)
// 3535  0x0001AB94:           mul r17.x, r17.z, r17.x
// 3536  0x0001ABB0:           mov r13.xyz, l(0,0,0,0)
// 3537  0x0001ABD0:         else 
// 3538  0x0001ABD4:           mul_sat r10.w, r10.w, l(1.111111)
// 3539  0x0001ABF0:           add r13.w, r13.w, r16.x
// 3540  0x0001AC0C:           mad r13.w, |r16.x|, l(0.300000), r13.w
// 3541  0x0001AC34:           log r17.z, r16.w
// 3542  0x0001AC48:           mul r17.z, r17.z, l(0.200000)
// 3543  0x0001AC64:           exp r17.z, r17.z
// 3544  0x0001AC78:           add r13.w, r13.w, l(-1.000000)
// 3545  0x0001AC94:           mad r19.y, r17.z, r13.w, l(1.000000)
// 3546  0x0001ACB8:           lt r13.w, r19.y, l(1.000000)
// 3547  0x0001ACD4:           if_nz r13.w
// 3548  0x0001ACE0:             mov r19.x, r16.z
// 3549  0x0001ACF4:             mov_sat r19.xy, r19.xyxx
// 3550  0x0001AD08:             sample_b_indexable(texture2d)(float,float,float,float) r19.xyzw, r19.xyxx, t40.xyzw, s0, l(-1.000000)
// 3551  0x0001AD3C:             dp3 r13.w, r19.xyzx, l(0.299000, 0.587000, 0.114000, 0.000000)
// 3552  0x0001AD64:             add r17.z, -r13.w, l(0.300000)
// 3553  0x0001AD84:             mad r13.w, r17.z, l(0.800000), r13.w
// 3554  0x0001ADA8:             log r16.x, |r16.x|
// 3555  0x0001ADC0:             mul r17.zw, r16.xxxx, l(0.000000, 0.000000, 0.200000, 0.100000)
// 3556  0x0001ADE8:             exp r17.zw, r17.zzzw
// 3557  0x0001ADFC:             mul_sat r16.x, r19.w, l(12.750000)
// 3558  0x0001AE18:             add r18.w, -r17.w, l(1.000000)
// 3559  0x0001AE38:             mad r11.w, r11.w, r18.w, r17.w
// 3560  0x0001AE5C:             mul r19.xyz, r11.wwww, r13.xyzx
// 3561  0x0001AE78:             mad r21.xyz, r13.wwww, r17.zzzz, -r19.xyzx
// 3562  0x0001AEA0:             mad r13.xyz, r16.xxxx, r21.xyzx, r19.xyzx
// 3563  0x0001AEC4:             max r17.x, r16.x, r17.x
// 3564  0x0001AEE0:             add r19.xyz, -r14.xyzx, l(0.000000, 0.000000, 1.000000, 0.000000)
// 3565  0x0001AF0C:             mad r14.xyz, r16.xxxx, r19.xyzx, r14.xyzx
// 3566  0x0001AF30:             mad r15.y, r16.x, -r15.y, r15.y
// 3567  0x0001AF58:             add r13.w, -r15.x, l(0.800000)
// 3568  0x0001AF78:             mad r15.x, r16.x, r13.w, r15.x
// 3569  0x0001AF9C:             add r13.w, -r17.y, l(1.000000)
// 3570  0x0001AFBC:             mad r17.y, r16.x, r13.w, r17.y
// 3571  0x0001AFE0:             add r11.w, -r12.z, r11.w
// 3572  0x0001B000:             mad r12.z, r16.x, r11.w, r12.z
// 3573  0x0001B024:           else 
// 3574  0x0001B028:             mov r14.w, r14.z
// 3575  0x0001B03C:             mov r14.xyz, r14.xywx
// 3576  0x0001B050:           endif 
// 3577  0x0001B054:           ge r11.w, r10.w, l(0.500000)
// 3578  0x0001B070:           and r11.w, r11.w, l(0x3f800000)
// 3579  0x0001B08C:           add r10.w, r10.w, l(-1.000000)
// 3580  0x0001B0A8:           mul r10.w, r10.w, l(-2.000000)
// 3581  0x0001B0C4:           min r10.w, r10.w, l(1.000000)
// 3582  0x0001B0E0:           mad r13.w, r10.w, l(-2.000000), l(3.000000)
// 3583  0x0001B104:           mul r10.w, r10.w, r10.w
// 3584  0x0001B120:           mul r10.w, r10.w, r13.w
// 3585  0x0001B13C:           log r10.w, r10.w
// 3586  0x0001B150:           mul r10.w, r10.w, l(20.000000)
// 3587  0x0001B16C:           exp r10.w, r10.w
// 3588  0x0001B180:           mul r10.w, r10.w, r11.w
// 3589  0x0001B19C:           mul r19.xyz, r10.wwww, r13.xyzx
// 3590  0x0001B1B8:           mad r13.xyz, r19.xyzx, l(9.000000, 9.000000, 9.000000, 0.000000), r13.xyzx
// 3591  0x0001B1E8:         endif 
// 3592  0x0001B1EC:       endif 
// 3593  0x0001B1F0:       if_z r9.w
// 3594  0x0001B1FC:         mul r19.xyz, r15.wwww, r20.xyzx
// 3595  0x0001B218:         add r19.xyz, r19.xyzx, r19.xyzx
// 3596  0x0001B234:         movc r19.xyz, cb0[41].wwww, r19.xyzx, l(0,0,0,0)
// 3597  0x0001B268:         add r9.w, -cb0[42].x, cb4[39].z
// 3598  0x0001B290:         lt r10.w, r9.w, l(2.000000)
// 3599  0x0001B2AC:         mad r9.w, -r9.w, l(0.500000), l(1.000000)
// 3600  0x0001B2D4:         mul r11.w, r9.w, r9.w
// 3601  0x0001B2F0:         mul r11.w, r11.w, r11.w
// 3602  0x0001B30C:         mad r20.xyz, r9.wwww, r11.wwww, r13.xyzx
// 3603  0x0001B330:         movc r13.xyz, r10.wwww, r20.xyzx, r13.xyzx
// 3604  0x0001B354:         mul r15.z, r17.x, r17.y
// 3605  0x0001B370:         add r17.yzw, r13.xxyz, r13.xxyz
// 3606  0x0001B38C:         movc r17.yzw, cb0[13].zzzz, r17.yyzw, r13.xxyz
// 3607  0x0001B3B4:         mul r16.xz, r16.zzwz, l(8.000000, 0.000000, 8.000000, 0.000000)
// 3608  0x0001B3DC:         round_ni r16.xz, r16.xxzx
// 3609  0x0001B3F0:         add r9.w, r16.z, r16.x
// 3610  0x0001B40C:         mul r9.w, r9.w, l(0.500000)
// 3611  0x0001B428:         frc r9.w, r9.w
// 3612  0x0001B43C:         dp3 r10.w, r17.yzwy, l(0.212500, 0.715400, 0.072100, 0.000000)
// 3613  0x0001B464:         mul_sat r10.w, r10.w, l(0.600000)
// 3614  0x0001B480:         add r10.w, r10.w, l(0.200000)
// 3615  0x0001B49C:         mad r9.w, r9.w, l(0.200200), r10.w
// 3616  0x0001B4C0:         mul r9.w, r2.w, r9.w
// 3617  0x0001B4DC:         mul r20.z, r15.z, l(0.900000)
// 3618  0x0001B4F8:         movc r16.xzw, cb0[13].xxxx, r9.wwww, r17.yyzw
// 3619  0x0001B520:         movc r17.yzw, cb0[13].xxxx, l(0,0,0,1.000000), r14.xxyz
// 3620  0x0001B554:         mov r20.xy, l(0.800000,0,0,0)
// 3621  0x0001B574:         movc r20.xyz, cb0[13].xxxx, r20.xyzx, r15.xyzx
// 3622  0x0001B59C:         movc r21.xyz, cb0[13].xxxx, l(0,0,0,0), r18.xyzx
// 3623  0x0001B5D0:         movc_sat r13.xyz, r8.wwww, r16.xzwx, r13.xyzx
// 3624  0x0001B5F4:         movc r14.xyz, r8.wwww, r17.yzwy, r14.xyzx
// 3625  0x0001B618:         movc r16.xzw, r8.wwww, r21.xxyz, r18.xxyz
// 3626  0x0001B63C:         movc r15.xyz, r8.wwww, r20.xyzx, r15.xyzx
// 3627  0x0001B660:         add r13.xyz, -r5.xyzx, r13.xyzx
// 3628  0x0001B680:         mad r5.xyz, r15.zzzz, r13.xyzx, r5.xyzx
// 3629  0x0001B6A4:         add r13.xyz, -r7.xyzx, r14.xyzx
// 3630  0x0001B6C4:         mad r13.xyz, r15.zzzz, r13.xyzx, r7.xyzx
// 3631  0x0001B6E8:         dp3 r8.w, r13.xyzx, r13.xyzx
// 3632  0x0001B704:         rsq r8.w, r8.w
// 3633  0x0001B718:         mul r7.xyz, r8.wwww, r13.xyzx
// 3634  0x0001B734:         add r8.w, -r3.w, r15.y
// 3635  0x0001B754:         mad r3.w, r15.z, r8.w, r3.w
// 3636  0x0001B778:         add r13.xy, -r0.xyxx, r15.xxxx
// 3637  0x0001B798:         mad r0.xy, r15.zzzz, r13.xyxx, r0.xyxx
// 3638  0x0001B7BC:         add r8.w, -r2.w, r12.z
// 3639  0x0001B7DC:         mad r2.w, r17.x, r8.w, r2.w
// 3640  0x0001B800:         add r13.xyz, -r10.xyzx, r16.xzwx
// 3641  0x0001B820:         mad r10.xyz, r15.zzzz, r13.xyzx, r10.xyzx
// 3642  0x0001B844:         add r8.w, -r1.y, l(0.040000)
// 3643  0x0001B864:         mad r1.y, r15.z, r8.w, r1.y
// 3644  0x0001B888:         mad r6.x, r15.z, -r6.x, r6.x
// 3645  0x0001B8B0:         add r13.xyz, -r12.xywx, r19.xyzx
// 3646  0x0001B8D0:         mad r12.xyw, r15.zzzz, r13.xyxz, r12.xyxw
// 3647  0x0001B8F4:         max r5.w, r5.w, r15.z
// 3648  0x0001B910:         add r8.w, -r16.y, l(1.000000)
// 3649  0x0001B930:         mul r8.w, r8.w, r15.z
// 3650  0x0001B94C:         max r6.w, r6.w, r8.w
// 3651  0x0001B968:         movc r0.z, cb4[3].y, r15.z, r0.z
// 3652  0x0001B990:       else 
// 3653  0x0001B994:         mov r0.z, r7.w
// 3654  0x0001B9A8:       endif 
// 3655  0x0001B9AC:     else 
// 3656  0x0001B9B0:       mov r0.z, r7.w
// 3657  0x0001B9C4:     endif 
// 3658  0x0001B9C8:   endif 
// 3659  0x0001B9CC:   or r7.w, cb0[0].y, cb0[42].y
// 3660  0x0001B9F0:   if_nz r7.w
// 3661  0x0001B9FC:     movc r7.w, cb4[3].y, l(0), r0.z
// 3662  0x0001BA24:     eq r13.xy, cb0[43].xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
// 3663  0x0001BA50:     or r8.w, r13.y, r13.x
// 3664  0x0001BA6C:     eq r9.w, r6.y, l(0.000000)
// 3665  0x0001BA88:     or r8.w, r8.w, r9.w
// 3666  0x0001BAA4:     if_z r8.w
// 3667  0x0001BAB0:       ieq r8.w, cb0[12].w, l(5)
// 3668  0x0001BAD0:       add r13.xy, v3.wzww, l(-0.500000, -0.500000, 0.000000, 0.000000)
// 3669  0x0001BAF8:       add r13.xy, r13.xyxx, -cb0[42].wzww
// 3670  0x0001BB1C:       mul r13.xy, r13.xyxx, |cb0[43].xxxx|
// 3671  0x0001BB40:       mul r9.w, cb0[43].z, l(6.283180)
// 3672  0x0001BB60:       sincos r14.x, r15.x, r9.w
// 3673  0x0001BB7C:       mul r13.zw, r13.xxxy, r14.xxxx
// 3674  0x0001BB98:       mad r16.x, r13.y, r15.x, -r13.z
// 3675  0x0001BBC0:       mad r16.y, r13.x, r15.x, r13.w
// 3676  0x0001BBE4:       add r13.xy, r16.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
// 3677  0x0001BC0C:       mov_sat r16.xyzw, r13.xyxy
// 3678  0x0001BC20:       ne r13.xy, r13.xyxx, r16.xyxx
// 3679  0x0001BC3C:       or r9.w, r13.y, r13.x
// 3680  0x0001BC58:       ieq r10.w, cb0[13].x, l(0)
// 3681  0x0001BC78:       and r10.w, r8.w, r10.w
// 3682  0x0001BC94:       add r11.w, -cb0[13].y, cb4[39].z
// 3683  0x0001BCBC:       movc r10.w, r10.w, r11.w, l(0.900000)
// 3684  0x0001BCE0:       lt r11.w, r10.w, l(0.900000)
// 3685  0x0001BCFC:       sample_b_indexable(texture2d)(float,float,float,float) r13.xyzw, r16.zwzz, t45.xyzw, s0, l(-1.000000)
// 3686  0x0001BD30:       mul_sat r12.z, r13.w, l(12.750000)
// 3687  0x0001BD4C:       mul r17.x, r6.y, r12.z
// 3688  0x0001BD68:       resinfo_indexable(texture2d)(float,float,float,float) r14.yz, l(0), t45.zxyw
// 3689  0x0001BD8C:       div r14.yz, l(1.000000, 1.000000, 1.000000, 1.000000), r14.yyzy
// 3690  0x0001BDB4:       add r15.yz, -r14.yyzy, l(0.000000, 1.000000, 1.000000, 0.000000)
// 3691  0x0001BDE0:       max r14.yz, r14.yyzy, r16.zzwz
// 3692  0x0001BDFC:       min r14.yz, r15.yyzy, r14.yyzy
// 3693  0x0001BE18:       lod r14.y, r14.yzyy, t45.x, s0
// 3694  0x0001BE3C:       add_sat r14.z, r14.y, l(-3.000000)
// 3695  0x0001BE58:       add r14.z, -r14.z, l(1.000000)
// 3696  0x0001BE78:       lt r14.w, l(0.000000), r14.z
// 3697  0x0001BE94:       if_nz r14.w
// 3698  0x0001BEA0:         add r15.yz, r16.zzwz, l(0.000000, -0.500000, -0.500000, 0.000000)
// 3699  0x0001BEC8:         mul r18.xyz, cb1[20].zxyz, cb1[21].yzxy
// 3700  0x0001BEEC:         mad r18.xyz, cb1[20].yzxy, cb1[21].zxyz, -r18.xyzx
// 3701  0x0001BF1C:         dp3 r14.w, r18.xyzx, -r11.xyzx
// 3702  0x0001BF3C:         dp3 r11.x, cb1[21].xyzx, r11.xyzx
// 3703  0x0001BF5C:         mul r11.y, r14.x, r11.x
// 3704  0x0001BF78:         mad r16.x, r14.w, r15.x, -r11.y
// 3705  0x0001BFA0:         mul r11.x, r15.x, r11.x
// 3706  0x0001BFBC:         mad r16.y, r14.w, r14.x, r11.x
// 3707  0x0001BFE0:         mad r11.xy, -r16.xyxx, l(0.010000, 0.010000, 0.000000, 0.000000), r15.yzyy
// 3708  0x0001C014:         add_sat r11.xy, r11.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
// 3709  0x0001C03C:         sample_b_indexable(texture2d)(float,float,float,float) r11.x, r11.xyxx, t45.wxyz, s0, l(1.000000)
// 3710  0x0001C070:         mul_sat r11.x, r11.x, l(12.750000)
// 3711  0x0001C08C:         mul r11.x, r6.y, r11.x
// 3712  0x0001C0A8:         mul r11.x, r11.x, l(0.700000)
// 3713  0x0001C0C4:         max r11.x, r11.x, r17.x
// 3714  0x0001C0E0:         mad r11.x, -r12.z, r6.y, r11.x
// 3715  0x0001C108:         mad r17.z, r14.z, r11.x, r17.x
// 3716  0x0001C12C:         mov r17.xy, r17.zxzz
// 3717  0x0001C140:       else 
// 3718  0x0001C144:         mov r17.y, l(1.000000)
// 3719  0x0001C158:       endif 
// 3720  0x0001C15C:       ge r11.x, l(0.000000), r17.x
// 3721  0x0001C178:       not r11.y, r11.w
// 3722  0x0001C18C:       and r11.x, r11.y, r11.x
// 3723  0x0001C1A8:       or r9.w, r9.w, r11.x
// 3724  0x0001C1C4:       sample_b_indexable(texture2d)(float,float,float,float) r15.xyzw, r16.zwzz, t47.zxyw, s0, l(-1.000000)
// 3725  0x0001C1F8:       add r11.x, r15.z, r15.y
// 3726  0x0001C214:       add r11.x, r11.x, l(-1.003922)
// 3727  0x0001C230:       add r11.y, -r15.z, r15.y
// 3728  0x0001C250:       add r12.z, -|r11.x|, l(1.000000)
// 3729  0x0001C270:       add r11.z, -|r11.y|, r12.z
// 3730  0x0001C290:       dp3 r12.z, r11.xyzx, r11.xyzx
// 3731  0x0001C2AC:       rsq r12.z, r12.z
// 3732  0x0001C2C0:       mul r18.xyz, r11.xyzx, r12.zzzz
// 3733  0x0001C2DC:       max r11.x, r14.y, l(3.000000)
// 3734  0x0001C2F8:       sample_l_indexable(texture2d)(float,float,float,float) r11.yz, r1.zwzz, t20.zxyw, s0, r11.x
// 3735  0x0001C32C:       add r12.z, r11.z, r11.y
// 3736  0x0001C348:       add r14.x, r12.z, l(-1.003922)
// 3737  0x0001C364:       add r14.y, -r11.z, r11.y
// 3738  0x0001C384:       add r11.y, -|r14.x|, l(1.000000)
// 3739  0x0001C3A4:       add r14.z, -|r14.y|, r11.y
// 3740  0x0001C3C4:       dp3 r11.y, r14.xyzx, r14.xyzx
// 3741  0x0001C3E0:       rsq r11.y, r11.y
// 3742  0x0001C3F4:       mul r14.xyz, r11.yyyy, r14.xyzx
// 3743  0x0001C410:       mov r18.w, -r18.y
// 3744  0x0001C428:       mul r18.xyz, r17.xxxx, r18.xwzx
// 3745  0x0001C444:       mov r14.w, -r14.y
// 3746  0x0001C45C:       mad r14.xyz, r18.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r14.xwzx
// 3747  0x0001C48C:       dp3 r11.y, r14.xyzx, r14.xyzx
// 3748  0x0001C4A8:       rsq r11.y, r11.y
// 3749  0x0001C4BC:       mul r14.xyz, r11.yyyy, r14.xyzx
// 3750  0x0001C4D8:       sample_l_indexable(texture2d)(float,float,float,float) r1.z, r1.zwzz, t21.yzxw, s0, r11.x
// 3751  0x0001C50C:       log r1.z, r1.z
// 3752  0x0001C520:       mul r1.z, r1.z, l(0.750000)
// 3753  0x0001C53C:       exp r1.z, r1.z
// 3754  0x0001C550:       mad r11.x, r17.y, l(0.500000), l(0.500000)
// 3755  0x0001C574:       min r1.z, r1.z, r11.x
// 3756  0x0001C590:       movc r15.y, cb0[47].x, l(1.000000), l(0)
// 3757  0x0001C5B8:       if_nz cb0[48].x
// 3758  0x0001C5C8:         sample_b_indexable(texture2d)(float,float,float,float) r11.x, r16.zwzz, t49.wxyz, s0, l(-1.000000)
// 3759  0x0001C5FC:         add r11.x, -r11.x, l(1.000000)
// 3760  0x0001C61C:         ne r11.y, l(0.000000, 0.000000, 0.000000, 0.000000), r11.x
// 3761  0x0001C644:         if_nz r11.y
// 3762  0x0001C650:           movc r11.y, cb4[2].x, l(2.500000), l(1.750000)
// 3763  0x0001C678:           mul r11.y, r11.y, cb0[48].z
// 3764  0x0001C698:           add r18.xyz, -r4.yzwy, cb1[19].xyzx
// 3765  0x0001C6BC:           dp3 r11.z, r18.xyzx, r18.xyzx
// 3766  0x0001C6D8:           rsq r11.z, r11.z
// 3767  0x0001C6EC:           mul r18.xyz, r11.zzzz, r18.xyzx
// 3768  0x0001C708:           mul r16.xy, r11.yyyy, r16.zwzz
// 3769  0x0001C724:           add r17.zw, r16.zzzw, l(0.000000, 0.000000, 0.500000, 0.500000)
// 3770  0x0001C74C:           mul r11.yz, r11.yyyy, r17.zzwz
// 3771  0x0001C768:           deriv_rtx_coarse r17.zw, r16.xxxy
// 3772  0x0001C77C:           deriv_rty_coarse r19.xy, r16.xyxx
// 3773  0x0001C790:           max r17.zw, r17.zzzw, r19.xxxy
// 3774  0x0001C7AC:           min r12.z, r17.w, r17.z
// 3775  0x0001C7C8:           mad_sat r12.z, -r12.z, l(40.000000), l(1.000000)
// 3776  0x0001C7F0:           sample_indexable(texture2d)(float,float,float,float) r19.xyz, r16.xyxx, t48.xywz, s9
// 3777  0x0001C81C:           add r16.x, r19.y, r19.x
// 3778  0x0001C838:           add r20.x, r16.x, l(-1.003922)
// 3779  0x0001C854:           add r20.y, -r19.y, r19.x
// 3780  0x0001C874:           add r16.x, -|r20.x|, l(1.000000)
// 3781  0x0001C894:           add r20.z, -|r20.y|, r16.x
// 3782  0x0001C8B4:           dp3 r16.x, r20.xyzx, r20.xyzx
// 3783  0x0001C8D0:           rsq r16.x, r16.x
// 3784  0x0001C8E4:           mul r19.xyw, r16.xxxx, r20.xyxz
// 3785  0x0001C900:           mul r19.xyw, r19.wwww, r19.xyxw
// 3786  0x0001C91C:           mul r20.xyz, r9.xyzx, r19.yyyy
// 3787  0x0001C938:           mad r20.xyz, r19.xxxx, v6.xyzx, r20.xyzx
// 3788  0x0001C95C:           mad r20.xyz, r19.wwww, r3.xyzx, r20.xyzx
// 3789  0x0001C980:           dp3 r16.x, r20.xyzx, r20.xyzx
// 3790  0x0001C99C:           rsq r16.x, r16.x
// 3791  0x0001C9B0:           mul r20.xyz, r16.xxxx, r20.xyzx
// 3792  0x0001C9CC:           dp3 r16.x, r18.xyzx, r20.xyzx
// 3793  0x0001C9E8:           add r16.x, r16.x, r16.x
// 3794  0x0001CA04:           mad r20.xyz, r20.xyzx, -r16.xxxx, r18.xyzx
// 3795  0x0001CA2C:           mul r20.xyz, r20.xyzx, l(12.000000, 12.000000, 12.000000, 0.000000)
// 3796  0x0001CA54:           sincos r20.xyz, null, r20.xyzx
// 3797  0x0001CA6C:           max r21.xyz, -r20.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
// 3798  0x0001CA98:           dp3 r16.x, r21.xyzx, l(0.212500, 0.715400, 0.072100, 0.000000)
// 3799  0x0001CAC0:           mul r16.x, r16.x, r16.x
// 3800  0x0001CADC:           add_sat r21.xyz, -r20.xyzx, l(0.150000, 0.150000, 0.150000, 0.000000)
// 3801  0x0001CB08:           dp3 r16.y, r21.xyzx, l(0.212500, 0.715400, 0.072100, 0.000000)
// 3802  0x0001CB30:           mul r16.y, r16.y, l(0.250000)
// 3803  0x0001CB4C:           mad r16.x, r16.x, r16.x, r16.y
// 3804  0x0001CB70:           add r20.xyz, r20.xyzx, l(-0.990000, -0.990000, -0.990000, 0.000000)
// 3805  0x0001CB98:           max r20.xyz, r20.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
// 3806  0x0001CBC0:           mul r20.xyz, r20.xyzx, l(100.000099, 100.000099, 100.000099, 0.000000)
// 3807  0x0001CBE8:           mul r21.xyz, r20.yzxy, r20.yzxy
// 3808  0x0001CC04:           mad r20.xyz, r21.xyzx, r21.xyzx, r20.xyzx
// 3809  0x0001CC28:           mad r20.xyz, r20.xyzx, l(3.000000, 3.000000, 3.000000, 0.000000), r16.xxxx
// 3810  0x0001CC58:           mul r20.xyz, r19.zzzz, r20.xyzx
// 3811  0x0001CC74:           mul r12.z, r11.x, r12.z
// 3812  0x0001CC90:           mul r12.z, r12.z, l(0.040000)
// 3813  0x0001CCAC:           mad r16.xy, r19.xyxx, r12.zzzz, r14.xyxx
// 3814  0x0001CCD0:           sample_l_indexable(texture2d)(float,float,float,float) r19.xyz, r11.yzyy, t48.xywz, s2, l(0.000000)
// 3815  0x0001CD04:           add r11.y, r19.y, r19.x
// 3816  0x0001CD20:           add r21.x, r11.y, l(-1.003922)
// 3817  0x0001CD3C:           add r21.y, -r19.y, r19.x
// 3818  0x0001CD5C:           add r11.y, -|r21.x|, l(1.000000)
// 3819  0x0001CD7C:           add r21.z, -|r21.y|, r11.y
// 3820  0x0001CD9C:           dp3 r11.y, r21.xyzx, r21.xyzx
// 3821  0x0001CDB8:           rsq r11.y, r11.y
// 3822  0x0001CDCC:           mul r19.xyw, r11.yyyy, r21.xyxz
// 3823  0x0001CDE8:           mul r21.xyz, r9.xyzx, r19.yyyy
// 3824  0x0001CE04:           mad r21.xyz, r19.xxxx, v6.xyzx, r21.xyzx
// 3825  0x0001CE28:           mad r21.xyz, r19.wwww, r3.xyzx, r21.xyzx
// 3826  0x0001CE4C:           dp3 r11.y, r21.xyzx, r21.xyzx
// 3827  0x0001CE68:           rsq r11.y, r11.y
// 3828  0x0001CE7C:           mul r21.xyz, r11.yyyy, r21.xyzx
// 3829  0x0001CE98:           dp3 r11.y, r18.xyzx, r21.xyzx
// 3830  0x0001CEB4:           add r11.y, r11.y, r11.y
// 3831  0x0001CED0:           mad r18.xyz, r21.xyzx, -r11.yyyy, r18.xyzx
// 3832  0x0001CEF8:           mul r18.xyz, r18.xyzx, l(12.000000, 12.000000, 12.000000, 0.000000)
// 3833  0x0001CF20:           sincos r18.xyz, null, r18.xyzx
// 3834  0x0001CF38:           max r21.xyz, -r18.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
// 3835  0x0001CF64:           dp3 r11.y, r21.xyzx, l(0.212500, 0.715400, 0.072100, 0.000000)
// 3836  0x0001CF8C:           mul r11.y, r11.y, r11.y
// 3837  0x0001CFA8:           add_sat r21.xyz, -r18.xyzx, l(0.150000, 0.150000, 0.150000, 0.000000)
// 3838  0x0001CFD4:           dp3 r11.z, r21.xyzx, l(0.212500, 0.715400, 0.072100, 0.000000)
// 3839  0x0001CFFC:           mul r11.z, r11.z, l(0.250000)
// 3840  0x0001D018:           mad r11.y, r11.y, r11.y, r11.z
// 3841  0x0001D03C:           add r18.xyz, r18.xyzx, l(-0.990000, -0.990000, -0.990000, 0.000000)
// 3842  0x0001D064:           max r18.xyz, r18.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
// 3843  0x0001D08C:           mul r18.xyz, r18.xyzx, l(100.000099, 100.000099, 100.000099, 0.000000)
// 3844  0x0001D0B4:           mul r21.xyz, r18.yzxy, r18.yzxy
// 3845  0x0001D0D0:           mad r18.xyz, r21.xyzx, r21.xyzx, r18.xyzx
// 3846  0x0001D0F4:           mad r18.xyz, r18.xyzx, l(3.000000, 3.000000, 3.000000, 0.000000), r11.yyyy
// 3847  0x0001D124:           mul r18.xyz, r19.zzzz, r18.xyzx
// 3848  0x0001D140:           max r18.xyz, r18.xyzx, r20.xyzx
// 3849  0x0001D15C:           mov_sat r20.xyz, r13.xyzx
// 3850  0x0001D170:           dp3 r11.y, r20.xyzx, l(0.212500, 0.715400, 0.072100, 0.000000)
// 3851  0x0001D198:           max r11.z, r13.z, r13.y
// 3852  0x0001D1B4:           max r11.z, r11.z, r13.x
// 3853  0x0001D1D0:           log r11.z, r11.z
// 3854  0x0001D1E4:           mul r11.z, r11.z, cb0[9].y
// 3855  0x0001D204:           exp r11.z, r11.z
// 3856  0x0001D218:           min r11.z, r11.z, l(1.000000)
// 3857  0x0001D234:           add r17.z, -cb0[9].x, cb0[9].z
// 3858  0x0001D25C:           mad r11.z, r11.z, r17.z, cb0[9].x
// 3859  0x0001D284:           max r20.xyz, r13.xyzx, l(0.000300, 0.000300, 0.000300, 0.000000)
// 3860  0x0001D2AC:           dp3 r17.z, r20.xyzx, r20.xyzx
// 3861  0x0001D2C8:           rsq r17.z, r17.z
// 3862  0x0001D2DC:           mul r20.xyz, r17.zzzz, r20.xyzx
// 3863  0x0001D2F8:           mul r20.xyz, r20.xyzx, l(1.060000, 1.060000, 1.060000, 0.000000)
// 3864  0x0001D320:           mul r21.xyz, r11.zzzz, r20.xyzx
// 3865  0x0001D33C:           mul r22.xyz, r20.xyzx, cb0[9].xxxx
// 3866  0x0001D35C:           mul r22.xyz, r22.xyzx, l(1.732000, 1.732000, 1.732000, 0.000000)
// 3867  0x0001D384:           dp3 r11.z, r20.xyzx, r20.xyzx
// 3868  0x0001D3A0:           sqrt r11.z, r11.z
// 3869  0x0001D3B4:           div r22.xyz, r22.xyzx, r11.zzzz
// 3870  0x0001D3D0:           dp3 r11.z, r20.xyzx, l(0.212500, 0.715400, 0.072100, 0.000000)
// 3871  0x0001D3F8:           div r20.xyz, r22.xyzx, r11.zzzz
// 3872  0x0001D414:           max r20.xyz, r21.xyzx, r20.xyzx
// 3873  0x0001D430:           add r11.z, cb0[9].x, l(-0.000300)
// 3874  0x0001D450:           add r11.y, r11.y, l(-0.000300)
// 3875  0x0001D46C:           div r11.z, l(1.000000, 1.000000, 1.000000, 1.000000), r11.z
// 3876  0x0001D494:           mul_sat r11.y, r11.z, r11.y
// 3877  0x0001D4B0:           mad r11.z, r11.y, l(-2.000000), l(3.000000)
// 3878  0x0001D4D4:           mul r11.y, r11.y, r11.y
// 3879  0x0001D4F0:           mul r11.y, r11.y, r11.z
// 3880  0x0001D50C:           rsq r11.y, r11.y
// 3881  0x0001D520:           div r11.y, l(1.000000, 1.000000, 1.000000, 1.000000), r11.y
// 3882  0x0001D548:           add r20.xyz, r20.xyzx, -cb0[9].xxxx
// 3883  0x0001D56C:           mad r20.xyz, r11.yyyy, r20.xyzx, cb0[9].xxxx
// 3884  0x0001D594:           movc r20.xyz, cb0[46].xxxx, r20.xyzx, r13.xyzx
// 3885  0x0001D5BC:           mul r20.xyz, r20.xyzx, cb0[46].wwww
// 3886  0x0001D5DC:           mul r18.xyz, r18.xyzx, r20.xyzx
// 3887  0x0001D5F8:           mul r11.yz, r12.zzzz, r19.xxyx
// 3888  0x0001D614:           mad r14.xy, r11.yzyy, r19.zzzz, r16.xyxx
// 3889  0x0001D638:           mul r11.y, r11.x, l(0.500000)
// 3890  0x0001D654:           max r15.y, r11.y, r15.y
// 3891  0x0001D670:           mul r11.xyz, r11.xxxx, r18.xyzx
// 3892  0x0001D68C:         else 
// 3893  0x0001D690:           mov r11.xyz, r10.xyzx
// 3894  0x0001D6A4:         endif 
// 3895  0x0001D6A8:       else 
// 3896  0x0001D6AC:         mov r11.xyz, r10.xyzx
// 3897  0x0001D6C0:       endif 
// 3898  0x0001D6C4:       if_nz cb0[46].x
// 3899  0x0001D6D4:         add r18.xyz, cb0[45].xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
// 3900  0x0001D700:         mad r18.xyz, r15.yyyy, r18.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
// 3901  0x0001D730:         mul r12.z, r15.y, cb0[45].w
// 3902  0x0001D750:         if_nz cb0[46].y
// 3903  0x0001D760:           dp3 r16.x, r13.xyzx, l(0.212500, 0.715400, 0.072100, 0.000000)
// 3904  0x0001D788:           add r19.xyz, -r13.xyzx, r16.xxxx
// 3905  0x0001D7A8:           mad r19.xyz, r12.zzzz, r19.xyzx, r13.xyzx
// 3906  0x0001D7CC:           mul_sat r19.xyz, r18.xyzx, r19.xyzx
// 3907  0x0001D7E8:           max r20.xyz, r19.xyzx, l(0.000300, 0.000300, 0.000300, 0.000000)
// 3908  0x0001D810:           dp3 r16.x, r20.xyzx, r20.xyzx
// 3909  0x0001D82C:           rsq r16.x, r16.x
// 3910  0x0001D840:           mul r20.xyz, r16.xxxx, r20.xyzx
// 3911  0x0001D85C:           mul r20.xyz, r20.xyzx, l(1.060000, 1.060000, 1.060000, 0.000000)
// 3912  0x0001D884:           max r16.x, r19.z, r19.y
// 3913  0x0001D8A0:           max r16.x, r16.x, r19.x
// 3914  0x0001D8BC:           mul r16.x, r16.x, cb0[46].z
// 3915  0x0001D8DC:           mul_sat r19.xyz, r19.xyzx, cb0[46].zzzz
// 3916  0x0001D8FC:           dp3 r16.y, r19.xyzx, l(0.212500, 0.715400, 0.072100, 0.000000)
// 3917  0x0001D924:           add r17.zw, r16.yyyy, l(0.000000, 0.000000, -0.550000, -0.000300)
// 3918  0x0001D94C:           mul_sat r17.z, r17.z, l(-1.871258)
// 3919  0x0001D968:           mad r18.w, r17.z, l(-2.000000), l(3.000000)
// 3920  0x0001D98C:           mul r17.z, r17.z, r17.z
// 3921  0x0001D9A8:           mul r17.z, r17.z, r18.w
// 3922  0x0001D9C4:           add r19.xyz, cb0[10].xyzx, -cb0[11].xyzx
// 3923  0x0001D9EC:           mad r19.xyz, r17.zzzz, r19.xyzx, cb0[11].xyzx
// 3924  0x0001DA14:           add r19.xyz, r19.xyzx, -cb0[9].xyzx
// 3925  0x0001DA38:           mad r19.xyz, r15.yyyy, r19.xyzx, cb0[9].xyzx
// 3926  0x0001DA60:           add r17.z, -cb0[9].x, cb0[10].x
// 3927  0x0001DA88:           mad r17.z, r15.y, r17.z, cb0[9].x
// 3928  0x0001DAB0:           log r16.x, r16.x
// 3929  0x0001DAC4:           mul r16.x, r16.x, r19.y
// 3930  0x0001DAE0:           exp r16.x, r16.x
// 3931  0x0001DAF4:           min r16.x, r16.x, l(1.000000)
// 3932  0x0001DB10:           add r18.w, -r19.x, r19.z
// 3933  0x0001DB30:           mad r16.x, r16.x, r18.w, r19.x
// 3934  0x0001DB54:           mul r19.xyw, r20.xyxz, r16.xxxx
// 3935  0x0001DB70:           mul r21.xyz, r17.zzzz, r20.xyzx
// 3936  0x0001DB8C:           mul r21.xyz, r21.xyzx, l(1.732000, 1.732000, 1.732000, 0.000000)
// 3937  0x0001DBB4:           dp3 r16.x, r20.xyzx, r20.xyzx
// 3938  0x0001DBD0:           sqrt r16.x, r16.x
// 3939  0x0001DBE4:           div r21.xyz, r21.xyzx, r16.xxxx
// 3940  0x0001DC00:           dp3 r16.x, r20.xyzx, l(0.212500, 0.715400, 0.072100, 0.000000)
// 3941  0x0001DC28:           div r20.xyz, r21.xyzx, r16.xxxx
// 3942  0x0001DC44:           max r19.xyw, r19.xyxw, r20.xyxz
// 3943  0x0001DC60:           add r20.xyz, r16.yyyy, r19.xywx
// 3944  0x0001DC7C:           min r20.xyz, r19.zzzz, r20.xyzx
// 3945  0x0001DC98:           add r16.x, cb0[46].z, l(-1.000000)
// 3946  0x0001DCB8:           max r16.x, r16.x, l(0.000000)
// 3947  0x0001DCD4:           mul r16.x, r16.x, l(0.015873)
// 3948  0x0001DCF0:           add r20.xyz, -r19.xywx, r20.xyzx
// 3949  0x0001DD10:           mad r19.xyz, r16.xxxx, r20.xyzx, r19.xywx
// 3950  0x0001DD34:           add r16.x, r17.z, l(-0.000300)
// 3951  0x0001DD50:           div r16.x, l(1.000000, 1.000000, 1.000000, 1.000000), r16.x
// 3952  0x0001DD78:           mul_sat r16.x, r16.x, r17.w
// 3953  0x0001DD94:           mad r16.y, r16.x, l(-2.000000), l(3.000000)
// 3954  0x0001DDB8:           mul r16.x, r16.x, r16.x
// 3955  0x0001DDD4:           mul r16.x, r16.x, r16.y
// 3956  0x0001DDF0:           rsq r16.x, r16.x
// 3957  0x0001DE04:           div r16.x, l(1.000000, 1.000000, 1.000000, 1.000000), r16.x
// 3958  0x0001DE2C:           add r19.xyz, -r17.zzzz, r19.xyzx
// 3959  0x0001DE4C:           mad r19.xyz, r16.xxxx, r19.xyzx, r17.zzzz
// 3960  0x0001DE70:         else 
// 3961  0x0001DE74:           mul r20.xyz, r13.xyzx, r18.xyzx
// 3962  0x0001DE90:           mad r18.xyz, -r18.xyzx, r13.xyzx, r18.xyzx
// 3963  0x0001DEB8:           mad r18.xyz, r12.zzzz, r18.xyzx, r20.xyzx
// 3964  0x0001DEDC:           max r18.xyz, r18.xyzx, l(0.000300, 0.000300, 0.000300, 0.000000)
// 3965  0x0001DF04:           dp3 r12.z, r18.xyzx, r18.xyzx
// 3966  0x0001DF20:           rsq r12.z, r12.z
// 3967  0x0001DF34:           mul r18.xyz, r12.zzzz, r18.xyzx
// 3968  0x0001DF50:           mul r18.xyz, r18.xyzx, l(1.060000, 1.060000, 1.060000, 0.000000)
// 3969  0x0001DF78:           max r12.z, r13.z, r13.y
// 3970  0x0001DF94:           max r12.z, r12.z, r13.x
// 3971  0x0001DFB0:           mul r12.z, r12.z, cb0[46].z
// 3972  0x0001DFD0:           mul_sat r20.xyz, r13.xyzx, cb0[46].zzzz
// 3973  0x0001DFF0:           dp3 r16.x, r20.xyzx, l(0.212500, 0.715400, 0.072100, 0.000000)
// 3974  0x0001E018:           add r17.zw, r16.xxxx, l(0.000000, 0.000000, -0.550000, -0.000300)
// 3975  0x0001E040:           mul_sat r16.y, r17.z, l(-1.871258)
// 3976  0x0001E05C:           mad r17.z, r16.y, l(-2.000000), l(3.000000)
// 3977  0x0001E080:           mul r16.y, r16.y, r16.y
// 3978  0x0001E09C:           mul r16.y, r16.y, r17.z
// 3979  0x0001E0B8:           add r20.xyz, cb0[10].xyzx, -cb0[11].xyzx
// 3980  0x0001E0E0:           mad r20.xyz, r16.yyyy, r20.xyzx, cb0[11].xyzx
// 3981  0x0001E108:           add r20.xyz, r20.xyzx, -cb0[9].xyzx
// 3982  0x0001E12C:           mad r20.xyz, r15.yyyy, r20.xyzx, cb0[9].xyzx
// 3983  0x0001E154:           add r16.y, -cb0[9].x, cb0[10].x
// 3984  0x0001E17C:           mad r16.y, r15.y, r16.y, cb0[9].x
// 3985  0x0001E1A4:           log r12.z, r12.z
// 3986  0x0001E1B8:           mul r12.z, r12.z, r20.y
// 3987  0x0001E1D4:           exp r12.z, r12.z
// 3988  0x0001E1E8:           min r12.z, r12.z, l(1.000000)
// 3989  0x0001E204:           add r17.z, -r20.x, r20.z
// 3990  0x0001E224:           mad r12.z, r12.z, r17.z, r20.x
// 3991  0x0001E248:           mul r20.xyw, r18.xyxz, r12.zzzz
// 3992  0x0001E264:           mul r21.xyz, r16.yyyy, r18.xyzx
// 3993  0x0001E280:           mul r21.xyz, r21.xyzx, l(1.732000, 1.732000, 1.732000, 0.000000)
// 3994  0x0001E2A8:           dp3 r12.z, r18.xyzx, r18.xyzx
// 3995  0x0001E2C4:           sqrt r12.z, r12.z
// 3996  0x0001E2D8:           div r21.xyz, r21.xyzx, r12.zzzz
// 3997  0x0001E2F4:           dp3 r12.z, r18.xyzx, l(0.212500, 0.715400, 0.072100, 0.000000)
// 3998  0x0001E31C:           div r18.xyz, r21.xyzx, r12.zzzz
// 3999  0x0001E338:           max r18.xyz, r20.xywx, r18.xyzx
// 4000  0x0001E354:           add r20.xyw, r16.xxxx, r18.xyxz
// 4001  0x0001E370:           min r20.xyz, r20.xywx, r20.zzzz
// 4002  0x0001E38C:           add r12.z, cb0[46].z, l(-1.000000)
// 4003  0x0001E3AC:           max r12.z, r12.z, l(0.000000)
// 4004  0x0001E3C8:           mul r12.z, r12.z, l(0.015873)
// 4005  0x0001E3E4:           add r20.xyz, -r18.xyzx, r20.xyzx
// 4006  0x0001E404:           mad r18.xyz, r12.zzzz, r20.xyzx, r18.xyzx
// 4007  0x0001E428:           add r12.z, r16.y, l(-0.000300)
// 4008  0x0001E444:           div r12.z, l(1.000000, 1.000000, 1.000000, 1.000000), r12.z
// 4009  0x0001E46C:           mul_sat r12.z, r12.z, r17.w
// 4010  0x0001E488:           mad r16.x, r12.z, l(-2.000000), l(3.000000)
// 4011  0x0001E4AC:           mul r12.z, r12.z, r12.z
// 4012  0x0001E4C8:           mul r12.z, r12.z, r16.x
// 4013  0x0001E4E4:           rsq r12.z, r12.z
// 4014  0x0001E4F8:           div r12.z, l(1.000000, 1.000000, 1.000000, 1.000000), r12.z
// 4015  0x0001E520:           add r18.xyz, -r16.yyyy, r18.xyzx
// 4016  0x0001E540:           mad r19.xyz, r12.zzzz, r18.xyzx, r16.yyyy
// 4017  0x0001E564:         endif 
// 4018  0x0001E568:       else 
// 4019  0x0001E56C:         dp3 r12.z, r13.xyzx, l(0.212500, 0.715400, 0.072100, 0.000000)
// 4020  0x0001E594:         add r18.xyz, -r13.xyzx, r12.zzzz
// 4021  0x0001E5B4:         mad r18.xyz, cb0[45].wwww, r18.xyzx, r13.xyzx
// 4022  0x0001E5DC:         mul r18.xyz, r18.xyzx, cb0[45].xyzx
// 4023  0x0001E5FC:         movc r12.z, cb0[46].y, cb0[46].z, l(1.000000)
// 4024  0x0001E628:         mul r18.xyz, r12.zzzz, r18.xyzx
// 4025  0x0001E644:         movc r19.xyz, cb0[47].xxxx, r18.xyzx, r13.xyzx
// 4026  0x0001E66C:       endif 
// 4027  0x0001E670:       if_nz cb0[47].y
// 4028  0x0001E680:         sample_b_indexable(texture2d)(float,float,float,float) r18.xyzw, r16.zwzz, t49.xyzw, s9, l(-1.000000)
// 4029  0x0001E6B4:         sample_b_indexable(texture2d)(float,float,float,float) r13.xyz, r16.zwzz, t49.xyzw, s0, l(-1.000000)
// 4030  0x0001E6E8:         add r13.xyz, -r18.xyzx, r13.xyzx
// 4031  0x0001E708:         mad r20.yzw, r18.wwww, r13.xxyz, r18.xxyz
// 4032  0x0001E72C:         lt r12.z, l(0.000000), r20.y
// 4033  0x0001E748:         if_nz r12.z
// 4034  0x0001E754:           add r13.xyz, -r4.yzwy, cb1[19].xyzx
// 4035  0x0001E778:           dp3 r12.z, r13.xyzx, r13.xyzx
// 4036  0x0001E794:           rsq r12.z, r12.z
// 4037  0x0001E7A8:           mul r13.xyz, r12.zzzz, r13.xyzx
// 4038  0x0001E7C4:           dp3 r12.z, r13.xyzx, r3.xyzx
// 4039  0x0001E7E0:           ne r16.x, l(0.000000), cb4[36].y
// 4040  0x0001E800:           add r18.xyz, r4.yzwy, cb1[33].xyzx
// 4041  0x0001E820:           mad r21.xyz, -cb1[20].xyzx, cb4[36].yyyy, r18.xyzx
// 4042  0x0001E850:           add r18.xyz, cb1[19].xyzx, cb1[33].xyzx
// 4043  0x0001E874:           mad r18.xyz, cb1[22].wwww, cb1[20].xyzx, r18.xyzx
// 4044  0x0001E8A0:           dp3 r22.w, r18.xyzx, cb1[20].xyzx
// 4045  0x0001E8C0:           mov r21.w, l(1.000000)
// 4046  0x0001E8D4:           mov r22.xyz, cb1[20].xyzx
// 4047  0x0001E8EC:           dp4 r16.y, r21.xyzw, r22.xyzw
// 4048  0x0001E908:           ge r17.z, l(0.000000), r16.y
// 4049  0x0001E924:           mad r18.xyz, r16.yyyy, -cb1[20].xyzx, r4.yzwy
// 4050  0x0001E950:           movc r18.xyz, r17.zzzz, r4.yzwy, r18.xyzx
// 4051  0x0001E974:           mul r21.xyz, r18.yyyy, cb4[13].xywx
// 4052  0x0001E994:           mad r21.xyz, cb4[12].xywx, r18.xxxx, r21.xyzx
// 4053  0x0001E9BC:           mad r21.xyz, cb4[14].xywx, r18.zzzz, r21.xyzx
// 4054  0x0001E9E4:           add r21.xyz, r21.xyzx, cb4[15].xywx
// 4055  0x0001EA04:           div r17.zw, r21.xxxy, r21.zzzz
// 4056  0x0001EA20:           add r16.y, r17.z, l(1.000000)
// 4057  0x0001EA3C:           mul r16.y, r16.y, cb1[26].z
// 4058  0x0001EA5C:           mul r16.y, r16.y, l(0.500000)
// 4059  0x0001EA78:           add r22.xy, l(-1.000000, -1.000000, 0.000000, 0.000000), cb1[26].zwzz
// 4060  0x0001EAA4:           max r16.y, r16.y, l(0.000000)
// 4061  0x0001EAC0:           min r21.x, r22.x, r16.y
// 4062  0x0001EADC:           add r16.y, -r17.w, l(1.000000)
// 4063  0x0001EAFC:           mul r16.y, r16.y, cb1[26].w
// 4064  0x0001EB1C:           mul r16.y, r16.y, l(0.500000)
// 4065  0x0001EB38:           max r16.y, r16.y, l(0.000000)
// 4066  0x0001EB54:           min r21.y, r22.y, r16.y
// 4067  0x0001EB70:           movc r22.xyz, r16.xxxx, r18.xyzx, r4.yzwy
// 4068  0x0001EB94:           movc r18.xyz, r16.xxxx, r21.xyzx, v8.xywx
// 4069  0x0001EBB8:           add r16.xy, r18.xyxx, -cb1[26].xyxx
// 4070  0x0001EBDC:           ftou r16.xy, r16.xyxx
// 4071  0x0001EBF0:           ushr r16.xy, r16.xyxx, cb3[25].xxxx
// 4072  0x0001EC10:           imad r16.x, r16.y, cb3[25].y, r16.x
// 4073  0x0001EC38:           imad r16.x, r16.x, cb3[24].z, cb3[24].y
// 4074  0x0001EC64:           mul r16.y, r18.z, cb3[26].x
// 4075  0x0001EC84:           max r16.y, r16.y, l(0.000000)
// 4076  0x0001ECA0:           min r16.y, r16.y, cb3[26].y
// 4077  0x0001ECC0:           ftou r16.y, r16.y
// 4078  0x0001ECD4:           imad r16.y, r16.y, cb3[24].z, cb3[24].x
// 4079  0x0001ED00:           mov r22.w, l(1.000000)
// 4080  0x0001ED14:           mov r18.xyz, l(0,0,0,0)
// 4081  0x0001ED34:           mov r21.xyz, l(0,0,0,0)
// 4082  0x0001ED54:           mov r23.xyz, l(0,0,0,0)
// 4083  0x0001ED74:           mov r24.xyz, l(0,0,0,0)
// 4084  0x0001ED94:           mov r25.xyz, l(0,0,0,0)
// 4085  0x0001EDB4:           mov r26.xyz, l(0,0,0,0)
// 4086  0x0001EDD4:           mov r17.zw, l(0,0,0,0)
// 4087  0x0001EDF4:           mov r19.w, l(0)
// 4088  0x0001EE08:           loop 
// 4089  0x0001EE0C:             ult r21.w, r19.w, cb3[24].z
// 4090  0x0001EE2C:             not r23.w, r17.w
// 4091  0x0001EE40:             and r21.w, r21.w, r23.w
// 4092  0x0001EE5C:             breakc_z r21.w
// 4093  0x0001EE68:             iadd r21.w, r16.x, r19.w
// 4094  0x0001EE84:             ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r21.w, r21.w, l(0), t13.xxxx
// 4095  0x0001EEB0:             iadd r23.w, r16.y, r19.w
// 4096  0x0001EECC:             ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r23.w, r23.w, l(0), t13.xxxx
// 4097  0x0001EEF8:             and r21.w, r21.w, r23.w
// 4098  0x0001EF14:             ishl r23.w, r19.w, l(5)
// 4099  0x0001EF30:             mov r27.xyz, r18.xyzx
// 4100  0x0001EF44:             mov r28.xyz, r21.xyzx
// 4101  0x0001EF58:             mov r29.xyz, r23.xyzx
// 4102  0x0001EF6C:             mov r30.xyz, r24.xyzx
// 4103  0x0001EF80:             mov r31.xyz, r25.xyzx
// 4104  0x0001EF94:             mov r32.xyz, r26.xyzx
// 4105  0x0001EFA8:             mov r24.w, r17.z
// 4106  0x0001EFBC:             mov r25.w, r17.w
// 4107  0x0001EFD0:             mov r26.w, r21.w
// 4108  0x0001EFE4:             loop 
// 4109  0x0001EFE8:               breakc_z r26.w
// 4110  0x0001EFF4:               firstbit_lo r27.w, r26.w
// 4111  0x0001F008:               iadd r27.w, r23.w, r27.w
// 4112  0x0001F024:               iadd r28.w, r26.w, l(-1)
// 4113  0x0001F040:               and r28.w, r26.w, r28.w
// 4114  0x0001F05C:               imul null, r27.w, r27.w, l(6)
// 4115  0x0001F07C:               dp4 r33.x, r22.xyzw, cb3[r27.w + 1180].xyzw
// 4116  0x0001F0A4:               dp4 r33.y, r22.xyzw, cb3[r27.w + 1181].xyzw
// 4117  0x0001F0CC:               dp4 r33.z, r22.xyzw, cb3[r27.w + 1182].xyzw
// 4118  0x0001F0F4:               add r34.xyz, r33.xyzx, -cb3[r27.w + 1183].xyzx
// 4119  0x0001F120:               mul_sat r34.xyz, r34.xyzx, cb3[r27.w + 1185].xyzx
// 4120  0x0001F148:               add r33.xyz, -r33.xyzx, cb3[r27.w + 1184].xyzx
// 4121  0x0001F174:               mul_sat r33.xyz, r33.xyzx, cb3[r27.w + 1185].xyzx
// 4122  0x0001F19C:               min r29.w, r34.z, r34.y
// 4123  0x0001F1B8:               min r29.w, r29.w, r34.x
// 4124  0x0001F1D4:               min r30.w, r33.z, r33.y
// 4125  0x0001F1F0:               min r30.w, r30.w, r33.x
// 4126  0x0001F20C:               min r29.w, r29.w, r30.w
// 4127  0x0001F228:               eq r30.w, r29.w, l(0.000000)
// 4128  0x0001F244:               if_nz r30.w
// 4129  0x0001F250:                 mov r26.w, r28.w
// 4130  0x0001F264:                 continue 
// 4131  0x0001F268:               endif 
// 4132  0x0001F26C:               mul r30.w, r29.w, r29.w
// 4133  0x0001F288:               mad r29.w, r29.w, l(-2.000000), l(3.000000)
// 4134  0x0001F2AC:               mul r29.w, r29.w, r30.w
// 4135  0x0001F2C8:               add r30.w, -r24.w, l(1.000000)
// 4136  0x0001F2E8:               mul r31.w, r29.w, r30.w
// 4137  0x0001F304:               mad r29.w, r29.w, r30.w, r24.w
// 4138  0x0001F328:               imul null, r27.w, l(9), cb3[r27.w + 1185].w
// 4139  0x0001F354:               dp4 r33.x, r22.xyzw, cb2[r27.w + 0].xyzw
// 4140  0x0001F378:               dp4 r33.y, r22.xyzw, cb2[r27.w + 1].xyzw
// 4141  0x0001F3A0:               dp4 r30.w, r22.xyzw, cb2[r27.w + 2].xyzw
// 4142  0x0001F3C8:               mul r33.z, r30.w, l(0.166667)
// 4143  0x0001F3E4:               max r33.xyz, r33.xyzx, cb2[r27.w + 3].xyzx
// 4144  0x0001F40C:               min r33.xyz, r33.xyzx, cb2[r27.w + 4].xyzx
// 4145  0x0001F434:               mul r33.w, r33.z, l(6.000000)
// 4146  0x0001F450:               mad r33.xyz, r33.xywx, cb2[r27.w + 6].xyzx, cb2[r27.w + 7].xyzx
// 4147  0x0001F48C:               mul r33.w, r33.z, l(0.166667)
// 4148  0x0001F4A8:               sample_l_indexable(texture3d)(float,float,float,float) r34.xyz, r33.xywx, t16.xyzw, s1, l(0.000000)
// 4149  0x0001F4DC:               mul r34.xyz, r34.xyzx, cb2[r27.w + 5].xyzx
// 4150  0x0001F504:               add r35.xyz, r33.xywx, l(0.000000, 0.000000, 0.166667, 0.000000)
// 4151  0x0001F52C:               sample_l_indexable(texture3d)(float,float,float,float) r35.xyz, r35.xyzx, t16.xyzw, s1, l(0.000000)
// 4152  0x0001F560:               mul r35.xyz, r35.xyzx, cb2[r27.w + 5].xyzx
// 4153  0x0001F588:               add r36.xyz, r33.xywx, l(0.000000, 0.000000, 0.333333, 0.000000)
// 4154  0x0001F5B0:               sample_l_indexable(texture3d)(float,float,float,float) r36.xyz, r36.xyzx, t16.xyzw, s1, l(0.000000)
// 4155  0x0001F5E4:               mul r36.xyz, r36.xyzx, cb2[r27.w + 5].xyzx
// 4156  0x0001F60C:               add r37.xyz, r33.xywx, l(0.000000, 0.000000, 0.500000, 0.000000)
// 4157  0x0001F634:               sample_l_indexable(texture3d)(float,float,float,float) r37.xyz, r37.xyzx, t16.xyzw, s1, l(0.000000)
// 4158  0x0001F668:               mul r37.xyz, r37.xyzx, cb2[r27.w + 5].xyzx
// 4159  0x0001F690:               add r38.xyz, r33.xywx, l(0.000000, 0.000000, 0.666667, 0.000000)
// 4160  0x0001F6B8:               sample_l_indexable(texture3d)(float,float,float,float) r38.xyz, r38.xyzx, t16.xyzw, s1, l(0.000000)
// 4161  0x0001F6EC:               mul r38.xyz, r38.xyzx, cb2[r27.w + 5].xyzx
// 4162  0x0001F714:               add r33.xyz, r33.xywx, l(0.000000, 0.000000, 0.833333, 0.000000)
// 4163  0x0001F73C:               sample_l_indexable(texture3d)(float,float,float,float) r33.xyz, r33.xyzx, t16.xyzw, s1, l(0.000000)
// 4164  0x0001F770:               mul r33.xyz, r33.xyzx, cb2[r27.w + 5].xyzx
// 4165  0x0001F798:               mad r34.xyz, r31.wwww, r34.xyzx, r27.xyzx
// 4166  0x0001F7BC:               mad r35.xyz, r31.wwww, r35.xyzx, r28.xyzx
// 4167  0x0001F7E0:               mad r36.xyz, r31.wwww, r36.xyzx, r29.xyzx
// 4168  0x0001F804:               mad r37.xyz, r31.wwww, r37.xyzx, r30.xyzx
// 4169  0x0001F828:               mad r38.xyz, r31.wwww, r38.xyzx, r31.xyzx
// 4170  0x0001F84C:               mad r33.xyz, r31.wwww, r33.xyzx, r32.xyzx
// 4171  0x0001F870:               lt r27.w, l(0.990000), r29.w
// 4172  0x0001F88C:               if_nz r27.w
// 4173  0x0001F898:                 mov r27.xyz, r34.xyzx
// 4174  0x0001F8AC:                 mov r28.xyz, r35.xyzx
// 4175  0x0001F8C0:                 mov r29.xyz, r36.xyzx
// 4176  0x0001F8D4:                 mov r30.xyz, r37.xyzx
// 4177  0x0001F8E8:                 mov r31.xyz, r38.xyzx
// 4178  0x0001F8FC:                 mov r32.xyz, r33.xyzx
// 4179  0x0001F910:                 mov r24.w, r29.w
// 4180  0x0001F924:                 mov r25.w, l(-1)
// 4181  0x0001F938:                 break 
// 4182  0x0001F93C:               endif 
// 4183  0x0001F940:               mov r27.xyz, r34.xyzx
// 4184  0x0001F954:               mov r28.xyz, r35.xyzx
// 4185  0x0001F968:               mov r29.xyz, r36.xyzx
// 4186  0x0001F97C:               mov r30.xyz, r37.xyzx
// 4187  0x0001F990:               mov r31.xyz, r38.xyzx
// 4188  0x0001F9A4:               mov r32.xyz, r33.xyzx
// 4189  0x0001F9B8:               mov r24.w, r29.w
// 4190  0x0001F9CC:               mov r26.w, r28.w
// 4191  0x0001F9E0:             endloop 
// 4192  0x0001F9E4:             mov r18.xyz, r27.xyzx
// 4193  0x0001F9F8:             mov r21.xyz, r28.xyzx
// 4194  0x0001FA0C:             mov r23.xyz, r29.xyzx
// 4195  0x0001FA20:             mov r24.xyz, r30.xyzx
// 4196  0x0001FA34:             mov r25.xyz, r31.xyzx
// 4197  0x0001FA48:             mov r26.xyz, r32.xyzx
// 4198  0x0001FA5C:             mov r17.z, r24.w
// 4199  0x0001FA70:             mov r17.w, r25.w
// 4200  0x0001FA84:             iadd r19.w, r19.w, l(1)
// 4201  0x0001FAA0:           endloop 
// 4202  0x0001FAA4:           lt r16.x, r17.z, l(0.990000)
// 4203  0x0001FAC0:           if_nz r16.x
// 4204  0x0001FACC:             add r16.x, -r17.z, l(1.000000)
// 4205  0x0001FAEC:             dp2 r22.x, cb3[7].xwxx, l(1.000000, 1.000000, 0.000000, 0.000000)
// 4206  0x0001FB18:             dp2 r22.y, cb3[8].xwxx, l(1.000000, 1.000000, 0.000000, 0.000000)
// 4207  0x0001FB44:             dp2 r22.z, cb3[9].xwxx, l(1.000000, 1.000000, 0.000000, 0.000000)
// 4208  0x0001FB70:             mad r18.xyz, r16.xxxx, r22.xyzx, r18.xyzx
// 4209  0x0001FB94:             dp2 r22.x, cb3[7].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
// 4210  0x0001FBC0:             dp2 r22.y, cb3[8].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
// 4211  0x0001FBEC:             dp2 r22.z, cb3[9].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
// 4212  0x0001FC18:             mad r21.xyz, r16.xxxx, r22.xyzx, r21.xyzx
// 4213  0x0001FC3C:             dp2 r22.x, cb3[7].zwzz, l(1.000000, 1.000000, 0.000000, 0.000000)
// 4214  0x0001FC68:             dp2 r22.y, cb3[8].zwzz, l(1.000000, 1.000000, 0.000000, 0.000000)
// 4215  0x0001FC94:             dp2 r22.z, cb3[9].zwzz, l(1.000000, 1.000000, 0.000000, 0.000000)
// 4216  0x0001FCC0:             mad r23.xyz, r16.xxxx, r22.xyzx, r23.xyzx
// 4217  0x0001FCE4:             dp2 r22.x, cb3[7].xwxx, l(-1.000000, 1.000000, 0.000000, 0.000000)
// 4218  0x0001FD10:             dp2 r22.y, cb3[8].xwxx, l(-1.000000, 1.000000, 0.000000, 0.000000)
// 4219  0x0001FD3C:             dp2 r22.z, cb3[9].xwxx, l(-1.000000, 1.000000, 0.000000, 0.000000)
// 4220  0x0001FD68:             mad r24.xyz, r16.xxxx, r22.xyzx, r24.xyzx
// 4221  0x0001FD8C:             dp2 r22.x, cb3[7].ywyy, l(-1.000000, 1.000000, 0.000000, 0.000000)
// 4222  0x0001FDB8:             dp2 r22.y, cb3[8].ywyy, l(-1.000000, 1.000000, 0.000000, 0.000000)
// 4223  0x0001FDE4:             dp2 r22.z, cb3[9].ywyy, l(-1.000000, 1.000000, 0.000000, 0.000000)
// 4224  0x0001FE10:             mad r25.xyz, r16.xxxx, r22.xyzx, r25.xyzx
// 4225  0x0001FE34:             dp2 r22.x, cb3[7].zwzz, l(-1.000000, 1.000000, 0.000000, 0.000000)
// 4226  0x0001FE60:             dp2 r22.y, cb3[8].zwzz, l(-1.000000, 1.000000, 0.000000, 0.000000)
// 4227  0x0001FE8C:             dp2 r22.z, cb3[9].zwzz, l(-1.000000, 1.000000, 0.000000, 0.000000)
// 4228  0x0001FEB8:             mad r26.xyz, r16.xxxx, r22.xyzx, r26.xyzx
// 4229  0x0001FEDC:           endif 
// 4230  0x0001FEE0:           mul r22.xyz, r9.xyzx, r14.yyyy
// 4231  0x0001FEFC:           mad r22.xyz, r14.xxxx, v6.xyzx, r22.xyzx
// 4232  0x0001FF20:           mad r22.xyz, r14.zzzz, r3.xyzx, r22.xyzx
// 4233  0x0001FF44:           dp3 r16.x, r22.xyzx, r22.xyzx
// 4234  0x0001FF60:           rsq r16.x, r16.x
// 4235  0x0001FF74:           mul r16.xy, r16.xxxx, r22.xyxx
// 4236  0x0001FF90:           dp3 r17.z, r18.xyzx, l(0.212500, 0.715400, 0.072100, 0.000000)
// 4237  0x0001FFB8:           max r18.xy, r16.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
// 4238  0x0001FFE0:           dp3 r17.w, r24.xyzx, l(0.212500, 0.715400, 0.072100, 0.000000)
// 4239  0x00020008:           max r16.xy, -r16.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
// 4240  0x00020034:           mul r17.w, r16.x, r17.w
// 4241  0x00020050:           mad r22.x, r17.z, r18.x, -r17.w
// 4242  0x00020078:           dp3 r17.z, r21.xyzx, l(0.212500, 0.715400, 0.072100, 0.000000)
// 4243  0x000200A0:           dp3 r17.w, r25.xyzx, l(0.212500, 0.715400, 0.072100, 0.000000)
// 4244  0x000200C8:           mul r16.y, r16.y, r17.w
// 4245  0x000200E4:           mad r22.y, r17.z, r18.y, -r16.y
// 4246  0x0002010C:           dp3 r16.y, r23.xyzx, l(0.212500, 0.715400, 0.072100, 0.000000)
// 4247  0x00020134:           dp3 r17.z, r26.xyzx, l(0.212500, 0.715400, 0.072100, 0.000000)
// 4248  0x0002015C:           mul r16.x, r16.x, r17.z
// 4249  0x00020178:           mad r22.z, r16.y, r18.y, -r16.x
// 4250  0x000201A0:           mad r18.xyz, r13.xyzx, l(0.001000, 0.001000, 0.001000, 0.000000), r22.xyzx
// 4251  0x000201D0:           dp3 r16.x, cb3[20].xyzx, l(0.212500, 0.715400, 0.072100, 0.000000)
// 4252  0x000201FC:           mad r18.xyz, cb3[19].xyzx, r16.xxxx, r18.xyzx
// 4253  0x00020224:           dp3 r16.x, r18.xyzx, r18.xyzx
// 4254  0x00020240:           rsq r16.x, r16.x
// 4255  0x00020254:           mul r18.xyz, r16.xxxx, r18.xyzx
// 4256  0x00020270:           dp3 r13.x, r13.xyzx, r18.xyzx
// 4257  0x0002028C:           add r12.z, r12.z, r13.x
// 4258  0x000202A8:           add r20.x, r12.z, r20.z
// 4259  0x000202C4:           sample_l_indexable(texture2d)(float,float,float,float) r13.xyz, r20.xwxx, t46.xyzw, s9, l(0.000000)
// 4260  0x000202F8:           if_nz cb0[48].y
// 4261  0x00020308:             sample_b_indexable(texture2d)(float,float,float,float) r18.xyz, r20.xwxx, t46.xyzw, s10, l(-1.000000)
// 4262  0x0002033C:           else 
// 4263  0x00020340:             sample_b_indexable(texture2d)(float,float,float,float) r18.xyz, r20.xwxx, t46.xyzw, s0, l(-1.000000)
// 4264  0x00020374:           endif 
// 4265  0x00020378:           add r18.xyz, -r13.xyzx, r18.xyzx
// 4266  0x00020398:           mad r13.xyz, r18.wwww, r18.xyzx, r13.xyzx
// 4267  0x000203BC:           mul_sat r18.xyz, r13.xyzx, cb0[46].wwww
// 4268  0x000203DC:           dp3 r12.z, r18.xyzx, l(0.212500, 0.715400, 0.072100, 0.000000)
// 4269  0x00020404:           max r16.x, r13.z, r13.y
// 4270  0x00020420:           max r16.x, r13.x, r16.x
// 4271  0x0002043C:           mul r16.x, r16.x, cb0[46].w
// 4272  0x0002045C:           log r16.x, r16.x
// 4273  0x00020470:           mul r16.x, r16.x, cb0[12].y
// 4274  0x00020490:           exp r16.x, r16.x
// 4275  0x000204A4:           min r16.x, r16.x, l(1.000000)
// 4276  0x000204C0:           add r16.y, -cb0[12].x, cb0[12].z
// 4277  0x000204E8:           mad r16.x, r16.x, r16.y, cb0[12].x
// 4278  0x00020510:           max r13.xyz, r13.xyzx, l(0.000300, 0.000300, 0.000300, 0.000000)
// 4279  0x00020538:           dp3 r16.y, r13.xyzx, r13.xyzx
// 4280  0x00020554:           rsq r16.y, r16.y
// 4281  0x00020568:           mul r13.xyz, r13.xyzx, r16.yyyy
// 4282  0x00020584:           mul r13.xyz, r13.xyzx, l(1.060000, 1.060000, 1.060000, 0.000000)
// 4283  0x000205AC:           mul r18.xyz, r13.xyzx, r16.xxxx
// 4284  0x000205C8:           mul r20.xzw, r13.xxyz, cb0[12].xxxx
// 4285  0x000205E8:           mul r20.xzw, r20.xxzw, l(1.732000, 0.000000, 1.732000, 1.732000)
// 4286  0x00020610:           dp3 r16.x, r13.xyzx, r13.xyzx
// 4287  0x0002062C:           sqrt r16.x, r16.x
// 4288  0x00020640:           div r20.xzw, r20.xxzw, r16.xxxx
// 4289  0x0002065C:           dp3 r13.x, r13.xyzx, l(0.212500, 0.715400, 0.072100, 0.000000)
// 4290  0x00020684:           div r13.xyz, r20.xzwx, r13.xxxx
// 4291  0x000206A0:           max r13.xyz, r18.xyzx, r13.xyzx
// 4292  0x000206BC:           mad r18.xyz, r12.zzzz, cb0[46].wwww, r13.xyzx
// 4293  0x000206E4:           min r18.xyz, r18.xyzx, cb0[12].zzzz
// 4294  0x00020704:           add r16.x, cb0[46].w, l(-1.000000)
// 4295  0x00020724:           max r16.x, r16.x, l(0.000000)
// 4296  0x00020740:           div r16.x, r16.x, cb0[11].w
// 4297  0x00020760:           add r18.xyz, -r13.xyzx, r18.xyzx
// 4298  0x00020780:           mad r13.xyz, r16.xxxx, r18.xyzx, r13.xyzx
// 4299  0x000207A4:           add r16.x, cb0[12].x, l(-0.000300)
// 4300  0x000207C4:           add r12.z, r12.z, l(-0.000300)
// 4301  0x000207E0:           div r16.x, l(1.000000, 1.000000, 1.000000, 1.000000), r16.x
// 4302  0x00020808:           mul_sat r12.z, r12.z, r16.x
// 4303  0x00020824:           mad r16.x, r12.z, l(-2.000000), l(3.000000)
// 4304  0x00020848:           mul r12.z, r12.z, r12.z
// 4305  0x00020864:           mul r12.z, r12.z, r16.x
// 4306  0x00020880:           rsq r12.z, r12.z
// 4307  0x00020894:           div r12.z, l(1.000000, 1.000000, 1.000000, 1.000000), r12.z
// 4308  0x000208BC:           add r13.xyz, r13.xyzx, -cb0[12].xxxx
// 4309  0x000208E0:           mad r13.xyz, r12.zzzz, r13.xyzx, cb0[12].xxxx
// 4310  0x00020908:           add r13.xyz, -r19.xyzx, r13.xyzx
// 4311  0x00020928:           mad r13.xyz, r20.yyyy, r13.xyzx, r19.xyzx
// 4312  0x0002094C:           add r12.z, -r20.y, l(1.000000)
// 4313  0x0002096C:           mul r15.y, r12.z, r15.y
// 4314  0x00020988:         else 
// 4315  0x0002098C:           mov r13.xyz, r19.xyzx
// 4316  0x000209A0:         endif 
// 4317  0x000209A4:       else 
// 4318  0x000209A8:         mov r13.xyz, r19.xyzx
// 4319  0x000209BC:       endif 
// 4320  0x000209C0:       lt r12.z, l(0.000000), cb0[43].w
// 4321  0x000209E0:       if_nz r12.z
// 4322  0x000209EC:         add r12.z, r13.w, l(-0.078431)
// 4323  0x00020A08:         mul_sat r12.z, r12.z, l(1.085106)
// 4324  0x00020A24:         sample_b_indexable(texture2d)(float,float,float,float) r13.w, r16.zwzz, t23.yzwx, s0, l(-1.000000)
// 4325  0x00020A58:         min r13.w, r13.w, cb0[44].z
// 4326  0x00020A78:         add r13.w, -r13.w, l(1.000000)
// 4327  0x00020A98:         mul r16.x, r13.w, cb0[43].w
// 4328  0x00020AB8:         mad r13.w, r16.x, l(-0.500000), r13.w
// 4329  0x00020ADC:         add r6.z, r6.z, l(-0.500000)
// 4330  0x00020AF8:         add r6.z, r6.z, r6.z
// 4331  0x00020B14:         add r16.x, cb0[43].w, l(-1.000000)
// 4332  0x00020B34:         mul_sat r16.x, r16.x, l(-6.666668)
// 4333  0x00020B50:         mad r16.y, r16.x, l(-2.000000), l(3.000000)
// 4334  0x00020B74:         mul r16.x, r16.x, r16.x
// 4335  0x00020B90:         mul r16.x, r16.x, r16.y
// 4336  0x00020BAC:         mul r6.z, r6.z, r16.x
// 4337  0x00020BC8:         mad_sat r6.z, cb0[43].w, r6.z, cb0[43].w
// 4338  0x00020BF4:         lt r16.x, l(0.000000), cb0[44].y
// 4339  0x00020C14:         movc r16.x, r16.x, l(0.500000), l(0.250000)
// 4340  0x00020C38:         mad r16.x, cb0[44].y, r16.x, l(0.500000)
// 4341  0x00020C60:         mul r16.x, r16.x, l(0.500000)
// 4342  0x00020C7C:         movc r16.x, cb0[47].z, l(0.500000), r16.x
// 4343  0x00020CA4:         mul r16.y, cb0[44].x, cb0[44].x
// 4344  0x00020CC8:         log r12.z, r12.z
// 4345  0x00020CDC:         mul r12.z, r12.z, r16.y
// 4346  0x00020CF8:         exp r12.z, r12.z
// 4347  0x00020D0C:         add r12.z, r6.z, -r12.z
// 4348  0x00020D2C:         max r12.z, r12.z, l(0.000000)
// 4349  0x00020D48:         add r16.y, r12.z, r12.z
// 4350  0x00020D64:         min r16.y, r16.y, l(1.000000)
// 4351  0x00020D80:         mad r16.y, cb0[44].y, r6.z, r16.y
// 4352  0x00020DA8:         add r16.y, r13.w, -r16.y
// 4353  0x00020DC8:         mul_sat r16.y, r16.y, l(10.000000)
// 4354  0x00020DE4:         mad r17.z, r16.y, l(-2.000000), l(3.000000)
// 4355  0x00020E08:         mul r16.y, r16.y, r16.y
// 4356  0x00020E24:         mul r16.y, r16.y, r17.z
// 4357  0x00020E40:         mad r17.z, r13.w, l(0.400000), l(-0.500000)
// 4358  0x00020E64:         mad r17.z, r6.z, r17.z, l(0.700000)
// 4359  0x00020E88:         add r18.xyz, r13.xyzx, -r17.zzzz
// 4360  0x00020EA8:         mad r18.xyz, r16.yyyy, r18.xyzx, r17.zzzz
// 4361  0x00020ECC:         movc r18.xyz, cb0[47].zzzz, r18.xyzx, r13.xyzx
// 4362  0x00020EF4:         add r16.y, r16.x, l(1.000000)
// 4363  0x00020F10:         mad_sat r12.z, r12.z, r16.y, -r16.x
// 4364  0x00020F38:         add r12.z, -r12.z, r13.w
// 4365  0x00020F58:         mul_sat r12.z, r12.z, l(10.000000)
// 4366  0x00020F74:         mad r16.x, r12.z, l(-2.000000), l(3.000000)
// 4367  0x00020F98:         mul r12.z, r12.z, r12.z
// 4368  0x00020FB4:         mul r12.z, r12.z, r16.x
// 4369  0x00020FD0:         mul r17.x, r12.z, r17.x
// 4370  0x00020FEC:         mul r16.xy, r6.zzzz, l(0.300000, 2.857143, 0.000000, 0.000000)
// 4371  0x00021014:         mad r20.xyz, r18.xyzx, r13.wwww, -r18.xyzx
// 4372  0x0002103C:         mad r13.xyz, r16.xxxx, r20.xyzx, r18.xyzx
// 4373  0x00021060:         or r12.z, cb0[47].w, cb0[47].x
// 4374  0x00021084:         min r16.x, r16.y, l(1.000000)
// 4375  0x000210A0:         mad r16.y, r16.x, l(-2.000000), l(3.000000)
// 4376  0x000210C4:         mul r16.x, r16.x, r16.x
// 4377  0x000210E0:         mul r16.x, r16.x, r16.y
// 4378  0x000210FC:         ge r13.w, r16.x, r13.w
// 4379  0x00021118:         and r13.w, r13.w, l(0x3f800000)
// 4380  0x00021134:         add r16.x, -r15.x, l(0.800000)
// 4381  0x00021154:         mad r13.w, r13.w, r16.x, r15.x
// 4382  0x00021178:         movc r15.x, r12.z, r15.x, r13.w
// 4383  0x0002119C:       else 
// 4384  0x000211A0:         mov r6.z, cb0[43].w
// 4385  0x000211B8:       endif 
// 4386  0x000211BC:       add r16.xy, r16.zwzz, l(-0.500000, -0.500000, 0.000000, 0.000000)
// 4387  0x000211E4:       add r17.zw, r14.xxxy, -r16.xxxy
// 4388  0x00021204:       mad r14.xy, r17.xxxx, r17.zwzz, r16.xyxx
// 4389  0x00021228:       if_nz r11.w
// 4390  0x00021234:         mul_sat r11.w, r10.w, l(2.222222)
// 4391  0x00021250:         rsq r12.z, r11.w
// 4392  0x00021264:         div r12.z, l(1.000000, 1.000000, 1.000000, 1.000000), r12.z
// 4393  0x0002128C:         add r13.w, -r16.w, r12.z
// 4394  0x000212AC:         lt r16.x, r12.z, r16.w
// 4395  0x000212C8:         if_nz r16.x
// 4396  0x000212D4:           log r16.x, |r13.w|
// 4397  0x000212EC:           mul r16.x, r16.x, l(0.200000)
// 4398  0x00021308:           exp r16.x, r16.x
// 4399  0x0002131C:           add r16.x, -r16.x, l(1.000000)
// 4400  0x0002133C:           mul r17.x, r16.x, r17.x
// 4401  0x00021358:           mov r13.xyz, l(0,0,0,0)
// 4402  0x00021378:         else 
// 4403  0x0002137C:           mul_sat r10.w, r10.w, l(1.111111)
// 4404  0x00021398:           add r12.z, r12.z, r13.w
// 4405  0x000213B4:           mad r12.z, |r13.w|, l(0.300000), r12.z
// 4406  0x000213DC:           log r16.x, r16.w
// 4407  0x000213F0:           mul r16.x, r16.x, l(0.200000)
// 4408  0x0002140C:           exp r16.x, r16.x
// 4409  0x00021420:           add r12.z, r12.z, l(-1.000000)
// 4410  0x0002143C:           mad r16.y, r16.x, r12.z, l(1.000000)
// 4411  0x00021460:           lt r12.z, r16.y, l(1.000000)
// 4412  0x0002147C:           if_nz r12.z
// 4413  0x00021488:             mov r16.x, r16.z
// 4414  0x0002149C:             mov_sat r16.xy, r16.xyxx
// 4415  0x000214B0:             sample_b_indexable(texture2d)(float,float,float,float) r18.xyzw, r16.xyxx, t45.xyzw, s0, l(-1.000000)
// 4416  0x000214E4:             dp3 r12.z, r18.xyzx, l(0.299000, 0.587000, 0.114000, 0.000000)
// 4417  0x0002150C:             add r16.x, -r12.z, l(0.300000)
// 4418  0x0002152C:             mad r12.z, r16.x, l(0.800000), r12.z
// 4419  0x00021550:             log r13.w, |r13.w|
// 4420  0x00021568:             mul r16.xy, r13.wwww, l(0.200000, 0.100000, 0.000000, 0.000000)
// 4421  0x00021590:             exp r16.xy, r16.xyxx
// 4422  0x000215A4:             mul_sat r13.w, r18.w, l(12.750000)
// 4423  0x000215C0:             add r17.z, -r16.y, l(1.000000)
// 4424  0x000215E0:             mad r11.w, r11.w, r17.z, r16.y
// 4425  0x00021604:             mul r18.xyz, r11.wwww, r13.xyzx
// 4426  0x00021620:             mad r20.xyz, r12.zzzz, r16.xxxx, -r18.xyzx
// 4427  0x00021648:             mad r13.xyz, r13.wwww, r20.xyzx, r18.xyzx
// 4428  0x0002166C:             max r17.x, r13.w, r17.x
// 4429  0x00021688:             add r18.xyz, -r14.xyzx, l(0.000000, 0.000000, 1.000000, 0.000000)
// 4430  0x000216B4:             mad r14.xyz, r13.wwww, r18.xyzx, r14.xyzx
// 4431  0x000216D8:             mad r15.y, r13.w, -r15.y, r15.y
// 4432  0x00021700:             add r12.z, -r15.x, l(0.800000)
// 4433  0x00021720:             mad r15.x, r13.w, r12.z, r15.x
// 4434  0x00021744:             add r12.z, -r17.y, l(1.000000)
// 4435  0x00021764:             mad r17.y, r13.w, r12.z, r17.y
// 4436  0x00021788:             add r11.w, -r1.z, r11.w
// 4437  0x000217A8:             mad r1.z, r13.w, r11.w, r1.z
// 4438  0x000217CC:           else 
// 4439  0x000217D0:             mov r14.w, r14.z
// 4440  0x000217E4:             mov r14.xyz, r14.xywx
// 4441  0x000217F8:           endif 
// 4442  0x000217FC:           ge r11.w, r10.w, l(0.500000)
// 4443  0x00021818:           and r11.w, r11.w, l(0x3f800000)
// 4444  0x00021834:           add r10.w, r10.w, l(-1.000000)
// 4445  0x00021850:           mul r10.w, r10.w, l(-2.000000)
// 4446  0x0002186C:           min r10.w, r10.w, l(1.000000)
// 4447  0x00021888:           mad r12.z, r10.w, l(-2.000000), l(3.000000)
// 4448  0x000218AC:           mul r10.w, r10.w, r10.w
// 4449  0x000218C8:           mul r10.w, r10.w, r12.z
// 4450  0x000218E4:           log r10.w, r10.w
// 4451  0x000218F8:           mul r10.w, r10.w, l(20.000000)
// 4452  0x00021914:           exp r10.w, r10.w
// 4453  0x00021928:           mul r10.w, r10.w, r11.w
// 4454  0x00021944:           mul r18.xyz, r10.wwww, r13.xyzx
// 4455  0x00021960:           mad r13.xyz, r18.xyzx, l(9.000000, 9.000000, 9.000000, 0.000000), r13.xyzx
// 4456  0x00021990:         endif 
// 4457  0x00021994:       endif 
// 4458  0x00021998:       if_z r9.w
// 4459  0x000219A4:         mul r18.xyz, r15.wwww, r19.xyzx
// 4460  0x000219C0:         add r18.xyz, r18.xyzx, r18.xyzx
// 4461  0x000219DC:         movc r18.xyz, cb0[48].wwww, r18.xyzx, l(0,0,0,0)
// 4462  0x00021A10:         add r9.w, -cb0[49].x, cb4[39].z
// 4463  0x00021A38:         lt r10.w, r9.w, l(2.000000)
// 4464  0x00021A54:         mad r9.w, -r9.w, l(0.500000), l(1.000000)
// 4465  0x00021A7C:         mul r11.w, r9.w, r9.w
// 4466  0x00021A98:         mul r11.w, r11.w, r11.w
// 4467  0x00021AB4:         mad r19.xyz, r9.wwww, r11.wwww, r13.xyzx
// 4468  0x00021AD8:         movc r13.xyz, r10.wwww, r19.xyzx, r13.xyzx
// 4469  0x00021AFC:         mul r15.z, r17.x, r17.y
// 4470  0x00021B18:         add r17.yzw, r13.xxyz, r13.xxyz
// 4471  0x00021B34:         movc r17.yzw, cb0[13].zzzz, r17.yyzw, r13.xxyz
// 4472  0x00021B5C:         mul r16.xy, r16.zwzz, l(8.000000, 8.000000, 0.000000, 0.000000)
// 4473  0x00021B84:         round_ni r16.xy, r16.xyxx
// 4474  0x00021B98:         add r9.w, r16.y, r16.x
// 4475  0x00021BB4:         mul r9.w, r9.w, l(0.500000)
// 4476  0x00021BD0:         frc r9.w, r9.w
// 4477  0x00021BE4:         dp3 r10.w, r17.yzwy, l(0.212500, 0.715400, 0.072100, 0.000000)
// 4478  0x00021C0C:         mul_sat r10.w, r10.w, l(0.600000)
// 4479  0x00021C28:         add r10.w, r10.w, l(0.200000)
// 4480  0x00021C44:         mad r9.w, r9.w, l(0.200200), r10.w
// 4481  0x00021C68:         mul r9.w, r2.w, r9.w
// 4482  0x00021C84:         mul r16.z, r15.z, l(0.900000)
// 4483  0x00021CA0:         movc r17.yzw, cb0[13].xxxx, r9.wwww, r17.yyzw
// 4484  0x00021CC8:         movc r19.xyz, cb0[13].xxxx, l(0,0,1.000000,0), r14.xyzx
// 4485  0x00021CFC:         mov r16.xy, l(0.800000,0,0,0)
// 4486  0x00021D1C:         movc r16.xyz, cb0[13].xxxx, r16.xyzx, r15.xyzx
// 4487  0x00021D44:         movc r20.xyz, cb0[13].xxxx, l(0,0,0,0), r11.xyzx
// 4488  0x00021D78:         movc_sat r13.xyz, r8.wwww, r17.yzwy, r13.xyzx
// 4489  0x00021D9C:         movc r14.xyz, r8.wwww, r19.xyzx, r14.xyzx
// 4490  0x00021DC0:         movc r11.xyz, r8.wwww, r20.xyzx, r11.xyzx
// 4491  0x00021DE4:         movc r15.xyz, r8.wwww, r16.xyzx, r15.xyzx
// 4492  0x00021E08:         add r13.xyz, -r5.xyzx, r13.xyzx
// 4493  0x00021E28:         mad r5.xyz, r15.zzzz, r13.xyzx, r5.xyzx
// 4494  0x00021E4C:         add r13.xyz, -r7.xyzx, r14.xyzx
// 4495  0x00021E6C:         mad r13.xyz, r15.zzzz, r13.xyzx, r7.xyzx
// 4496  0x00021E90:         dp3 r8.w, r13.xyzx, r13.xyzx
// 4497  0x00021EAC:         rsq r8.w, r8.w
// 4498  0x00021EC0:         mul r7.xyz, r8.wwww, r13.xyzx
// 4499  0x00021EDC:         add r8.w, -r3.w, r15.y
// 4500  0x00021EFC:         mad r3.w, r15.z, r8.w, r3.w
// 4501  0x00021F20:         add r13.xy, -r0.xyxx, r15.xxxx
// 4502  0x00021F40:         mad r0.xy, r15.zzzz, r13.xyxx, r0.xyxx
// 4503  0x00021F64:         add r1.z, -r2.w, r1.z
// 4504  0x00021F84:         mad r2.w, r17.x, r1.z, r2.w
// 4505  0x00021FA8:         add r11.xyz, -r10.xyzx, r11.xyzx
// 4506  0x00021FC8:         mad r10.xyz, r15.zzzz, r11.xyzx, r10.xyzx
// 4507  0x00021FEC:         add r1.z, -r1.y, l(0.040000)
// 4508  0x0002200C:         mad r1.y, r15.z, r1.z, r1.y
// 4509  0x00022030:         mad r6.x, r15.z, -r6.x, r6.x
// 4510  0x00022058:         add r11.xyz, -r12.xywx, r18.xyzx
// 4511  0x00022078:         mad r12.xyw, r15.zzzz, r11.xyxz, r12.xyxw
// 4512  0x0002209C:         max r5.w, r5.w, r15.z
// 4513  0x000220B8:         add r1.z, -r6.z, l(1.000000)
// 4514  0x000220D8:         mul r1.z, r1.z, r15.z
// 4515  0x000220F4:         max r6.w, r1.z, r6.w
// 4516  0x00022110:         movc r0.z, cb4[3].y, r15.z, r0.z
// 4517  0x00022138:       else 
// 4518  0x0002213C:         mov r0.z, r7.w
// 4519  0x00022150:       endif 
// 4520  0x00022154:     else 
// 4521  0x00022158:       mov r0.z, r7.w
// 4522  0x0002216C:     endif 
// 4523  0x00022170:   endif 
// 4524  0x00022174: else 
// 4525  0x00022178:   mov r0.z, v4.w
// 4526  0x0002218C:   mov r12.xyw, l(0,0,0,0)
// 4527  0x000221AC:   mov r10.xyz, l(0,0,0,0)
// 4528  0x000221CC:   mov r1.y, l(0.020000)
// 4529  0x000221E0:   mov r5.w, l(0)
// 4530  0x000221F4:   mov r6.w, l(0)
// 4531  0x00022208: endif 
// 4532  0x0002220C: movc r0.w, r0.w, -r7.y, r7.y
// 4533  0x00022234: mul r9.xyz, r9.xyzx, r0.wwww
// 4534  0x00022250: mad r7.xyw, r7.xxxx, v6.xyxz, r9.xyxz
// 4535  0x00022274: mad r7.xyz, r7.zzzz, r8.xyzx, r7.xywx
// 4536  0x00022298: dp3 r0.w, r7.xyzx, r7.xyzx
// 4537  0x000222B4: rsq r0.w, r0.w
// 4538  0x000222C8: mul r8.xyz, r0.wwww, r7.xyzx
// 4539  0x000222E4: add r1.z, -r3.w, l(1.000000)
// 4540  0x00022304: log r1.z, r1.z
// 4541  0x00022318: mul r1.z, r1.z, cb0[7].w
// 4542  0x00022338: exp r1.z, r1.z
// 4543  0x0002234C: mul r9.xyz, r1.zzzz, r5.xyzx
// 4544  0x00022368: add r5.xyz, -r1.yyyy, r5.xyzx
// 4545  0x00022388: mad r5.xyz, r3.wwww, r5.xyzx, r1.yyyy
// 4546  0x000223AC: if_nz cb0[49].y
// 4547  0x000223BC:   add r11.xyz, -r4.yzwy, cb1[19].xyzx
// 4548  0x000223E0:   dp3 r1.y, r11.xyzx, r11.xyzx
// 4549  0x000223FC:   rsq r1.y, r1.y
// 4550  0x00022410:   mul r11.xyz, r1.yyyy, r11.xyzx
// 4551  0x0002242C:   dp3 r1.y, r11.xyzx, r3.xyzx
// 4552  0x00022448:   ne r1.z, l(0.000000), cb4[36].y
// 4553  0x00022468:   add r13.xyz, r4.yzwy, cb1[33].xyzx
// 4554  0x00022488:   mad r13.xyz, -cb1[20].xyzx, cb4[36].yyyy, r13.xyzx
// 4555  0x000224B8:   add r14.xyz, cb1[19].xyzx, cb1[33].xyzx
// 4556  0x000224DC:   mad r14.xyz, cb1[22].wwww, cb1[20].xyzx, r14.xyzx
// 4557  0x00022508:   dp3 r14.w, r14.xyzx, cb1[20].xyzx
// 4558  0x00022528:   mov r13.w, l(1.000000)
// 4559  0x0002253C:   mov r14.xyz, cb1[20].xyzx
// 4560  0x00022554:   dp4 r3.w, r13.xyzw, r14.xyzw
// 4561  0x00022570:   ge r6.z, l(0.000000), r3.w
// 4562  0x0002258C:   mad r13.xyz, r3.wwww, -cb1[20].xyzx, r4.yzwy
// 4563  0x000225B8:   movc r13.xyz, r6.zzzz, r4.yzwy, r13.xyzx
// 4564  0x000225DC:   mul r14.xyz, r13.yyyy, cb4[13].xywx
// 4565  0x000225FC:   mad r14.xyz, cb4[12].xywx, r13.xxxx, r14.xyzx
// 4566  0x00022624:   mad r14.xyz, cb4[14].xywx, r13.zzzz, r14.xyzx
// 4567  0x0002264C:   add r14.xyz, r14.xyzx, cb4[15].xywx
// 4568  0x0002266C:   div r15.xy, r14.xyxx, r14.zzzz
// 4569  0x00022688:   add r3.w, r15.x, l(1.000000)
// 4570  0x000226A4:   mul r3.w, r3.w, cb1[26].z
// 4571  0x000226C4:   mul r3.w, r3.w, l(0.500000)
// 4572  0x000226E0:   add r15.xz, l(-1.000000, 0.000000, -1.000000, 0.000000), cb1[26].zzwz
// 4573  0x0002270C:   max r3.w, r3.w, l(0.000000)
// 4574  0x00022728:   min r14.x, r15.x, r3.w
// 4575  0x00022744:   add r3.w, -r15.y, l(1.000000)
// 4576  0x00022764:   mul r3.w, r3.w, cb1[26].w
// 4577  0x00022784:   mul r3.w, r3.w, l(0.500000)
// 4578  0x000227A0:   max r3.w, r3.w, l(0.000000)
// 4579  0x000227BC:   min r14.y, r15.z, r3.w
// 4580  0x000227D8:   movc r13.xyz, r1.zzzz, r13.xyzx, r4.yzwy
// 4581  0x000227FC:   movc r14.xyz, r1.zzzz, r14.xyzx, v8.xywx
// 4582  0x00022820:   add r14.xy, r14.xyxx, -cb1[26].xyxx
// 4583  0x00022844:   ftou r14.xy, r14.xyxx
// 4584  0x00022858:   ushr r14.xy, r14.xyxx, cb3[25].xxxx
// 4585  0x00022878:   imad r1.z, r14.y, cb3[25].y, r14.x
// 4586  0x000228A0:   imad r1.z, r1.z, cb3[24].z, cb3[24].y
// 4587  0x000228CC:   mul r3.w, r14.z, cb3[26].x
// 4588  0x000228EC:   max r3.w, r3.w, l(0.000000)
// 4589  0x00022908:   min r3.w, r3.w, cb3[26].y
// 4590  0x00022928:   ftou r3.w, r3.w
// 4591  0x0002293C:   imad r3.w, r3.w, cb3[24].z, cb3[24].x
// 4592  0x00022968:   mov r13.w, l(1.000000)
// 4593  0x0002297C:   mov r14.xyz, l(0,0,0,0)
// 4594  0x0002299C:   mov r15.xyz, l(0,0,0,0)
// 4595  0x000229BC:   mov r16.xyz, l(0,0,0,0)
// 4596  0x000229DC:   mov r17.xyz, l(0,0,0,0)
// 4597  0x000229FC:   mov r18.xyz, l(0,0,0,0)
// 4598  0x00022A1C:   mov r19.xyz, l(0,0,0,0)
// 4599  0x00022A3C:   mov r6.z, l(0)
// 4600  0x00022A50:   mov r7.w, l(0)
// 4601  0x00022A64:   mov r9.w, l(0)
// 4602  0x00022A78:   loop 
// 4603  0x00022A7C:     ult r10.w, r9.w, cb3[24].z
// 4604  0x00022A9C:     not r11.w, r7.w
// 4605  0x00022AB0:     and r10.w, r10.w, r11.w
// 4606  0x00022ACC:     breakc_z r10.w
// 4607  0x00022AD8:     iadd r10.w, r1.z, r9.w
// 4608  0x00022AF4:     ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r10.w, r10.w, l(0), t13.xxxx
// 4609  0x00022B20:     iadd r11.w, r3.w, r9.w
// 4610  0x00022B3C:     ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r11.w, r11.w, l(0), t13.xxxx
// 4611  0x00022B68:     and r10.w, r10.w, r11.w
// 4612  0x00022B84:     ishl r11.w, r9.w, l(5)
// 4613  0x00022BA0:     mov r20.xyz, r14.xyzx
// 4614  0x00022BB4:     mov r21.xyz, r15.xyzx
// 4615  0x00022BC8:     mov r22.xyz, r16.xyzx
// 4616  0x00022BDC:     mov r23.xyz, r17.xyzx
// 4617  0x00022BF0:     mov r24.xyz, r18.xyzx
// 4618  0x00022C04:     mov r25.xyz, r19.xyzx
// 4619  0x00022C18:     mov r12.z, r6.z
// 4620  0x00022C2C:     mov r14.w, r7.w
// 4621  0x00022C40:     mov r15.w, r10.w
// 4622  0x00022C54:     loop 
// 4623  0x00022C58:       breakc_z r15.w
// 4624  0x00022C64:       firstbit_lo r16.w, r15.w
// 4625  0x00022C78:       iadd r16.w, r11.w, r16.w
// 4626  0x00022C94:       iadd r17.w, r15.w, l(-1)
// 4627  0x00022CB0:       and r17.w, r15.w, r17.w
// 4628  0x00022CCC:       imul null, r16.w, r16.w, l(6)
// 4629  0x00022CEC:       dp4 r26.x, r13.xyzw, cb3[r16.w + 1180].xyzw
// 4630  0x00022D14:       dp4 r26.y, r13.xyzw, cb3[r16.w + 1181].xyzw
// 4631  0x00022D3C:       dp4 r26.z, r13.xyzw, cb3[r16.w + 1182].xyzw
// 4632  0x00022D64:       add r27.xyz, r26.xyzx, -cb3[r16.w + 1183].xyzx
// 4633  0x00022D90:       mul_sat r27.xyz, r27.xyzx, cb3[r16.w + 1185].xyzx
// 4634  0x00022DB8:       add r26.xyz, -r26.xyzx, cb3[r16.w + 1184].xyzx
// 4635  0x00022DE4:       mul_sat r26.xyz, r26.xyzx, cb3[r16.w + 1185].xyzx
// 4636  0x00022E0C:       min r18.w, r27.z, r27.y
// 4637  0x00022E28:       min r18.w, r18.w, r27.x
// 4638  0x00022E44:       min r19.w, r26.z, r26.y
// 4639  0x00022E60:       min r19.w, r19.w, r26.x
// 4640  0x00022E7C:       min r18.w, r18.w, r19.w
// 4641  0x00022E98:       eq r19.w, r18.w, l(0.000000)
// 4642  0x00022EB4:       if_nz r19.w
// 4643  0x00022EC0:         mov r15.w, r17.w
// 4644  0x00022ED4:         continue 
// 4645  0x00022ED8:       endif 
// 4646  0x00022EDC:       mul r19.w, r18.w, r18.w
// 4647  0x00022EF8:       mad r18.w, r18.w, l(-2.000000), l(3.000000)
// 4648  0x00022F1C:       mul r18.w, r18.w, r19.w
// 4649  0x00022F38:       add r19.w, -r12.z, l(1.000000)
// 4650  0x00022F58:       mul r20.w, r18.w, r19.w
// 4651  0x00022F74:       mad r18.w, r18.w, r19.w, r12.z
// 4652  0x00022F98:       imul null, r16.w, l(9), cb3[r16.w + 1185].w
// 4653  0x00022FC4:       dp4 r26.x, r13.xyzw, cb2[r16.w + 0].xyzw
// 4654  0x00022FE8:       dp4 r26.y, r13.xyzw, cb2[r16.w + 1].xyzw
// 4655  0x00023010:       dp4 r19.w, r13.xyzw, cb2[r16.w + 2].xyzw
// 4656  0x00023038:       mul r26.z, r19.w, l(0.166667)
// 4657  0x00023054:       max r26.xyz, r26.xyzx, cb2[r16.w + 3].xyzx
// 4658  0x0002307C:       min r26.xyz, r26.xyzx, cb2[r16.w + 4].xyzx
// 4659  0x000230A4:       mul r26.w, r26.z, l(6.000000)
// 4660  0x000230C0:       mad r26.xyz, r26.xywx, cb2[r16.w + 6].xyzx, cb2[r16.w + 7].xyzx
// 4661  0x000230FC:       mul r26.w, r26.z, l(0.166667)
// 4662  0x00023118:       sample_l_indexable(texture3d)(float,float,float,float) r27.xyz, r26.xywx, t16.xyzw, s1, l(0.000000)
// 4663  0x0002314C:       mul r27.xyz, r27.xyzx, cb2[r16.w + 5].xyzx
// 4664  0x00023174:       add r28.xyz, r26.xywx, l(0.000000, 0.000000, 0.166667, 0.000000)
// 4665  0x0002319C:       sample_l_indexable(texture3d)(float,float,float,float) r28.xyz, r28.xyzx, t16.xyzw, s1, l(0.000000)
// 4666  0x000231D0:       mul r28.xyz, r28.xyzx, cb2[r16.w + 5].xyzx
// 4667  0x000231F8:       add r29.xyz, r26.xywx, l(0.000000, 0.000000, 0.333333, 0.000000)
// 4668  0x00023220:       sample_l_indexable(texture3d)(float,float,float,float) r29.xyz, r29.xyzx, t16.xyzw, s1, l(0.000000)
// 4669  0x00023254:       mul r29.xyz, r29.xyzx, cb2[r16.w + 5].xyzx
// 4670  0x0002327C:       add r30.xyz, r26.xywx, l(0.000000, 0.000000, 0.500000, 0.000000)
// 4671  0x000232A4:       sample_l_indexable(texture3d)(float,float,float,float) r30.xyz, r30.xyzx, t16.xyzw, s1, l(0.000000)
// 4672  0x000232D8:       mul r30.xyz, r30.xyzx, cb2[r16.w + 5].xyzx
// 4673  0x00023300:       add r31.xyz, r26.xywx, l(0.000000, 0.000000, 0.666667, 0.000000)
// 4674  0x00023328:       sample_l_indexable(texture3d)(float,float,float,float) r31.xyz, r31.xyzx, t16.xyzw, s1, l(0.000000)
// 4675  0x0002335C:       mul r31.xyz, r31.xyzx, cb2[r16.w + 5].xyzx
// 4676  0x00023384:       add r26.xyz, r26.xywx, l(0.000000, 0.000000, 0.833333, 0.000000)
// 4677  0x000233AC:       sample_l_indexable(texture3d)(float,float,float,float) r26.xyz, r26.xyzx, t16.xyzw, s1, l(0.000000)
// 4678  0x000233E0:       mul r26.xyz, r26.xyzx, cb2[r16.w + 5].xyzx
// 4679  0x00023408:       mad r27.xyz, r20.wwww, r27.xyzx, r20.xyzx
// 4680  0x0002342C:       mad r28.xyz, r20.wwww, r28.xyzx, r21.xyzx
// 4681  0x00023450:       mad r29.xyz, r20.wwww, r29.xyzx, r22.xyzx
// 4682  0x00023474:       mad r30.xyz, r20.wwww, r30.xyzx, r23.xyzx
// 4683  0x00023498:       mad r31.xyz, r20.wwww, r31.xyzx, r24.xyzx
// 4684  0x000234BC:       mad r26.xyz, r20.wwww, r26.xyzx, r25.xyzx
// 4685  0x000234E0:       lt r16.w, l(0.990000), r18.w
// 4686  0x000234FC:       if_nz r16.w
// 4687  0x00023508:         mov r20.xyz, r27.xyzx
// 4688  0x0002351C:         mov r21.xyz, r28.xyzx
// 4689  0x00023530:         mov r22.xyz, r29.xyzx
// 4690  0x00023544:         mov r23.xyz, r30.xyzx
// 4691  0x00023558:         mov r24.xyz, r31.xyzx
// 4692  0x0002356C:         mov r25.xyz, r26.xyzx
// 4693  0x00023580:         mov r12.z, r18.w
// 4694  0x00023594:         mov r14.w, l(-1)
// 4695  0x000235A8:         break 
// 4696  0x000235AC:       endif 
// 4697  0x000235B0:       mov r20.xyz, r27.xyzx
// 4698  0x000235C4:       mov r21.xyz, r28.xyzx
// 4699  0x000235D8:       mov r22.xyz, r29.xyzx
// 4700  0x000235EC:       mov r23.xyz, r30.xyzx
// 4701  0x00023600:       mov r24.xyz, r31.xyzx
// 4702  0x00023614:       mov r25.xyz, r26.xyzx
// 4703  0x00023628:       mov r12.z, r18.w
// 4704  0x0002363C:       mov r15.w, r17.w
// 4705  0x00023650:     endloop 
// 4706  0x00023654:     mov r14.xyz, r20.xyzx
// 4707  0x00023668:     mov r15.xyz, r21.xyzx
// 4708  0x0002367C:     mov r16.xyz, r22.xyzx
// 4709  0x00023690:     mov r17.xyz, r23.xyzx
// 4710  0x000236A4:     mov r18.xyz, r24.xyzx
// 4711  0x000236B8:     mov r19.xyz, r25.xyzx
// 4712  0x000236CC:     mov r6.z, r12.z
// 4713  0x000236E0:     mov r7.w, r14.w
// 4714  0x000236F4:     iadd r9.w, r9.w, l(1)
// 4715  0x00023710:   endloop 
// 4716  0x00023714:   lt r1.z, r6.z, l(0.990000)
// 4717  0x00023730:   if_nz r1.z
// 4718  0x0002373C:     add r1.z, -r6.z, l(1.000000)
// 4719  0x0002375C:     dp2 r13.x, cb3[7].xwxx, l(1.000000, 1.000000, 0.000000, 0.000000)
// 4720  0x00023788:     dp2 r13.y, cb3[8].xwxx, l(1.000000, 1.000000, 0.000000, 0.000000)
// 4721  0x000237B4:     dp2 r13.z, cb3[9].xwxx, l(1.000000, 1.000000, 0.000000, 0.000000)
// 4722  0x000237E0:     mad r14.xyz, r1.zzzz, r13.xyzx, r14.xyzx
// 4723  0x00023804:     dp2 r13.x, cb3[7].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
// 4724  0x00023830:     dp2 r13.y, cb3[8].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
// 4725  0x0002385C:     dp2 r13.z, cb3[9].ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
// 4726  0x00023888:     mad r15.xyz, r1.zzzz, r13.xyzx, r15.xyzx
// 4727  0x000238AC:     dp2 r13.x, cb3[7].zwzz, l(1.000000, 1.000000, 0.000000, 0.000000)
// 4728  0x000238D8:     dp2 r13.y, cb3[8].zwzz, l(1.000000, 1.000000, 0.000000, 0.000000)
// 4729  0x00023904:     dp2 r13.z, cb3[9].zwzz, l(1.000000, 1.000000, 0.000000, 0.000000)
// 4730  0x00023930:     mad r16.xyz, r1.zzzz, r13.xyzx, r16.xyzx
// 4731  0x00023954:     dp2 r13.x, cb3[7].xwxx, l(-1.000000, 1.000000, 0.000000, 0.000000)
// 4732  0x00023980:     dp2 r13.y, cb3[8].xwxx, l(-1.000000, 1.000000, 0.000000, 0.000000)
// 4733  0x000239AC:     dp2 r13.z, cb3[9].xwxx, l(-1.000000, 1.000000, 0.000000, 0.000000)
// 4734  0x000239D8:     mad r17.xyz, r1.zzzz, r13.xyzx, r17.xyzx
// 4735  0x000239FC:     dp2 r13.x, cb3[7].ywyy, l(-1.000000, 1.000000, 0.000000, 0.000000)
// 4736  0x00023A28:     dp2 r13.y, cb3[8].ywyy, l(-1.000000, 1.000000, 0.000000, 0.000000)
// 4737  0x00023A54:     dp2 r13.z, cb3[9].ywyy, l(-1.000000, 1.000000, 0.000000, 0.000000)
// 4738  0x00023A80:     mad r18.xyz, r1.zzzz, r13.xyzx, r18.xyzx
// 4739  0x00023AA4:     dp2 r13.x, cb3[7].zwzz, l(-1.000000, 1.000000, 0.000000, 0.000000)
// 4740  0x00023AD0:     dp2 r13.y, cb3[8].zwzz, l(-1.000000, 1.000000, 0.000000, 0.000000)
// 4741  0x00023AFC:     dp2 r13.z, cb3[9].zwzz, l(-1.000000, 1.000000, 0.000000, 0.000000)
// 4742  0x00023B28:     mad r19.xyz, r1.zzzz, r13.xyzx, r19.xyzx
// 4743  0x00023B4C:   endif 
// 4744  0x00023B50:   dp3 r1.z, r14.xyzx, l(0.212500, 0.715400, 0.072100, 0.000000)
// 4745  0x00023B78:   max r13.xy, r8.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
// 4746  0x00023BA0:   dp3 r3.w, r17.xyzx, l(0.212500, 0.715400, 0.072100, 0.000000)
// 4747  0x00023BC8:   max r13.zw, -r8.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
// 4748  0x00023BF4:   mul r3.w, r3.w, r13.z
// 4749  0x00023C10:   mad r14.x, r1.z, r13.x, -r3.w
// 4750  0x00023C38:   dp3 r1.z, r15.xyzx, l(0.212500, 0.715400, 0.072100, 0.000000)
// 4751  0x00023C60:   dp3 r3.w, r18.xyzx, l(0.212500, 0.715400, 0.072100, 0.000000)
// 4752  0x00023C88:   mul r3.w, r13.w, r3.w
// 4753  0x00023CA4:   mad r14.y, r1.z, r13.y, -r3.w
// 4754  0x00023CCC:   dp3 r1.z, r16.xyzx, l(0.212500, 0.715400, 0.072100, 0.000000)
// 4755  0x00023CF4:   dp3 r3.w, r19.xyzx, l(0.212500, 0.715400, 0.072100, 0.000000)
// 4756  0x00023D1C:   mul r3.w, r13.z, r3.w
// 4757  0x00023D38:   mad r14.z, r1.z, r13.y, -r3.w
// 4758  0x00023D60:   mad r13.xyz, r11.xyzx, l(0.001000, 0.001000, 0.001000, 0.000000), r14.xyzx
// 4759  0x00023D90:   dp3 r1.z, cb3[20].xyzx, l(0.212500, 0.715400, 0.072100, 0.000000)
// 4760  0x00023DBC:   mad r13.xyz, cb3[19].xyzx, r1.zzzz, r13.xyzx
// 4761  0x00023DE4:   dp3 r1.z, r13.xyzx, r13.xyzx
// 4762  0x00023E00:   rsq r1.z, r1.z
// 4763  0x00023E14:   mul r13.xyz, r1.zzzz, r13.xyzx
// 4764  0x00023E30:   dp3 r1.z, r11.xyzx, r13.xyzx
// 4765  0x00023E4C:   add r1.y, r1.z, r1.y
// 4766  0x00023E68:   mul r1.z, r6.x, cb0[49].w
// 4767  0x00023E88:   mad r1.y, r1.y, cb0[49].z, cb0[50].x
// 4768  0x00023EB4:   frc r1.y, r1.y
// 4769  0x00023EC8:   mul r3.w, r1.y, l(6.000000)
// 4770  0x00023EE4:   round_ni r3.w, r3.w
// 4771  0x00023EF8:   mad r1.y, r1.y, l(6.000000), -r3.w
// 4772  0x00023F20:   add r11.x, -r1.y, l(1.000000)
// 4773  0x00023F40:   add r6.x, -r11.x, l(1.000000)
// 4774  0x00023F60:   eq r13.xyzw, r3.wwww, l(0.000000, 1.000000, 2.000000, 3.000000)
// 4775  0x00023F88:   eq r1.y, r3.w, l(4.000000)
// 4776  0x00023FA4:   mov r6.z, l(1.000000)
// 4777  0x00023FB8:   mov r11.yzw, l(0,1.000000,0,1.000000)
// 4778  0x00023FD8:   movc r14.xz, r1.yyyy, r6.xxzx, r11.yyxy
// 4779  0x00023FFC:   mov r14.y, l(0)
// 4780  0x00024010:   movc r14.xyz, r13.wwww, r11.zxwz, r14.xyzx
// 4781  0x00024034:   mad r15.xyz, r11.wxzw, l(1.000000, -1.000000, 1.000000, 0.000000), l(0.000000, 1.000000, 0.000000, 0.000000)
// 4782  0x00024070:   movc r14.xyz, r13.zzzz, r15.zxyz, r14.xyzx
// 4783  0x00024094:   movc r11.xyz, r13.yyyy, r11.xwzx, r14.xyzx
// 4784  0x000240B8:   movc r11.xyz, r13.xxxx, r15.xyzx, r11.xyzx
// 4785  0x000240DC:   dp3 r1.y, r5.xyzx, l(0.212500, 0.715400, 0.072100, 0.000000)
// 4786  0x00024104:   max r13.xyz, r11.xyzx, l(0.001000, 0.001000, 0.001000, 0.000000)
// 4787  0x0002412C:   dp3 r3.w, r13.xyzx, r13.xyzx
// 4788  0x00024148:   rsq r3.w, r3.w
// 4789  0x0002415C:   mul r13.xyz, r3.wwww, r13.xyzx
// 4790  0x00024178:   dp3 r3.w, r13.xyzx, l(0.212500, 0.715400, 0.072100, 0.000000)
// 4791  0x000241A0:   div r3.w, r1.y, r3.w
// 4792  0x000241BC:   mul r1.y, r1.y, l(3.000000)
// 4793  0x000241D8:   max r6.x, r11.z, r11.y
// 4794  0x000241F4:   max r6.x, r6.x, r11.x
// 4795  0x00024210:   mul r1.y, r1.y, r6.x
// 4796  0x0002422C:   min r1.y, r1.y, r3.w
// 4797  0x00024248:   mad r11.xyz, r13.xyzx, r1.yyyy, -r5.xyzx
// 4798  0x00024270:   mad_sat r5.xyz, r1.zzzz, r11.xyzx, r5.xyzx
// 4799  0x00024294: endif 
// 4800  0x00024298: eq r11.xyz, r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
// 4801  0x000242C0: and r1.y, r11.y, r11.x
// 4802  0x000242DC: and r1.y, r11.z, r1.y
// 4803  0x000242F8: movc r11.xyz, r1.yyyy, r8.xyzx, r2.xyzx
// 4804  0x0002431C: deriv_rtx_coarse r13.xyz, r3.xyzx
// 4805  0x00024330: deriv_rty_coarse r14.xyz, r3.xyzx
// 4806  0x00024344: dp3 r1.z, r13.xyzx, r13.xyzx
// 4807  0x00024360: dp3 r3.w, r14.xyzx, r14.xyzx
// 4808  0x0002437C: max r1.z, r1.z, r3.w
// 4809  0x00024398: min r1.z, r1.z, l(1.000000)
// 4810  0x000243B4: log r1.z, r1.z
// 4811  0x000243C8: mul r1.z, r1.z, l(0.333000)
// 4812  0x000243E4: exp r1.z, r1.z
// 4813  0x000243F8: max r0.xy, r0.xyxx, r1.zzzz
// 4814  0x00024414: if_nz cb4[1].x
// 4815  0x00024424:   dp3 r13.x, cb3[11].xyzx, r3.xyzx
// 4816  0x00024444:   dp3 r13.y, cb3[12].xyzx, r3.xyzx
// 4817  0x00024464:   dp3 r13.z, cb3[13].xyzx, r3.xyzx
// 4818  0x00024484:   dp3 r13.w, cb3[14].xyzx, r3.xyzx
// 4819  0x000244A4:   max r3.xyzw, r13.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
// 4820  0x000244CC:   mul r6.xz, v8.xxyx, cb4[16].zzzz
// 4821  0x000244EC:   round_ni r6.xz, r6.xxzx
// 4822  0x00024500:   mul r13.xy, l(0.500000, 0.500000, 0.000000, 0.000000), cb4[16].xyxx
// 4823  0x0002452C:   mad r6.xz, r6.xxzx, cb4[16].xxyx, r13.xxyx
// 4824  0x00024554:   gather4_indexable(texture2d)(float,float,float,float) r13.xyzw, r6.xzxx, t8.xyzw, s7.x
// 4825  0x00024580:   add r13.xyzw, r13.xyzw, -v8.zzzz
// 4826  0x000245A0:   lt r1.z, |r13.z|, r13.w
// 4827  0x000245C0:   mov r14.x, r13.z
// 4828  0x000245D4:   mov r14.y, cb4[16].x
// 4829  0x000245EC:   mov r14.z, l(0)
// 4830  0x00024600:   mov r15.x, r13.w
// 4831  0x00024614:   mov r15.yz, l(0,0,0,0)
// 4832  0x00024634:   movc r14.xyz, r1.zzzz, r14.xyzx, r15.xyzx
// 4833  0x00024658:   lt r1.z, |r13.x|, r14.x
// 4834  0x00024678:   mov r15.x, r13.x
// 4835  0x0002468C:   mov r15.y, l(0)
// 4836  0x000246A0:   mov r15.z, cb4[16].y
// 4837  0x000246B8:   movc r13.xzw, r1.zzzz, r15.xxyz, r14.xxyz
// 4838  0x000246DC:   lt r1.z, |r13.y|, r13.x
// 4839  0x000246FC:   movc r13.xy, r1.zzzz, cb4[16].xyxx, r13.zwzz
// 4840  0x00024724:   add r6.xz, r6.xxzx, r13.xxyx
// 4841  0x00024740:   sample_l_indexable(texture2d)(float,float,float,float) r13.xyzw, r6.xzxx, t7.xyzw, s4, l(0.000000)
// 4842  0x00024774:   mul r3.xyzw, r3.xyzw, cb3[16].xyzw
// 4843  0x00024794:   dp4 r1.z, r3.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
// 4844  0x000247BC:   add r1.z, r1.z, cb3[17].x
// 4845  0x000247DC:   rcp r1.z, r1.z
// 4846  0x000247F0:   dp4 r3.x, r3.xyzw, r13.xyzw
// 4847  0x0002480C:   add r3.x, r3.x, cb3[17].x
// 4848  0x0002482C:   mul r1.z, r1.z, r3.x
// 4849  0x00024848: else 
// 4850  0x0002484C:   mov r1.z, l(1.000000)
// 4851  0x00024860: endif 
// 4852  0x00024864: if_nz cb4[0].w
// 4853  0x00024874:   mul r3.xy, v8.xyxx, cb1[25].xyxx
// 4854  0x00024894:   sample_l_indexable(texture2d)(float,float,float,float) r3.x, r3.xyxx, t9.xyzw, s5, l(0.000000)
// 4855  0x000248C8:   mul r1.z, r1.z, r3.x
// 4856  0x000248E4: endif 
// 4857  0x000248E8: ne r3.xy, l(0.000000, 0.000000, 0.000000, 0.000000), cb4[36].yxyy
// 4858  0x00024914: add r13.xyz, r4.yzwy, cb1[33].xyzx
// 4859  0x00024934: mad r13.xyz, -cb1[20].xyzx, cb4[36].yyyy, r13.xyzx
// 4860  0x00024964: add r14.xyz, cb1[19].xyzx, cb1[33].xyzx
// 4861  0x00024988: mad r14.xyz, cb1[22].wwww, cb1[20].xyzx, r14.xyzx
// 4862  0x000249B4: dp3 r14.w, r14.xyzx, cb1[20].xyzx
// 4863  0x000249D4: mov r13.w, l(1.000000)
// 4864  0x000249E8: mov r14.xyz, cb1[20].xyzx
// 4865  0x00024A00: dp4 r3.z, r13.xyzw, r14.xyzw
// 4866  0x00024A1C: ge r3.w, l(0.000000), r3.z
// 4867  0x00024A38: mad r13.xyz, r3.zzzz, -cb1[20].xyzx, r4.yzwy
// 4868  0x00024A64: movc r13.xyz, r3.wwww, r4.yzwy, r13.xyzx
// 4869  0x00024A88: mul r14.xyz, r13.yyyy, cb4[13].xywx
// 4870  0x00024AA8: mad r14.xyz, cb4[12].xywx, r13.xxxx, r14.xyzx
// 4871  0x00024AD0: mad r14.xyz, cb4[14].xywx, r13.zzzz, r14.xyzx
// 4872  0x00024AF8: add r14.xyz, r14.xyzx, cb4[15].xywx
// 4873  0x00024B18: div r3.zw, r14.xxxy, r14.zzzz
// 4874  0x00024B34: add r3.z, r3.z, l(1.000000)
// 4875  0x00024B50: mul r3.z, r3.z, cb1[26].z
// 4876  0x00024B70: mul r3.z, r3.z, l(0.500000)
// 4877  0x00024B8C: add r6.xz, l(-1.000000, 0.000000, -1.000000, 0.000000), cb1[26].zzwz
// 4878  0x00024BB8: max r3.z, r3.z, l(0.000000)
// 4879  0x00024BD4: min r14.x, r6.x, r3.z
// 4880  0x00024BF0: add r3.z, -r3.w, l(1.000000)
// 4881  0x00024C10: mul r3.z, r3.z, cb1[26].w
// 4882  0x00024C30: mul r3.z, r3.z, l(0.500000)
// 4883  0x00024C4C: max r3.z, r3.z, l(0.000000)
// 4884  0x00024C68: min r14.y, r6.z, r3.z
// 4885  0x00024C84: movc r13.xyz, r3.xxxx, r13.xyzx, r4.yzwy
// 4886  0x00024CA8: movc r3.xzw, r3.xxxx, r14.xxyz, v8.xxyw
// 4887  0x00024CCC: add r3.xz, r3.xxzx, -cb1[26].xxyx
// 4888  0x00024CF0: ftou r3.xz, r3.xxzx
// 4889  0x00024D04: ushr r3.xz, r3.xxzx, cb3[25].xxxx
// 4890  0x00024D24: imad r3.x, r3.z, cb3[25].y, r3.x
// 4891  0x00024D4C: imad r3.z, r3.x, cb3[24].z, cb3[24].y
// 4892  0x00024D78: mul r3.w, r3.w, cb3[26].x
// 4893  0x00024D98: max r3.w, r3.w, l(0.000000)
// 4894  0x00024DB4: min r3.w, r3.w, cb3[26].y
// 4895  0x00024DD4: ftou r3.w, r3.w
// 4896  0x00024DE8: imad r7.w, r3.w, cb3[24].z, cb3[24].x
// 4897  0x00024E14: ge r14.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r8.xyzx
// 4898  0x00024E3C: movc r14.xyz, r14.xyzx, l(0.500000,0.666667,0.833333,0), l(0,0.166667,0.333333,0)
// 4899  0x00024E78: mul r15.xyz, r8.xyzx, r8.xyzx
// 4900  0x00024E94: mov r13.w, l(1.000000)
// 4901  0x00024EA8: mov r14.w, l(0)
// 4902  0x00024EBC: mov r16.xyzw, l(0,0,0,0)
// 4903  0x00024EDC: mov r17.xyz, l(0,0,0,0)
// 4904  0x00024EFC: mov r9.w, l(0)
// 4905  0x00024F10: mov r10.w, l(0)
// 4906  0x00024F24: mov r12.z, l(0)
// 4907  0x00024F38: loop 
// 4908  0x00024F3C:   ult r15.w, r12.z, cb3[24].z
// 4909  0x00024F5C:   not r17.w, r10.w
// 4910  0x00024F70:   and r15.w, r15.w, r17.w
// 4911  0x00024F8C:   breakc_z r15.w
// 4912  0x00024F98:   iadd r15.w, r3.z, r12.z
// 4913  0x00024FB4:   ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r15.w, r15.w, l(0), t13.xxxx
// 4914  0x00024FE0:   iadd r17.w, r7.w, r12.z
// 4915  0x00024FFC:   ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r17.w, r17.w, l(0), t13.xxxx
// 4916  0x00025028:   and r15.w, r15.w, r17.w
// 4917  0x00025044:   ishl r17.w, r12.z, l(5)
// 4918  0x00025060:   mov r18.xyzw, r16.xyzw
// 4919  0x00025074:   mov r19.xyz, r17.xyzx
// 4920  0x00025088:   mov r19.w, r9.w
// 4921  0x0002509C:   mov r20.x, r10.w
// 4922  0x000250B0:   mov r20.y, r15.w
// 4923  0x000250C4:   loop 
// 4924  0x000250C8:     breakc_z r20.y
// 4925  0x000250D4:     firstbit_lo r20.z, r20.y
// 4926  0x000250E8:     iadd r20.z, r17.w, r20.z
// 4927  0x00025104:     iadd r20.w, r20.y, l(-1)
// 4928  0x00025120:     and r20.w, r20.w, r20.y
// 4929  0x0002513C:     imul null, r20.z, r20.z, l(6)
// 4930  0x0002515C:     dp4 r21.x, r13.xyzw, cb3[r20.z + 1180].xyzw
// 4931  0x00025184:     dp4 r21.y, r13.xyzw, cb3[r20.z + 1181].xyzw
// 4932  0x000251AC:     dp4 r21.z, r13.xyzw, cb3[r20.z + 1182].xyzw
// 4933  0x000251D4:     add r22.xyz, r21.xyzx, -cb3[r20.z + 1183].xyzx
// 4934  0x00025200:     mul_sat r22.xyz, r22.xyzx, cb3[r20.z + 1185].xyzx
// 4935  0x00025228:     add r21.xyz, -r21.xyzx, cb3[r20.z + 1184].xyzx
// 4936  0x00025254:     mul_sat r21.xyz, r21.xyzx, cb3[r20.z + 1185].xyzx
// 4937  0x0002527C:     min r21.w, r22.z, r22.y
// 4938  0x00025298:     min r21.w, r21.w, r22.x
// 4939  0x000252B4:     min r21.y, r21.z, r21.y
// 4940  0x000252D0:     min r21.x, r21.y, r21.x
// 4941  0x000252EC:     min r21.x, r21.x, r21.w
// 4942  0x00025308:     eq r21.y, r21.x, l(0.000000)
// 4943  0x00025324:     if_nz r21.y
// 4944  0x00025330:       mov r20.y, r20.w
// 4945  0x00025344:       continue 
// 4946  0x00025348:     endif 
// 4947  0x0002534C:     mul r21.y, r21.x, r21.x
// 4948  0x00025368:     mad r21.x, r21.x, l(-2.000000), l(3.000000)
// 4949  0x0002538C:     mul r21.x, r21.x, r21.y
// 4950  0x000253A8:     add r21.y, -r19.w, l(1.000000)
// 4951  0x000253C8:     mul r21.z, r21.y, r21.x
// 4952  0x000253E4:     mad r21.x, r21.x, r21.y, r19.w
// 4953  0x00025408:     imul null, r20.z, l(9), cb3[r20.z + 1185].w
// 4954  0x00025434:     dp4 r22.x, r13.xyzw, cb2[r20.z + 0].xyzw
// 4955  0x00025458:     dp4 r22.y, r13.xyzw, cb2[r20.z + 1].xyzw
// 4956  0x00025480:     dp4 r22.z, r13.xyzw, cb2[r20.z + 2].xyzw
// 4957  0x000254A8:     mul r22.w, r22.z, l(0.166667)
// 4958  0x000254C4:     max r23.xyz, r22.xywx, cb2[r20.z + 3].xyzx
// 4959  0x000254EC:     min r23.xyz, r23.xyzx, cb2[r20.z + 4].xyzx
// 4960  0x00025514:     mul r23.w, r23.z, l(6.000000)
// 4961  0x00025530:     mad r23.xyz, r23.xywx, cb2[r20.z + 6].xyzx, cb2[r20.z + 7].xyzx
// 4962  0x0002556C:     mul r23.w, r23.z, l(0.166667)
// 4963  0x00025588:     add r24.xyz, r14.wwxw, r23.xywx
// 4964  0x000255A4:     sample_l_indexable(texture3d)(float,float,float,float) r24.xyz, r24.xyzx, t16.xyzw, s1, l(0.000000)
// 4965  0x000255D8:     add r25.xyz, r14.wwyw, r23.xywx
// 4966  0x000255F4:     sample_l_indexable(texture3d)(float,float,float,float) r25.xyz, r25.xyzx, t16.xyzw, s1, l(0.000000)
// 4967  0x00025628:     add r23.xyz, r14.wwzw, r23.xywx
// 4968  0x00025644:     sample_l_indexable(texture3d)(float,float,float,float) r23.xyz, r23.xyzx, t16.xyzw, s1, l(0.000000)
// 4969  0x00025678:     mul r25.xyz, r15.yyyy, r25.xyzx
// 4970  0x00025694:     mad r24.xyz, r15.xxxx, r24.xyzx, r25.xyzx
// 4971  0x000256B8:     mad r23.xyz, r15.zzzz, r23.xyzx, r24.xyzx
// 4972  0x000256DC:     mul r23.xyz, r23.xyzx, cb2[r20.z + 5].xyzx
// 4973  0x00025704:     mad r23.xyz, r21.zzzz, r23.xyzx, r19.xyzx
// 4974  0x00025728:     mov_sat r22.xyz, r22.xyzx
// 4975  0x0002573C:     mad r22.xyz, r22.xyzx, cb2[r20.z + 6].xyzx, cb2[r20.z + 7].xyzx
// 4976  0x00025778:     sample_l_indexable(texture3d)(float,float,float,float) r22.xyzw, r22.xyzx, t17.xyzw, s1, l(0.000000)
// 4977  0x000257AC:     mad r22.xyzw, r21.zzzz, r22.xyzw, r18.xyzw
// 4978  0x000257D0:     lt r20.z, l(0.990000), r21.x
// 4979  0x000257EC:     if_nz r20.z
// 4980  0x000257F8:       mov r18.xyzw, r22.xyzw
// 4981  0x0002580C:       mov r19.xyz, r23.xyzx
// 4982  0x00025820:       mov r19.w, r21.x
// 4983  0x00025834:       mov r20.x, l(-1)
// 4984  0x00025848:       break 
// 4985  0x0002584C:     endif 
// 4986  0x00025850:     mov r18.xyzw, r22.xyzw
// 4987  0x00025864:     mov r19.xyz, r23.xyzx
// 4988  0x00025878:     mov r19.w, r21.x
// 4989  0x0002588C:     mov r20.xy, r20.xwxx
// 4990  0x000258A0:   endloop 
// 4991  0x000258A4:   mov r16.xyzw, r18.xyzw
// 4992  0x000258B8:   mov r17.xyz, r19.xyzx
// 4993  0x000258CC:   mov r9.w, r19.w
// 4994  0x000258E0:   mov r10.w, r20.x
// 4995  0x000258F4:   iadd r12.z, r12.z, l(1)
// 4996  0x00025910: endloop 
// 4997  0x00025914: lt r3.z, r9.w, l(0.990000)
// 4998  0x00025930: if_nz r3.z
// 4999  0x0002593C:   add r3.z, -r9.w, l(1.000000)
// 5000  0x0002595C:   mov r8.w, l(1.000000)
// 5001  0x00025970:   dp4 r14.x, cb3[7].xyzw, r8.xyzw
// 5002  0x00025990:   dp4 r14.y, cb3[8].xyzw, r8.xyzw
// 5003  0x000259B0:   dp4 r14.z, cb3[9].xyzw, r8.xyzw
// 5004  0x000259D0:   mad r17.xyz, r3.zzzz, r14.xyzx, r17.xyzx
// 5005  0x000259F4: endif 
// 5006  0x000259F8: dp3 r3.z, r17.xyzx, l(0.212500, 0.715400, 0.072100, 0.000000)
// 5007  0x00025A20: if_nz cb3[1948].x
// 5008  0x00025A30:   mov r14.xyz, l(0,0,0,0)
// 5009  0x00025A50:   mov r7.w, l(-1)
// 5010  0x00025A64:   mov r8.w, l(1.000000)
// 5011  0x00025A78:   mov r9.w, l(0)
// 5012  0x00025A8C:   loop 
// 5013  0x00025A90:     ige r10.w, r9.w, cb3[1948].x
// 5014  0x00025AB0:     breakc_nz r10.w
// 5015  0x00025ABC:     ishl r10.w, r9.w, l(2)
// 5016  0x00025AD8:     mul r15.xy, v1.yyyy, cb3[r10.w + 1952].xyxx
// 5017  0x00025B00:     mad r15.xy, cb3[r10.w + 1951].xyxx, v1.xxxx, r15.xyxx
// 5018  0x00025B30:     mad r15.xy, cb3[r10.w + 1953].xyxx, v1.zzzz, r15.xyxx
// 5019  0x00025B60:     add r15.xy, r15.xyxx, cb3[r10.w + 1954].xyxx
// 5020  0x00025B88:     max r12.z, |r15.y|, |r15.x|
// 5021  0x00025BAC:     dp4 r14.w, cb3[1949].xyzw, icb[r9.w + 0].xyzw
// 5022  0x00025BD0:     lt r12.z, r12.z, r14.w
// 5023  0x00025BEC:     if_nz r12.z
// 5024  0x00025BF8:       mul r12.z, v1.y, cb3[r10.w + 1952].z
// 5025  0x00025C20:       mad r12.z, cb3[r10.w + 1951].z, v1.x, r12.z
// 5026  0x00025C50:       mad r12.z, cb3[r10.w + 1953].z, v1.z, r12.z
// 5027  0x00025C80:       add r14.z, r12.z, cb3[r10.w + 1954].z
// 5028  0x00025CA8:       mad_sat r15.zw, |r15.xxxy|, cb3[1950].yyyy, cb3[1950].xxxx
// 5029  0x00025CD8:       add r15.zw, -r15.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
// 5030  0x00025D04:       mul r8.w, r15.w, r15.z
// 5031  0x00025D20:       mad r14.xy, r15.xyxx, cb3[r9.w + 1983].zwzz, cb3[r9.w + 1983].xyxx
// 5032  0x00025D5C:       mov r7.w, r9.w
// 5033  0x00025D70:       break 
// 5034  0x00025D74:     endif 
// 5035  0x00025D78:     iadd r9.w, r9.w, l(1)
// 5036  0x00025D94:     mov r14.xyz, l(0,0,0,0)
// 5037  0x00025DB4:     mov r7.w, l(-1)
// 5038  0x00025DC8:     mov r8.w, l(1.000000)
// 5039  0x00025DDC:   endloop 
// 5040  0x00025DE0:   ige r9.w, r7.w, l(0)
// 5041  0x00025DFC:   if_nz r9.w
// 5042  0x00025E08:     add_sat r9.w, r14.z, cb3[1948].z
// 5043  0x00025E28:     mov r15.xz, cb3[2].zzyz
// 5044  0x00025E40:     mov r15.yw, cb3[3].zzzz
// 5045  0x00025E58:     add r18.xyzw, r14.xyxy, r15.xyzw
// 5046  0x00025E74:     sample_c_lz_indexable(texture2d)(float,float,float,float) r19.x, r18.xyxx, t6.xxxx, s8, r9.w
// 5047  0x00025EA8:     sample_c_lz_indexable(texture2d)(float,float,float,float) r19.y, r18.zwzz, t6.xxxx, s8, r9.w
// 5048  0x00025EDC:     mov r18.xz, cb3[2].zzyz
// 5049  0x00025EF4:     mov r18.yw, cb3[3].yyyy
// 5050  0x00025F0C:     add r20.xyzw, r14.xyxy, r18.xyzw
// 5051  0x00025F28:     sample_c_lz_indexable(texture2d)(float,float,float,float) r19.z, r20.xyxx, t6.xxxx, s8, r9.w
// 5052  0x00025F5C:     sample_c_lz_indexable(texture2d)(float,float,float,float) r19.w, r20.zwzz, t6.xxxx, s8, r9.w
// 5053  0x00025F90:     dp4 r10.w, r19.xyzw, l(0.250000, 0.250000, 0.250000, 0.250000)
// 5054  0x00025FB8:     eq r14.zw, r10.wwww, l(0.000000, 0.000000, 0.000000, 1.000000)
// 5055  0x00025FE0:     or r12.z, r14.w, r14.z
// 5056  0x00025FFC:     if_z r12.z
// 5057  0x00026008:       mul r12.z, r10.w, cb3[0].w
// 5058  0x00026028:       mov r19.xz, cb3[2].zzyz
// 5059  0x00026040:       mov r19.yw, l(0,0,0,0)
// 5060  0x00026060:       add r19.xyzw, r14.xyxy, r19.xyzw
// 5061  0x0002607C:       sample_c_lz_indexable(texture2d)(float,float,float,float) r20.x, r19.xyxx, t6.xxxx, s8, r9.w
// 5062  0x000260B0:       sample_c_lz_indexable(texture2d)(float,float,float,float) r20.y, r19.zwzz, t6.xxxx, s8, r9.w
// 5063  0x000260E4:       mov r19.xz, l(0,0,0,0)
// 5064  0x00026104:       mov r19.yw, cb3[3].yyyz
// 5065  0x0002611C:       add r19.xyzw, r14.xyxy, r19.xyzw
// 5066  0x00026138:       sample_c_lz_indexable(texture2d)(float,float,float,float) r20.z, r19.xyxx, t6.xxxx, s8, r9.w
// 5067  0x0002616C:       sample_c_lz_indexable(texture2d)(float,float,float,float) r20.w, r19.zwzz, t6.xxxx, s8, r9.w
// 5068  0x000261A0:       dp4 r14.z, r20.xyzw, cb3[1].xxxx
// 5069  0x000261C0:       mad r12.z, r12.z, l(4.000000), r14.z
// 5070  0x000261E4:       sample_c_lz_indexable(texture2d)(float,float,float,float) r9.w, r14.xyxx, t6.xxxx, s8, r9.w
// 5071  0x00026218:       mad r10.w, r9.w, cb3[1].y, r12.z
// 5072  0x00026240:     endif 
// 5073  0x00026244:     lt r9.w, r8.w, l(1.000000)
// 5074  0x00026260:     if_nz r9.w
// 5075  0x0002626C:       iadd r9.w, l(-1), cb3[1948].x
// 5076  0x0002628C:       ilt r9.w, r7.w, r9.w
// 5077  0x000262A8:       if_nz r9.w
// 5078  0x000262B4:         ishl r9.w, r7.w, l(2)
// 5079  0x000262D0:         iadd r9.w, r9.w, l(4)
// 5080  0x000262EC:         mul r14.xyz, v1.yyyy, cb3[r9.w + 1952].xyzx
// 5081  0x00026314:         mad r14.xyz, cb3[r9.w + 1951].xyzx, v1.xxxx, r14.xyzx
// 5082  0x00026344:         mad r14.xyz, cb3[r9.w + 1953].xyzx, v1.zzzz, r14.xyzx
// 5083  0x00026374:         add r14.xyz, r14.xyzx, cb3[r9.w + 1954].xyzx
// 5084  0x0002639C:         iadd r7.w, r7.w, l(1)
// 5085  0x000263B8:         mad r14.xy, r14.xyxx, cb3[r7.w + 1983].zwzz, cb3[r7.w + 1983].xyxx
// 5086  0x000263F4:         add_sat r7.w, r14.z, cb3[1948].z
// 5087  0x00026414:         add r15.xyzw, r15.xyzw, r14.xyxy
// 5088  0x00026430:         sample_c_lz_indexable(texture2d)(float,float,float,float) r19.x, r15.xyxx, t6.xxxx, s8, r7.w
// 5089  0x00026464:         sample_c_lz_indexable(texture2d)(float,float,float,float) r19.y, r15.zwzz, t6.xxxx, s8, r7.w
// 5090  0x00026498:         add r15.xyzw, r18.xyzw, r14.xyxy
// 5091  0x000264B4:         sample_c_lz_indexable(texture2d)(float,float,float,float) r19.z, r15.xyxx, t6.xxxx, s8, r7.w
// 5092  0x000264E8:         sample_c_lz_indexable(texture2d)(float,float,float,float) r19.w, r15.zwzz, t6.xxxx, s8, r7.w
// 5093  0x0002651C:         dp4 r9.w, r19.xyzw, l(0.250000, 0.250000, 0.250000, 0.250000)
// 5094  0x00026544:         eq r14.zw, r9.wwww, l(0.000000, 0.000000, 0.000000, 1.000000)
// 5095  0x0002656C:         or r12.z, r14.w, r14.z
// 5096  0x00026588:         if_z r12.z
// 5097  0x00026594:           mul r12.z, r9.w, cb3[0].w
// 5098  0x000265B4:           mov r15.xz, cb3[2].zzyz
// 5099  0x000265CC:           mov r15.yw, l(0,0,0,0)
// 5100  0x000265EC:           add r15.xyzw, r14.xyxy, r15.xyzw
// 5101  0x00026608:           sample_c_lz_indexable(texture2d)(float,float,float,float) r18.x, r15.xyxx, t6.xxxx, s8, r7.w
// 5102  0x0002663C:           sample_c_lz_indexable(texture2d)(float,float,float,float) r18.y, r15.zwzz, t6.xxxx, s8, r7.w
// 5103  0x00026670:           mov r15.xz, l(0,0,0,0)
// 5104  0x00026690:           mov r15.yw, cb3[3].yyyz
// 5105  0x000266A8:           add r15.xyzw, r14.xyxy, r15.xyzw
// 5106  0x000266C4:           sample_c_lz_indexable(texture2d)(float,float,float,float) r18.z, r15.xyxx, t6.xxxx, s8, r7.w
// 5107  0x000266F8:           sample_c_lz_indexable(texture2d)(float,float,float,float) r18.w, r15.zwzz, t6.xxxx, s8, r7.w
// 5108  0x0002672C:           dp4 r14.z, r18.xyzw, cb3[1].xxxx
// 5109  0x0002674C:           mad r12.z, r12.z, l(4.000000), r14.z
// 5110  0x00026770:           sample_c_lz_indexable(texture2d)(float,float,float,float) r7.w, r14.xyxx, t6.xxxx, s8, r7.w
// 5111  0x000267A4:           mad r9.w, r7.w, cb3[1].y, r12.z
// 5112  0x000267CC:         endif 
// 5113  0x000267D0:       else 
// 5114  0x000267D4:         mov r9.w, l(1.000000)
// 5115  0x000267E8:       endif 
// 5116  0x000267EC:       add r7.w, -r9.w, r10.w
// 5117  0x0002680C:       mad r10.w, r8.w, r7.w, r9.w
// 5118  0x00026830:     endif 
// 5119  0x00026834:   else 
// 5120  0x00026838:     mov r10.w, l(1.000000)
// 5121  0x0002684C:   endif 
// 5122  0x00026850:   add r14.xyz, r4.yzwy, -cb1[19].xyzx
// 5123  0x00026874:   dp3 r7.w, r14.xyzx, r14.xyzx
// 5124  0x00026890:   sqrt r7.w, r7.w
// 5125  0x000268A4:   mad_sat r7.w, r7.w, cb3[1950].w, cb3[1950].z
// 5126  0x000268D0:   add r8.w, -r10.w, l(1.000000)
// 5127  0x000268F0:   mad r7.w, r7.w, r8.w, r10.w
// 5128  0x00026914:   if_nz cb4[1].y
// 5129  0x00026924:     mul r14.xy, v8.xyxx, cb1[25].xyxx
// 5130  0x00026944:     sample_l_indexable(texture2d)(float,float,float,float) r8.w, r14.xyxx, t19.xywz, s3, l(0.000000)
// 5131  0x00026978:     min r7.w, r7.w, r8.w
// 5132  0x00026994:   endif 
// 5133  0x00026998: else 
// 5134  0x0002699C:   mov r7.w, l(1.000000)
// 5135  0x000269B0: endif 
// 5136  0x000269B4: dp4 r8.w, r16.xyzw, cb3[21].xyzw
// 5137  0x000269D4: add r8.w, -r8.w, l(1.000000)
// 5138  0x000269F4: mul r7.w, r7.w, r8.w
// 5139  0x00026A10: dp3 r8.w, cb3[19].xyzx, r8.xyzx
// 5140  0x00026A30: mul r9.w, r7.w, r8.w
// 5141  0x00026A4C: lt r9.w, l(0.000000), r9.w
// 5142  0x00026A68: if_nz r9.w
// 5143  0x00026A74:   add r14.xyz, r4.yzwy, -cb1[19].xyzx
// 5144  0x00026A98:   dp3 r9.w, r14.xyzx, r14.xyzx
// 5145  0x00026AB4:   rsq r9.w, r9.w
// 5146  0x00026AC8:   mul r15.xyz, r9.wwww, r14.xyzx
// 5147  0x00026AE4:   eq r18.xyz, r11.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
// 5148  0x00026B0C:   and r10.w, r18.y, r18.x
// 5149  0x00026B28:   and r10.w, r18.z, r10.w
// 5150  0x00026B44:   or r10.w, r1.y, r10.w
// 5151  0x00026B60:   movc r18.xyz, r10.wwww, r8.xyzx, r2.xyzx
// 5152  0x00026B84:   max r8.w, r8.w, l(0.000000)
// 5153  0x00026BA0:   lt r10.w, l(0.000000), r1.x
// 5154  0x00026BBC:   dp3 r12.z, r18.xyzx, cb3[19].xyzx
// 5155  0x00026BDC:   mad r14.w, r8.w, l(0.500000), l(0.500000)
// 5156  0x00026C00:   mov_sat r15.w, r12.z
// 5157  0x00026C14:   add r15.w, -r15.w, l(1.000000)
// 5158  0x00026C34:   mul r15.w, r15.w, r15.w
// 5159  0x00026C50:   mad r14.w, r15.w, r15.w, r14.w
// 5160  0x00026C74:   add r12.z, r12.z, l(0.200000)
// 5161  0x00026C90:   mul_sat r12.z, r12.z, l(4.000000)
// 5162  0x00026CAC:   mad r19.xyz, -r7.xyzx, r0.wwww, r18.xyzx
// 5163  0x00026CD4:   mad r19.xyz, r19.xyzx, l(10.000000, 10.000000, 10.000000, 0.000000), r8.xyzx
// 5164  0x00026D04:   dp3 r15.w, r19.xyzx, cb3[19].xyzx
// 5165  0x00026D24:   add r17.w, -r15.w, l(1.000000)
// 5166  0x00026D44:   mad_sat r15.w, r1.x, r17.w, r15.w
// 5167  0x00026D68:   mul r12.z, r12.z, r14.w
// 5168  0x00026D84:   mad r12.z, r12.z, r15.w, -r8.w
// 5169  0x00026DAC:   mad r12.z, r1.x, r12.z, r8.w
// 5170  0x00026DD0:   movc r10.w, r10.w, r12.z, r8.w
// 5171  0x00026DF4:   max r12.z, r0.x, cb3[19].w
// 5172  0x00026E14:   mad r14.xyz, -r14.xyzx, r9.wwww, cb3[19].xyzx
// 5173  0x00026E40:   dp3 r9.w, r14.xyzx, r14.xyzx
// 5174  0x00026E5C:   rsq r9.w, r9.w
// 5175  0x00026E70:   mul r14.xyz, r9.wwww, r14.xyzx
// 5176  0x00026E8C:   dp3 r9.w, r14.xyzx, r18.xyzx
// 5177  0x00026EA8:   dp3 r14.w, r18.xyzx, -r15.xyzx
// 5178  0x00026EC8:   dp3 r14.x, cb3[19].xyzx, r14.xyzx
// 5179  0x00026EE8:   max r14.xw, r14.xxxw, l(0.000000, 0.000000, 0.000000, 0.000000)
// 5180  0x00026F10:   mul r14.y, r12.z, r12.z
// 5181  0x00026F2C:   mul r9.w, r9.w, r9.w
// 5182  0x00026F48:   mad r14.z, r14.y, r14.y, l(-1.000000)
// 5183  0x00026F6C:   mad r9.w, r9.w, r14.z, l(1.000000)
// 5184  0x00026F90:   div r9.w, r14.y, r9.w
// 5185  0x00026FAC:   mul r9.w, r9.w, r9.w
// 5186  0x00026FC8:   add r12.z, r12.z, l(1.000000)
// 5187  0x00026FE4:   mul r12.z, r12.z, r12.z
// 5188  0x00027000:   mul r14.y, r12.z, l(0.125000)
// 5189  0x0002701C:   mad r12.z, -r12.z, l(0.125000), l(1.000000)
// 5190  0x00027044:   mad r14.z, r8.w, r12.z, r14.y
// 5191  0x00027068:   mul r14.z, r14.z, l(4.000000)
// 5192  0x00027084:   mad r12.z, r14.w, r12.z, r14.y
// 5193  0x000270A8:   mul r12.z, r12.z, r14.z
// 5194  0x000270C4:   div r9.w, r9.w, r12.z
// 5195  0x000270E0:   add r14.yzw, -r5.xxyz, l(0.000000, 1.000000, 1.000000, 1.000000)
// 5196  0x0002710C:   add r12.z, -r14.x, l(1.000000)
// 5197  0x0002712C:   max r12.z, r12.z, l(0.000001)
// 5198  0x00027148:   mul r14.x, r12.z, r12.z
// 5199  0x00027164:   mul r14.x, r14.x, r14.x
// 5200  0x00027180:   mul r12.z, r12.z, r14.x
// 5201  0x0002719C:   mad r14.xyz, r14.yzwy, r12.zzzz, r5.xyzx
// 5202  0x000271C0:   mul r14.xyz, r9.wwww, r14.xyzx
// 5203  0x000271DC:   mul r14.xyz, r8.wwww, r14.xyzx
// 5204  0x000271F8:   mul r15.xyz, r7.wwww, cb3[20].xyzx
// 5205  0x00027218:   mad r18.xyz, r10.wwww, r15.xyzx, cb3[18].xyzx
// 5206  0x00027240:   mul r14.xyz, r14.xyzx, r15.xyzx
// 5207  0x0002725C: else 
// 5208  0x00027260:   mov r18.xyz, cb3[18].xyzx
// 5209  0x00027278:   mov r14.xyz, l(0,0,0,0)
// 5210  0x00027298: endif 
// 5211  0x0002729C: mul r15.xyz, r4.zzzz, cb4[13].xywx
// 5212  0x000272BC: mad r15.xyz, cb4[12].xywx, r4.yyyy, r15.xyzx
// 5213  0x000272E4: mad r15.xyz, cb4[14].xywx, r4.wwww, r15.xyzx
// 5214  0x0002730C: add r15.xyz, r15.xyzx, cb4[15].xywx
// 5215  0x0002732C: div r19.xy, r15.xyxx, r15.zzzz
// 5216  0x00027348: add r7.w, r19.x, l(1.000000)
// 5217  0x00027364: mul r7.w, r7.w, cb1[26].z
// 5218  0x00027384: mul r7.w, r7.w, l(0.500000)
// 5219  0x000273A0: max r7.w, r7.w, l(0.000000)
// 5220  0x000273BC: min r15.x, r6.x, r7.w
// 5221  0x000273D8: add r6.x, -r19.y, l(1.000000)
// 5222  0x000273F8: mul r6.x, r6.x, cb1[26].w
// 5223  0x00027418: mul r6.x, r6.x, l(0.500000)
// 5224  0x00027434: max r6.x, r6.x, l(0.000000)
// 5225  0x00027450: min r15.y, r6.z, r6.x
// 5226  0x0002746C: movc r15.xyz, cb4[2].xxxx, r15.xyzx, v8.xywx
// 5227  0x00027494: add r6.xz, r15.xxyx, -cb1[26].xxyx
// 5228  0x000274B8: ftou r6.xz, r6.xxzx
// 5229  0x000274CC: ushr r6.xz, r6.xxzx, cb3[25].xxxx
// 5230  0x000274EC: imad r6.x, r6.z, cb3[25].y, r6.x
// 5231  0x00027514: imad r6.x, r6.x, cb3[22].z, cb3[22].y
// 5232  0x00027540: mul r6.z, r15.z, cb3[26].x
// 5233  0x00027560: max r6.z, r6.z, l(0.000000)
// 5234  0x0002757C: min r6.z, r6.z, cb3[26].y
// 5235  0x0002759C: ftou r6.z, r6.z
// 5236  0x000275B0: imad r6.z, r6.z, cb3[22].z, cb3[22].x
// 5237  0x000275DC: add r15.xyz, r4.yzwy, -cb1[19].xyzx
// 5238  0x00027600: dp3 r7.w, r15.xyzx, r15.xyzx
// 5239  0x0002761C: rsq r8.w, r7.w
// 5240  0x00027630: mul r19.xyz, r8.wwww, r15.xyzx
// 5241  0x0002764C: eq r20.xyz, r11.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
// 5242  0x00027674: mul r9.w, l(4.000000), cb3[0].w
// 5243  0x00027694: and r10.w, r20.y, r20.x
// 5244  0x000276B0: and r10.w, r20.z, r10.w
// 5245  0x000276CC: or r1.y, r1.y, r10.w
// 5246  0x000276E8: movc r2.xyz, r1.yyyy, r8.xyzx, r2.xyzx
// 5247  0x0002770C: lt r1.y, l(0.000000), r1.x
// 5248  0x00027728: mad r7.xyz, -r7.xyzx, r0.wwww, r2.xyzx
// 5249  0x00027750: mad r7.xyz, r7.xyzx, l(10.000000, 10.000000, 10.000000, 0.000000), r8.xyzx
// 5250  0x00027780: dp3 r0.w, r2.xyzx, -r19.xyzx
// 5251  0x000277A0: max r0.w, r0.w, l(0.000000)
// 5252  0x000277BC: add r20.xyz, -r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
// 5253  0x000277E8: mov r21.xyz, v1.xyzx
// 5254  0x000277FC: mov r21.w, l(1.000000)
// 5255  0x00027810: mov r22.xz, cb3[2].zzyz
// 5256  0x00027828: mov r22.yw, cb3[3].zzzz
// 5257  0x00027840: mov r23.xz, cb3[2].zzyz
// 5258  0x00027858: mov r23.yw, cb3[3].yyyy
// 5259  0x00027870: mov r24.xz, cb3[2].zzyz
// 5260  0x00027888: mov r24.yw, l(0,0,0,0)
// 5261  0x000278A8: mov r25.xz, l(0,0,0,0)
// 5262  0x000278C8: mov r25.yw, cb3[3].yyyz
// 5263  0x000278E0: mov r26.x, cb4[2].x
// 5264  0x000278F8: mov r26.yzw, r16.xxyz
// 5265  0x0002790C: mov r27.xyz, r18.xyzx
// 5266  0x00027920: mov r28.xyz, r14.xyzx
// 5267  0x00027934: mov r10.w, r16.w
// 5268  0x00027948: mov r12.z, l(0)
// 5269  0x0002795C: loop 
// 5270  0x00027960:   uge r14.w, r12.z, cb3[22].z
// 5271  0x00027980:   breakc_nz r14.w
// 5272  0x0002798C:   iadd r14.w, r6.x, r12.z
// 5273  0x000279A8:   ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r14.w, r14.w, l(0), t13.xxxx
// 5274  0x000279D4:   iadd r15.w, r6.z, r12.z
// 5275  0x000279F0:   ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r15.w, r15.w, l(0), t13.xxxx
// 5276  0x00027A1C:   and r14.w, r14.w, r15.w
// 5277  0x00027A38:   ishl r15.w, r12.z, l(5)
// 5278  0x00027A54:   mov r29.xyz, r27.xyzx
// 5279  0x00027A68:   mov r30.xyz, r28.xyzx
// 5280  0x00027A7C:   mov r31.xyz, r26.yzwy
// 5281  0x00027A90:   mov r17.w, r26.x
// 5282  0x00027AA4:   mov r31.w, r10.w
// 5283  0x00027AB8:   mov r18.w, r14.w
// 5284  0x00027ACC:   loop 
// 5285  0x00027AD0:     breakc_z r18.w
// 5286  0x00027ADC:     firstbit_lo r19.w, r18.w
// 5287  0x00027AF0:     iadd r19.w, r15.w, r19.w
// 5288  0x00027B0C:     iadd r20.w, r18.w, l(-1)
// 5289  0x00027B28:     and r18.w, r18.w, r20.w
// 5290  0x00027B44:     ld_structured_indexable(structured_buffer, stride=416)(mixed,mixed,mixed,mixed) r32.xyzw, r19.w, l(0), t18.xyzw
// 5291  0x00027B70:     ld_structured_indexable(structured_buffer, stride=416)(mixed,mixed,mixed,mixed) r33.xyzw, r19.w, l(16), t18.xyzw
// 5292  0x00027B9C:     ld_structured_indexable(structured_buffer, stride=416)(mixed,mixed,mixed,mixed) r34.xyzw, r19.w, l(32), t18.xyzw
// 5293  0x00027BC8:     ld_structured_indexable(structured_buffer, stride=416)(mixed,mixed,mixed,mixed) r35.xyzw, r19.w, l(48), t18.xyzw
// 5294  0x00027BF4:     dp4 r32.x, r21.xyzw, r32.xyzw
// 5295  0x00027C10:     dp4 r32.y, r21.xyzw, r33.xyzw
// 5296  0x00027C2C:     dp4 r32.z, r21.xyzw, r34.xyzw
// 5297  0x00027C48:     dp4 r20.w, r21.xyzw, r35.xyzw
// 5298  0x00027C64:     div r32.xyz, r32.xyzx, r20.wwww
// 5299  0x00027C80:     lt r33.xyz, l(-1.000000, -1.000000, 0.000000, 0.000000), r32.xyzx
// 5300  0x00027CA8:     and r20.w, r33.y, r33.x
// 5301  0x00027CC4:     and r20.w, r33.z, r20.w
// 5302  0x00027CE0:     lt r33.xyz, r32.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
// 5303  0x00027D08:     and r27.w, r33.y, r33.x
// 5304  0x00027D24:     and r27.w, r33.z, r27.w
// 5305  0x00027D40:     and r20.w, r20.w, r27.w
// 5306  0x00027D5C:     not r20.w, r20.w
// 5307  0x00027D70:     ld_structured_indexable(structured_buffer, stride=416)(mixed,mixed,mixed,mixed) r33.xyzw, r19.w, l(272), t18.xyzw
// 5308  0x00027D9C:     ld_structured_indexable(structured_buffer, stride=416)(mixed,mixed,mixed,mixed) r34.xyzw, r19.w, l(288), t18.xyzw
// 5309  0x00027DC8:     ld_structured_indexable(structured_buffer, stride=416)(mixed,mixed,mixed,mixed) r35.xyzw, r19.w, l(304), t18.xyzw
// 5310  0x00027DF4:     dp4 r33.x, r21.xyzw, r33.xyzw
// 5311  0x00027E10:     dp4 r33.y, r21.xyzw, r34.xyzw
// 5312  0x00027E2C:     dp4 r33.z, r21.xyzw, r35.xyzw
// 5313  0x00027E48:     ge r33.xyz, l(1.000000, 1.000000, 1.000000, 0.000000), |r33.xyzx|
// 5314  0x00027E74:     and r27.w, r33.y, r33.x
// 5315  0x00027E90:     and r27.w, r33.z, r27.w
// 5316  0x00027EAC:     not r27.w, r27.w
// 5317  0x00027EC0:     or r20.w, r20.w, r27.w
// 5318  0x00027EDC:     if_z r20.w
// 5319  0x00027EE8:       ld_structured_indexable(structured_buffer, stride=416)(mixed,mixed,mixed,mixed) r33.xyzw, r19.w, l(160), t18.xywz
// 5320  0x00027F14:       ld_structured_indexable(structured_buffer, stride=416)(mixed,mixed,mixed,mixed) r34.xyzw, r19.w, l(240), t18.xyzw
// 5321  0x00027F40:       dp4 r20.w, r31.xyzw, r34.xyzw
// 5322  0x00027F5C:       add r20.w, -r20.w, l(1.000000)
// 5323  0x00027F7C:       mul r34.xyz, r20.wwww, r33.xywx
// 5324  0x00027F98:       ld_structured_indexable(structured_buffer, stride=416)(mixed,mixed,mixed,mixed) r35.xyzw, r19.w, l(128), t18.xyzw
// 5325  0x00027FC4:       ld_structured_indexable(structured_buffer, stride=416)(mixed,mixed,mixed,mixed) r36.xyzw, r19.w, l(144), t18.xyzw
// 5326  0x00027FF0:       ld_structured_indexable(structured_buffer, stride=416)(mixed,mixed,mixed,mixed) r37.xyzw, r19.w, l(176), t18.xyzw
// 5327  0x0002801C:       ld_structured_indexable(structured_buffer, stride=416)(mixed,mixed,mixed,mixed) r38.xyz, r19.w, l(192), t18.xyzx
// 5328  0x00028048:       add r39.xyzw, r37.wxyw, r37.wxyw
// 5329  0x00028064:       mul r40.xy, r37.yzyy, r39.ywyy
// 5330  0x00028080:       mad r20.w, -r39.z, r37.y, l(1.000000)
// 5331  0x000280A8:       dp2 r27.w, r37.zzzz, r37.zzzz
// 5332  0x000280C4:       add r41.x, r20.w, -r27.w
// 5333  0x000280E4:       add r41.y, r40.y, r40.x
// 5334  0x00028100:       mul r39.xzw, r37.yyzx, r39.xxzw
// 5335  0x0002811C:       mad r41.z, r39.y, r37.z, -r39.x
// 5336  0x00028144:       mad r40.x, r39.y, r37.y, -r40.y
// 5337  0x0002816C:       mad r20.w, -r39.y, r37.x, -r27.w
// 5338  0x00028198:       add r40.y, r20.w, l(1.000000)
// 5339  0x000281B4:       add r40.z, r39.w, r39.z
// 5340  0x000281D0:       lt r39.xy, l(0.000000, 0.000000, 0.000000, 0.000000), r36.zwzz
// 5341  0x000281F8:       mul_sat r20.w, r32.z, r36.z
// 5342  0x00028214:       mad r27.w, r20.w, l(-2.000000), l(3.000000)
// 5343  0x00028238:       mul r20.w, r20.w, r20.w
// 5344  0x00028254:       mul r20.w, r20.w, r27.w
// 5345  0x00028270:       movc r20.w, r39.x, r20.w, l(1.000000)
// 5346  0x00028294:       add r27.w, -r32.z, l(1.000000)
// 5347  0x000282B4:       mul_sat r27.w, r36.w, r27.w
// 5348  0x000282D0:       mad r28.w, r27.w, l(-2.000000), l(3.000000)
// 5349  0x000282F4:       mul r27.w, r27.w, r27.w
// 5350  0x00028310:       mul r27.w, r27.w, r28.w
// 5351  0x0002832C:       mul r27.w, r20.w, r27.w
// 5352  0x00028348:       movc r39.w, r39.y, r27.w, r20.w
// 5353  0x0002836C:       ne r20.w, r35.w, l(0.000000)
// 5354  0x00028388:       add r42.xyz, r35.xyzx, -v1.xyzx
// 5355  0x000283A8:       dp3 r27.w, r42.xyzx, r42.xyzx
// 5356  0x000283C4:       max r28.w, r35.w, r27.w
// 5357  0x000283E0:       div r28.w, r35.w, r28.w
// 5358  0x000283FC:       mul r28.w, r28.w, r39.w
// 5359  0x00028418:       sqrt r27.w, r27.w
// 5360  0x0002842C:       mad_sat r29.w, r36.y, r27.w, r36.x
// 5361  0x00028450:       mad r30.w, r29.w, l(-2.000000), l(3.000000)
// 5362  0x00028474:       mul r29.w, r29.w, r29.w
// 5363  0x00028490:       mul r29.w, r29.w, r30.w
// 5364  0x000284AC:       mul r28.w, r28.w, r29.w
// 5365  0x000284C8:       mad r36.xyz, -r40.xyzx, r38.zzzz, r42.xyzx
// 5366  0x000284F0:       mad r40.xyz, r40.xyzx, r38.zzzz, r42.xyzx
// 5367  0x00028514:       add r40.xyz, -r36.xyzx, r40.xyzx
// 5368  0x00028534:       dp3 r29.w, -r36.xyzx, r40.xyzx
// 5369  0x00028554:       dp3 r30.w, r40.xyzx, r40.xyzx
// 5370  0x00028570:       ge r32.w, l(0.000000), r29.w
// 5371  0x0002858C:       div r29.w, r29.w, r30.w
// 5372  0x000285A8:       min r29.w, r29.w, l(1.000000)
// 5373  0x000285C4:       mad r40.xyz, r40.xyzx, r29.wwww, r36.xyzx
// 5374  0x000285E8:       movc r36.xyz, r32.wwww, r36.xyzx, r40.xyzx
// 5375  0x0002860C:       dp3 r29.w, r36.xyzx, r36.xyzx
// 5376  0x00028628:       rsq r29.w, r29.w
// 5377  0x0002863C:       mul r36.xyz, r29.wwww, r36.xyzx
// 5378  0x00028658:       dp3 r29.w, r41.xyzx, r36.xyzx
// 5379  0x00028674:       mad_sat r29.w, r38.y, r29.w, r38.x
// 5380  0x00028698:       mul r36.w, r28.w, r29.w
// 5381  0x000286B4:       div r36.xyz, r42.xyzx, r27.wwww
// 5382  0x000286D0:       mov r39.xyz, r35.xyzx
// 5383  0x000286E4:       movc r35.xyzw, r20.wwww, r36.xyzw, r39.xyzw
// 5384  0x00028708:       mul r34.xyz, r34.xyzx, r35.wwww
// 5385  0x00028724:       eq r20.w, r33.z, l(0.000000)
// 5386  0x00028740:       if_nz r20.w
// 5387  0x0002874C:         ld_structured_indexable(structured_buffer, stride=416)(mixed,mixed,mixed,mixed) r36.xyz, r19.w, l(224), t18.xyzx
// 5388  0x00028778:         eq r20.w, r36.z, l(0.000000)
// 5389  0x00028794:         if_nz r20.w
// 5390  0x000287A0:           add r38.xy, r36.xyxx, l(-1.000000, -1.000000, 0.000000, 0.000000)
// 5391  0x000287C8:           add r38.zw, |r32.xxxy|, l(0.000000, 0.000000, -1.000000, -1.000000)
// 5392  0x000287F4:           div r38.xy, l(1.000000, 1.000000, 1.000000, 1.000000), r38.xyxx
// 5393  0x0002881C:           mul_sat r38.xy, r38.xyxx, r38.zwzz
// 5394  0x00028838:           mad r38.zw, r38.xxxy, l(0.000000, 0.000000, -2.000000, -2.000000), l(0.000000, 0.000000, 3.000000, 3.000000)
// 5395  0x00028874:           mul r38.xy, r38.xyxx, r38.xyxx
// 5396  0x00028890:           mul r38.xy, r38.xyxx, r38.zwzz
// 5397  0x000288AC:           mul r20.w, r38.y, r38.x
// 5398  0x000288C8:         else 
// 5399  0x000288CC:           mul r38.xy, |r32.xyxx|, r36.yxyy
// 5400  0x000288EC:           div r27.w, l(2.000000), r36.z
// 5401  0x00028908:           log r38.xy, r38.xyxx
// 5402  0x0002891C:           mul r38.xy, r27.wwww, r38.xyxx
// 5403  0x00028938:           exp r38.xy, r38.xyxx
// 5404  0x0002894C:           add r28.w, r38.y, r38.x
// 5405  0x00028968:           mul r29.w, r36.y, r36.x
// 5406  0x00028984:           max r28.w, r28.w, l(0.000000)
// 5407  0x000289A0:           mul r30.w, r36.z, l(-0.500000)
// 5408  0x000289BC:           log r28.w, r28.w
// 5409  0x000289D0:           mul r28.w, r28.w, r30.w
// 5410  0x000289EC:           exp r28.w, r28.w
// 5411  0x00028A00:           mul r32.w, r28.w, r29.w
// 5412  0x00028A1C:           log r36.xy, |r32.xyxx|
// 5413  0x00028A34:           mul r36.xy, r27.wwww, r36.xyxx
// 5414  0x00028A50:           exp r36.xy, r36.xyxx
// 5415  0x00028A64:           add r27.w, r36.y, r36.x
// 5416  0x00028A80:           max r27.w, r27.w, l(0.000000)
// 5417  0x00028A9C:           log r27.w, r27.w
// 5418  0x00028AB0:           mul r27.w, r27.w, r30.w
// 5419  0x00028ACC:           exp r27.w, r27.w
// 5420  0x00028AE0:           lt r30.w, r32.w, r27.w
// 5421  0x00028AFC:           mad r28.w, r29.w, r28.w, -r27.w
// 5422  0x00028B24:           add r29.w, -r27.w, l(1.000000)
// 5423  0x00028B44:           div r28.w, l(1.000000, 1.000000, 1.000000, 1.000000), r28.w
// 5424  0x00028B6C:           mul_sat r28.w, r28.w, r29.w
// 5425  0x00028B88:           mad r29.w, r28.w, l(-2.000000), l(3.000000)
// 5426  0x00028BAC:           mul r28.w, r28.w, r28.w
// 5427  0x00028BC8:           mul r28.w, r28.w, r29.w
// 5428  0x00028BE4:           lt r27.w, l(1.000000), r27.w
// 5429  0x00028C00:           and r27.w, r27.w, l(0x3f800000)
// 5430  0x00028C1C:           movc r20.w, r30.w, r28.w, r27.w
// 5431  0x00028C40:         endif 
// 5432  0x00028C44:         mul r36.xyz, r20.wwww, r34.xyzx
// 5433  0x00028C60:       else 
// 5434  0x00028C64:         lt r20.w, r33.z, l(0.000000)
// 5435  0x00028C80:         if_nz r20.w
// 5436  0x00028C8C:           mul r38.xyz, r37.xzyx, -r35.yxzy
// 5437  0x00028CAC:           mad r38.xyz, -r35.xzyx, r37.yxzy, -r38.xyzx
// 5438  0x00028CD8:           mad r38.xyz, -r35.zyxz, r37.wwww, r38.xyzx
// 5439  0x00028D00:           dp3 r20.w, -r35.xyzx, r37.xyzx
// 5440  0x00028D20:           mul r39.xyz, r20.wwww, r37.yxzy
// 5441  0x00028D3C:           mad r39.xyz, r38.yzxy, r37.wwww, r39.xyzx
// 5442  0x00028D60:           mul r40.xyz, -r37.xzyx, r38.xyzx
// 5443  0x00028D80:           mad r37.xyz, -r37.zyxz, r38.zxyz, -r40.xyzx
// 5444  0x00028DAC:           add r37.xyz, r37.xyzx, r39.xyzx
// 5445  0x00028DC8:           min r20.w, |r37.y|, |r37.x|
// 5446  0x00028DEC:           max r27.w, |r37.y|, |r37.x|
// 5447  0x00028E10:           div r27.w, l(1.000000, 1.000000, 1.000000, 1.000000), r27.w
// 5448  0x00028E38:           mul r20.w, r20.w, r27.w
// 5449  0x00028E54:           mul r27.w, r20.w, r20.w
// 5450  0x00028E70:           mad r28.w, r27.w, l(0.020835), l(-0.085133)
// 5451  0x00028E94:           mad r28.w, r27.w, r28.w, l(0.180141)
// 5452  0x00028EB8:           mad r28.w, r27.w, r28.w, l(-0.330299)
// 5453  0x00028EDC:           mad r27.w, r27.w, r28.w, l(0.999866)
// 5454  0x00028F00:           mul r28.w, r20.w, r27.w
// 5455  0x00028F1C:           lt r29.w, |r37.y|, |r37.x|
// 5456  0x00028F40:           mad r28.w, r28.w, l(-2.000000), l(1.570796)
// 5457  0x00028F64:           and r28.w, r29.w, r28.w
// 5458  0x00028F80:           mad r20.w, r20.w, r27.w, r28.w
// 5459  0x00028FA4:           lt r27.w, -r37.y, r37.y
// 5460  0x00028FC4:           and r27.w, r27.w, l(0xc0490fdb)
// 5461  0x00028FE0:           add r20.w, r20.w, r27.w
// 5462  0x00028FFC:           min r27.w, -r37.y, r37.x
// 5463  0x0002901C:           max r28.w, -r37.y, r37.x
// 5464  0x0002903C:           lt r27.w, r27.w, -r27.w
// 5465  0x0002905C:           ge r28.w, r28.w, -r28.w
// 5466  0x0002907C:           and r27.w, r27.w, r28.w
// 5467  0x00029098:           movc r20.w, r27.w, -r20.w, r20.w
// 5468  0x000290C0:           mul r37.x, r20.w, l(0.159155)
// 5469  0x000290DC:           add r20.w, -|r37.z|, l(1.000000)
// 5470  0x000290FC:           sqrt r20.w, r20.w
// 5471  0x00029110:           mad r27.w, |r37.z|, l(-0.018729), l(0.074261)
// 5472  0x00029138:           mad r27.w, r27.w, |r37.z|, l(-0.212114)
// 5473  0x00029160:           mad r27.w, r27.w, |r37.z|, l(1.570729)
// 5474  0x00029188:           mul r28.w, r20.w, r27.w
// 5475  0x000291A4:           mad r28.w, r28.w, l(-2.000000), l(3.141593)
// 5476  0x000291C8:           lt r29.w, r37.z, -r37.z
// 5477  0x000291E8:           and r28.w, r28.w, r29.w
// 5478  0x00029204:           mad r20.w, r27.w, r20.w, r28.w
// 5479  0x00029228:           mul r37.y, r20.w, l(0.318310)
// 5480  0x00029244:           mov r38.z, -r33.z
// 5481  0x0002925C:           ld_structured_indexable(structured_buffer, stride=416)(mixed,mixed,mixed,mixed) r39.xyzw, r19.w, l(224), t18.xyzw
// 5482  0x00029288:           mad r38.xy, r37.xyxx, r39.zwzz, r39.xyxx
// 5483  0x000292AC:           sample_l_indexable(texture3d)(float,float,float,float) r37.xyz, r38.xyzx, t4.xyzw, s2, l(0.000000)
// 5484  0x000292E0:           mul r36.xyz, r34.xyzx, r37.xyzx
// 5485  0x000292FC:         else 
// 5486  0x00029300:           mad r37.xy, r32.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
// 5487  0x0002933C:           ld_structured_indexable(structured_buffer, stride=416)(mixed,mixed,mixed,mixed) r38.xyzw, r19.w, l(224), t18.xyzw
// 5488  0x00029368:           mad r33.xy, r37.xyxx, r38.zwzz, r38.xyxx
// 5489  0x0002938C:           sample_l_indexable(texture3d)(float,float,float,float) r33.xyz, r33.xyzx, t4.xyzw, s7, l(0.000000)
// 5490  0x000293C0:           mul r36.xyz, r33.xyzx, r34.xyzx
// 5491  0x000293DC:         endif 
// 5492  0x000293E0:       endif 
// 5493  0x000293E4:       eq r33.xyz, r36.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
// 5494  0x0002940C:       and r20.w, r33.y, r33.x
// 5495  0x00029428:       and r20.w, r33.z, r20.w
// 5496  0x00029444:       if_z r20.w
// 5497  0x00029450:         ld_structured_indexable(structured_buffer, stride=416)(mixed,mixed,mixed,mixed) r33.xy, r19.w, l(256), t18.xyxx
// 5498  0x0002947C:         ld_structured_indexable(structured_buffer, stride=416)(mixed,mixed,mixed,mixed) r34.xyzw, r19.w, l(208), t18.xyzw
// 5499  0x000294A8:         lt r20.w, l(0.000000), r34.z
// 5500  0x000294C4:         ieq r27.w, r17.w, l(0)
// 5501  0x000294E0:         and r20.w, r20.w, r27.w
// 5502  0x000294FC:         if_nz r20.w
// 5503  0x00029508:           ld_structured_indexable(structured_buffer, stride=416)(mixed,mixed,mixed,mixed) r19.w, r19.w, l(264), t18.xxxx
// 5504  0x00029534:           and r19.w, r19.w, l(4)
// 5505  0x00029550:           mul r33.zw, r32.yyyx, l(0.000000, 0.000000, 1.000000, -1.000000)
// 5506  0x00029578:           movc r32.xy, r19.wwww, r33.zwzz, r32.xyxx
// 5507  0x0002959C:           mad r32.xy, r32.xyxx, r34.zwzz, r34.xyxx
// 5508  0x000295C0:           add_sat r19.w, r32.z, cb3[1948].z
// 5509  0x000295E0:           add r34.xyzw, r22.xyzw, r32.xyxy
// 5510  0x000295FC:           sample_c_lz_indexable(texture2d)(float,float,float,float) r37.x, r34.xyxx, t6.xxxx, s8, r19.w
// 5511  0x00029630:           sample_c_lz_indexable(texture2d)(float,float,float,float) r37.y, r34.zwzz, t6.xxxx, s8, r19.w
// 5512  0x00029664:           add r34.xyzw, r23.xyzw, r32.xyxy
// 5513  0x00029680:           sample_c_lz_indexable(texture2d)(float,float,float,float) r37.z, r34.xyxx, t6.xxxx, s8, r19.w
// 5514  0x000296B4:           sample_c_lz_indexable(texture2d)(float,float,float,float) r37.w, r34.zwzz, t6.xxxx, s8, r19.w
// 5515  0x000296E8:           dp4 r20.w, r37.xyzw, l(0.250000, 0.250000, 0.250000, 0.250000)
// 5516  0x00029710:           eq r32.zw, r20.wwww, l(0.000000, 0.000000, 0.000000, 1.000000)
// 5517  0x00029738:           or r27.w, r32.w, r32.z
// 5518  0x00029754:           if_z r27.w
// 5519  0x00029760:             add r34.xyzw, r24.xyzw, r32.xyxy
// 5520  0x0002977C:             sample_c_lz_indexable(texture2d)(float,float,float,float) r37.x, r34.xyxx, t6.xxxx, s8, r19.w
// 5521  0x000297B0:             sample_c_lz_indexable(texture2d)(float,float,float,float) r37.y, r34.zwzz, t6.xxxx, s8, r19.w
// 5522  0x000297E4:             add r34.xyzw, r25.xyzw, r32.xyxy
// 5523  0x00029800:             sample_c_lz_indexable(texture2d)(float,float,float,float) r37.z, r34.xyxx, t6.xxxx, s8, r19.w
// 5524  0x00029834:             sample_c_lz_indexable(texture2d)(float,float,float,float) r37.w, r34.zwzz, t6.xxxx, s8, r19.w
// 5525  0x00029868:             dp4 r27.w, r37.xyzw, cb3[1].xxxx
// 5526  0x00029888:             mad r27.w, r20.w, r9.w, r27.w
// 5527  0x000298AC:             sample_c_lz_indexable(texture2d)(float,float,float,float) r19.w, r32.xyxx, t6.xxxx, s8, r19.w
// 5528  0x000298E0:             mad r20.w, r19.w, cb3[1].y, r27.w
// 5529  0x00029908:           endif 
// 5530  0x0002990C:           add r19.w, r20.w, l(-1.000000)
// 5531  0x00029928:           mad r19.w, r33.y, r19.w, l(1.000000)
// 5532  0x0002994C:           mul r36.xyz, r19.wwww, r36.xyzx
// 5533  0x00029968:           eq r32.xyz, r36.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
// 5534  0x00029990:           and r19.w, r32.y, r32.x
// 5535  0x000299AC:           and r19.w, r32.z, r19.w
// 5536  0x000299C8:         else 
// 5537  0x000299CC:           mov r19.w, l(0)
// 5538  0x000299E0:         endif 
// 5539  0x000299E4:         if_z r19.w
// 5540  0x000299F0:           dp3 r19.w, r8.xyzx, r35.xyzx
// 5541  0x00029A0C:           max r19.w, r19.w, l(0.000000)
// 5542  0x00029A28:           dp3 r20.w, r2.xyzx, r35.xyzx
// 5543  0x00029A44:           mad r27.w, r19.w, l(0.500000), l(0.500000)
// 5544  0x00029A68:           mov_sat r28.w, r20.w
// 5545  0x00029A7C:           add r28.w, -r28.w, l(1.000000)
// 5546  0x00029A9C:           mul r28.w, r28.w, r28.w
// 5547  0x00029AB8:           mad r27.w, r28.w, r28.w, r27.w
// 5548  0x00029ADC:           add r20.w, r20.w, l(0.200000)
// 5549  0x00029AF8:           mul_sat r20.w, r20.w, l(4.000000)
// 5550  0x00029B14:           dp3 r28.w, r7.xyzx, r35.xyzx
// 5551  0x00029B30:           add r29.w, -r28.w, l(1.000000)
// 5552  0x00029B50:           mad_sat r28.w, r1.x, r29.w, r28.w
// 5553  0x00029B74:           mul r20.w, r20.w, r27.w
// 5554  0x00029B90:           mad r20.w, r20.w, r28.w, -r19.w
// 5555  0x00029BB8:           mad r20.w, r1.x, r20.w, r19.w
// 5556  0x00029BDC:           movc r20.w, r1.y, r20.w, r19.w
// 5557  0x00029C00:           max r27.w, r0.x, r33.x
// 5558  0x00029C1C:           mad r32.xyz, -r15.xyzx, r8.wwww, r35.xyzx
// 5559  0x00029C44:           dp3 r28.w, r32.xyzx, r32.xyzx
// 5560  0x00029C60:           rsq r28.w, r28.w
// 5561  0x00029C74:           mul r32.xyz, r28.wwww, r32.xyzx
// 5562  0x00029C90:           dp3 r28.w, r32.xyzx, r2.xyzx
// 5563  0x00029CAC:           dp3 r29.w, r35.xyzx, r32.xyzx
// 5564  0x00029CC8:           max r29.w, r29.w, l(0.000000)
// 5565  0x00029CE4:           mul r30.w, r27.w, r27.w
// 5566  0x00029D00:           mul r28.w, r28.w, r28.w
// 5567  0x00029D1C:           mad r32.x, r30.w, r30.w, l(-1.000000)
// 5568  0x00029D40:           mad r28.w, r28.w, r32.x, l(1.000000)
// 5569  0x00029D64:           div r28.w, r30.w, r28.w
// 5570  0x00029D80:           mul r28.w, r28.w, r28.w
// 5571  0x00029D9C:           add r27.w, r27.w, l(1.000000)
// 5572  0x00029DB8:           mul r27.w, r27.w, r27.w
// 5573  0x00029DD4:           mul r30.w, r27.w, l(0.125000)
// 5574  0x00029DF0:           mad r27.w, -r27.w, l(0.125000), l(1.000000)
// 5575  0x00029E18:           mad r32.x, r19.w, r27.w, r30.w
// 5576  0x00029E3C:           mul r32.x, r32.x, l(4.000000)
// 5577  0x00029E58:           mad r27.w, r0.w, r27.w, r30.w
// 5578  0x00029E7C:           mul r27.w, r27.w, r32.x
// 5579  0x00029E98:           div r27.w, r28.w, r27.w
// 5580  0x00029EB4:           add r28.w, -r29.w, l(1.000000)
// 5581  0x00029ED4:           max r28.w, r28.w, l(0.000001)
// 5582  0x00029EF0:           mul r29.w, r28.w, r28.w
// 5583  0x00029F0C:           mul r29.w, r29.w, r29.w
// 5584  0x00029F28:           mul r28.w, r28.w, r29.w
// 5585  0x00029F44:           mad r32.xyz, r20.xyzx, r28.wwww, r5.xyzx
// 5586  0x00029F68:           mul r32.xyz, r27.wwww, r32.xyzx
// 5587  0x00029F84:           mul r32.xyz, r19.wwww, r32.xyzx
// 5588  0x00029FA0:           mad r29.xyz, r20.wwww, r36.xyzx, r29.xyzx
// 5589  0x00029FC4:           mad r30.xyz, r32.xyzx, r36.xyzx, r30.xyzx
// 5590  0x00029FE8:         endif 
// 5591  0x00029FEC:       endif 
// 5592  0x00029FF0:     endif 
// 5593  0x00029FF4:   endloop 
// 5594  0x00029FF8:   mov r27.xyz, r29.xyzx
// 5595  0x0002A00C:   mov r28.xyz, r30.xyzx
// 5596  0x0002A020:   iadd r12.z, r12.z, l(1)
// 5597  0x0002A03C: endloop 
// 5598  0x0002A040: dp3 r0.w, r11.xyzx, -r19.xyzx
// 5599  0x0002A060: max r0.w, r0.w, l(0.000000)
// 5600  0x0002A07C: min r1.x, r0.w, l(1.000000)
// 5601  0x0002A098: add r1.y, r0.y, r0.x
// 5602  0x0002A0B4: mul r1.y, r1.y, l(0.500000)
// 5603  0x0002A0D0: mul r1.y, r1.y, r1.y
// 5604  0x0002A0EC: mul r1.y, r1.y, r1.y
// 5605  0x0002A108: dp2 r1.x, r1.yyyy, r1.xxxx
// 5606  0x0002A124: mad r2.xyz, r5.xyzx, r1.xxxx, l(1.000000, 1.000000, 1.000000, 0.000000)
// 5607  0x0002A154: mul r2.xyz, r2.xyzx, r28.xyzx
// 5608  0x0002A170: dp2 r0.x, r0.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
// 5609  0x0002A198: dp3 r1.x, r19.xyzx, r11.xyzx
// 5610  0x0002A1B4: add r1.x, r1.x, r1.x
// 5611  0x0002A1D0: mad r7.xyz, r11.xyzx, -r1.xxxx, r19.xyzx
// 5612  0x0002A1F8: sqrt r1.x, r0.x
// 5613  0x0002A20C: mul r1.x, r1.x, cb3[27].y
// 5614  0x0002A22C: mad r1.y, -r0.x, r0.x, l(1.000000)
// 5615  0x0002A254: max r1.y, r1.y, l(0.000000)
// 5616  0x0002A270: sqrt r6.x, r1.y
// 5617  0x0002A284: mad r6.x, r0.x, r0.x, r6.x
// 5618  0x0002A2A8: mul r1.y, r1.y, r6.x
// 5619  0x0002A2C4: add r7.xyz, -r11.xyzx, r7.xyzx
// 5620  0x0002A2E4: mad r7.xyz, r1.yyyy, r7.xyzx, r11.xyzx
// 5621  0x0002A308: dp3 r1.y, r7.xyzx, r7.xyzx
// 5622  0x0002A324: rsq r1.y, r1.y
// 5623  0x0002A338: mul r7.xyz, r1.yyyy, r7.xyzx
// 5624  0x0002A354: imad r1.y, r3.x, cb3[23].z, cb3[23].y
// 5625  0x0002A380: imad r3.x, r3.w, cb3[23].z, cb3[23].x
// 5626  0x0002A3AC: mov r13.w, l(1.000000)
// 5627  0x0002A3C0: mov r14.xyzw, l(0,0,0,0)
// 5628  0x0002A3E0: mov r16.xyz, l(0,0,0,0)
// 5629  0x0002A400: mov r3.w, l(0.010000)
// 5630  0x0002A414: mov r6.xz, l(0,0,0,0)
// 5631  0x0002A434: loop 
// 5632  0x0002A438:   ult r8.w, r6.z, cb3[23].z
// 5633  0x0002A458:   not r9.w, r6.x
// 5634  0x0002A46C:   and r8.w, r8.w, r9.w
// 5635  0x0002A488:   breakc_z r8.w
// 5636  0x0002A494:   iadd r8.w, r1.y, r6.z
// 5637  0x0002A4B0:   ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r8.w, r8.w, l(0), t13.xxxx
// 5638  0x0002A4DC:   iadd r9.w, r3.x, r6.z
// 5639  0x0002A4F8:   ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r9.w, r9.w, l(0), t13.xxxx
// 5640  0x0002A524:   and r8.w, r8.w, r9.w
// 5641  0x0002A540:   ishl r9.w, r6.z, l(5)
// 5642  0x0002A55C:   mov r18.xyzw, r14.xyzw
// 5643  0x0002A570:   mov r21.xyz, r16.xyzx
// 5644  0x0002A584:   mov r10.w, r3.w
// 5645  0x0002A598:   mov r12.z, r6.x
// 5646  0x0002A5AC:   mov r15.w, r8.w
// 5647  0x0002A5C0:   loop 
// 5648  0x0002A5C4:     breakc_z r15.w
// 5649  0x0002A5D0:     firstbit_lo r16.w, r15.w
// 5650  0x0002A5E4:     iadd r16.w, r9.w, r16.w
// 5651  0x0002A600:     iadd r17.w, r15.w, l(-1)
// 5652  0x0002A61C:     and r17.w, r15.w, r17.w
// 5653  0x0002A638:     imul null, r16.w, r16.w, l(9)
// 5654  0x0002A658:     dp4 r22.x, r13.xyzw, cb3[r16.w + 28].xyzw
// 5655  0x0002A680:     dp4 r22.y, r13.xyzw, cb3[r16.w + 29].xyzw
// 5656  0x0002A6A8:     dp4 r22.z, r13.xyzw, cb3[r16.w + 30].xyzw
// 5657  0x0002A6D0:     add r23.xyz, r22.xyzx, -cb3[r16.w + 31].xyzx
// 5658  0x0002A6FC:     mul_sat r23.xyz, r23.xyzx, cb3[r16.w + 33].xyzx
// 5659  0x0002A724:     add r24.xyz, -r22.xyzx, cb3[r16.w + 32].xyzx
// 5660  0x0002A750:     mul_sat r24.xyz, r24.xyzx, cb3[r16.w + 33].xyzx
// 5661  0x0002A778:     min r19.w, r23.z, r23.y
// 5662  0x0002A794:     min r19.w, r19.w, r23.x
// 5663  0x0002A7B0:     min r20.w, r24.z, r24.y
// 5664  0x0002A7CC:     min r20.w, r20.w, r24.x
// 5665  0x0002A7E8:     min r19.w, r19.w, r20.w
// 5666  0x0002A804:     eq r20.w, r19.w, l(0.000000)
// 5667  0x0002A820:     if_nz r20.w
// 5668  0x0002A82C:       mov r15.w, r17.w
// 5669  0x0002A840:       continue 
// 5670  0x0002A844:     endif 
// 5671  0x0002A848:     mul r20.w, r19.w, r19.w
// 5672  0x0002A864:     mad r19.w, r19.w, l(-2.000000), l(3.000000)
// 5673  0x0002A888:     mul r19.w, r19.w, r20.w
// 5674  0x0002A8A4:     dp3 r23.x, r7.xyzx, cb3[r16.w + 28].xyzx
// 5675  0x0002A8CC:     dp3 r23.y, r7.xyzx, cb3[r16.w + 29].xyzx
// 5676  0x0002A8F4:     dp3 r23.z, r7.xyzx, cb3[r16.w + 30].xyzx
// 5677  0x0002A91C:     add r24.xyz, -cb3[r16.w + 31].xyzx, cb3[r16.w + 32].xyzx
// 5678  0x0002A954:     mad r24.xyz, r24.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), cb3[r16.w + 31].xyzx
// 5679  0x0002A990:     add r25.xyz, r22.xyzx, -r24.xyzx
// 5680  0x0002A9B0:     mad r24.xyz, r25.xyzx, cb4[36].xxxx, r24.xyzx
// 5681  0x0002A9D8:     movc r22.xyz, r3.yyyy, r24.xyzx, r22.xyzx
// 5682  0x0002A9FC:     add r24.xyz, -r22.xyzx, cb3[r16.w + 32].xyzx
// 5683  0x0002AA28:     div r24.xyz, r24.xyzx, r23.xyzx
// 5684  0x0002AA44:     add r25.xyz, -r22.xyzx, cb3[r16.w + 31].xyzx
// 5685  0x0002AA70:     div r25.xyz, r25.xyzx, r23.xyzx
// 5686  0x0002AA8C:     max r24.xyz, r24.xyzx, r25.xyzx
// 5687  0x0002AAA8:     min r20.w, r24.z, r24.y
// 5688  0x0002AAC4:     min r20.w, r20.w, r24.x
// 5689  0x0002AAE0:     mad r22.xyz, r23.xyzx, |r20.wwww|, r22.xyzx
// 5690  0x0002AB08:     add r23.xyz, -r22.xyzx, r23.xyzx
// 5691  0x0002AB28:     mad r22.xyz, r0.xxxx, r23.xyzx, r22.xyzx
// 5692  0x0002AB4C:     utof r22.w, cb3[r16.w + 31].w
// 5693  0x0002AB6C:     sample_l_indexable(texturecubearray)(float,float,float,float) r22.xyz, r22.xyzw, t10.xyzw, s2, r1.x
// 5694  0x0002ABA0:     mul r22.xyz, r22.xyzx, cb3[r16.w + 35].xyzx
// 5695  0x0002ABC8:     add r20.w, -r10.w, l(1.000000)
// 5696  0x0002ABE8:     mul r21.w, r19.w, r20.w
// 5697  0x0002AC04:     mad r19.w, r19.w, r20.w, r10.w
// 5698  0x0002AC28:     mad r22.xyz, r22.xyzx, r21.wwww, r21.xyzx
// 5699  0x0002AC4C:     mad r23.xyzw, cb3[r16.w + 36].xyzw, r21.wwww, r18.xyzw
// 5700  0x0002AC7C:     lt r16.w, l(0.990000), r19.w
// 5701  0x0002AC98:     if_nz r16.w
// 5702  0x0002ACA4:       mov r18.xyzw, r23.xyzw
// 5703  0x0002ACB8:       mov r21.xyz, r22.xyzx
// 5704  0x0002ACCC:       mov r10.w, r19.w
// 5705  0x0002ACE0:       mov r12.z, l(-1)
// 5706  0x0002ACF4:       break 
// 5707  0x0002ACF8:     endif 
// 5708  0x0002ACFC:     mov r18.xyzw, r23.xyzw
// 5709  0x0002AD10:     mov r21.xyz, r22.xyzx
// 5710  0x0002AD24:     mov r10.w, r19.w
// 5711  0x0002AD38:     mov r15.w, r17.w
// 5712  0x0002AD4C:   endloop 
// 5713  0x0002AD50:   mov r14.xyzw, r18.xyzw
// 5714  0x0002AD64:   mov r16.xyz, r21.xyzx
// 5715  0x0002AD78:   mov r3.w, r10.w
// 5716  0x0002AD8C:   mov r6.x, r12.z
// 5717  0x0002ADA0:   iadd r6.z, r6.z, l(1)
// 5718  0x0002ADBC: endloop 
// 5719  0x0002ADC0: div r7.xyz, r16.xyzx, r3.wwww
// 5720  0x0002ADDC: div r13.xyzw, r14.xyzw, r3.wwww
// 5721  0x0002ADF8: mov r11.w, l(1.000000)
// 5722  0x0002AE0C: dp4 r1.x, r11.xyzw, r13.xyzw
// 5723  0x0002AE28: mad r1.y, r0.x, cb3[6].x, cb3[6].y
// 5724  0x0002AE54: max r1.y, r1.y, l(1.000000)
// 5725  0x0002AE70: div r1.x, r3.z, r1.x
// 5726  0x0002AE8C: min r1.x, r1.y, r1.x
// 5727  0x0002AEA8: mul r3.xyz, r1.xxxx, r7.xyzx
// 5728  0x0002AEC4: add r0.w, -r0.w, l(1.000000)
// 5729  0x0002AEE4: sqrt r0.y, r0.w
// 5730  0x0002AEF8: mad r7.xy, r0.xyxx, l(0.984375, 0.984375, 0.000000, 0.000000), l(0.007813, 0.007813, 0.000000, 0.000000)
// 5731  0x0002AF34: mov r7.z, l(1.000000)
// 5732  0x0002AF48: sample_l_indexable(texture2darray)(float,float,float,float) r0.xy, r7.xyzx, t5.xyzw, s1, l(0.000000)
// 5733  0x0002AF7C: add r0.w, -r0.x, r0.y
// 5734  0x0002AF9C: mad r7.xyz, r5.xyzx, r0.wwww, r0.xxxx
// 5735  0x0002AFC0: add r0.x, -r0.y, l(1.000000)
// 5736  0x0002AFE0: mad r5.xyz, r20.xyzx, l(0.047619, 0.047619, 0.047619, 0.000000), r5.xyzx
// 5737  0x0002B010: mul r11.xyz, r5.xyzx, r7.xyzx
// 5738  0x0002B02C: mad r5.xyz, -r0.xxxx, r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
// 5739  0x0002B060: div r5.xyz, r11.xyzx, r5.xyzx
// 5740  0x0002B07C: mul r11.xyz, r0.xxxx, r5.xyzx
// 5741  0x0002B098: mul r11.xyz, r3.xyzx, r11.xyzx
// 5742  0x0002B0B4: mad r3.xyz, r7.xyzx, r3.xyzx, r11.xyzx
// 5743  0x0002B0D8: mad r0.xyw, r5.xyxz, r0.xxxx, r7.xyxz
// 5744  0x0002B0FC: add r0.xyw, -r0.xyxw, l(1.000000, 1.000000, 0.000000, 1.000000)
// 5745  0x0002B128: mul r0.xyw, r0.xyxw, r17.xyxz
// 5746  0x0002B144: mul r1.x, r2.w, r1.z
// 5747  0x0002B160: mul r0.xyw, r0.xyxw, r1.xxxx
// 5748  0x0002B17C: mad r0.xyw, r27.xyxz, r1.zzzz, r0.xyxw
// 5749  0x0002B1A0: mad r5.xyz, r0.xywx, r9.xyzx, r12.xywx
// 5750  0x0002B1C4: mad r2.xyz, r2.xyzx, r1.xxxx, r5.xyzx
// 5751  0x0002B1E8: mad r1.xyz, r3.xyzx, r1.xxxx, r2.xyzx
// 5752  0x0002B20C: mad r0.xyw, r0.xyxw, r10.xyxz, r1.xyxz
// 5753  0x0002B230: if_nz cb0[1].y
// 5754  0x0002B240:   lt r1.x, cb4[26].x, r7.w
// 5755  0x0002B260:   mul r1.y, r4.w, cb4[26].z
// 5756  0x0002B280:   lt r1.y, r1.y, cb4[26].y
// 5757  0x0002B2A0:   and r1.x, r1.y, r1.x
// 5758  0x0002B2BC:   if_nz r1.x
// 5759  0x0002B2C8:     sqrt r1.y, r7.w
// 5760  0x0002B2DC:     mad r1.z, r1.y, cb4[40].y, -r1.y
// 5761  0x0002B308:     mad r4.x, cb0[0].z, r1.z, r1.y
// 5762  0x0002B330:     mad_sat r1.yz, cb4[23].wwzw, r4.wwxw, cb4[23].yyxy
// 5763  0x0002B35C:     log r1.yz, r1.yyzy
// 5764  0x0002B370:     mul r1.yz, r1.yyzy, cb4[24].yyxy
// 5765  0x0002B390:     exp r1.yz, r1.yyzy
// 5766  0x0002B3A4:     mul r1.y, r1.y, r1.z
// 5767  0x0002B3C0:     mul r1.y, r1.y, cb4[25].w
// 5768  0x0002B3E0:     mad r1.z, r1.y, cb4[40].z, -r1.y
// 5769  0x0002B40C:     mad r1.y, cb0[0].z, r1.z, r1.y
// 5770  0x0002B434:     add r2.xyz, -r0.xywx, cb4[25].xyzx
// 5771  0x0002B458:     mad r2.xyz, r1.yyyy, r2.xyzx, r0.xywx
// 5772  0x0002B47C:   endif 
// 5773  0x0002B480:   movc r1.xyz, r1.xxxx, r2.xyzx, r0.xywx
// 5774  0x0002B4A4:   lt r2.x, cb4[33].x, r7.w
// 5775  0x0002B4C4:   mul r2.y, r4.w, cb4[33].z
// 5776  0x0002B4E4:   lt r2.y, r2.y, cb4[33].y
// 5777  0x0002B504:   and r2.x, r2.y, r2.x
// 5778  0x0002B520:   if_nz r2.x
// 5779  0x0002B52C:     sqrt r2.y, r7.w
// 5780  0x0002B540:     mad r2.z, r2.y, cb4[40].y, -r2.y
// 5781  0x0002B56C:     mad r2.y, cb0[0].z, r2.z, r2.y
// 5782  0x0002B594:     dp3 r3.x, r15.xyzx, cb4[29].xyzx
// 5783  0x0002B5B4:     dp3 r3.y, r15.xyzx, cb4[30].xyzx
// 5784  0x0002B5D4:     dp3 r3.z, r15.xyzx, cb4[31].xyzx
// 5785  0x0002B5F4:     dp3 r2.z, r3.xyzx, r3.xyzx
// 5786  0x0002B610:     rsq r2.z, r2.z
// 5787  0x0002B624:     mul r3.xyz, r2.zzzz, r3.xyzx
// 5788  0x0002B640:     mad r2.y, r2.y, cb4[27].y, cb4[27].x
// 5789  0x0002B66C:     max r2.y, r2.y, l(0.000000)
// 5790  0x0002B688:     log r2.y, r2.y
// 5791  0x0002B69C:     mul r2.y, r2.y, cb4[27].w
// 5792  0x0002B6BC:     exp r2.y, r2.y
// 5793  0x0002B6D0:     mad r2.z, r4.w, cb4[28].y, cb4[28].x
// 5794  0x0002B6FC:     max r2.z, r2.z, l(0.000000)
// 5795  0x0002B718:     log r2.z, r2.z
// 5796  0x0002B72C:     mul r2.z, r2.z, cb4[28].z
// 5797  0x0002B74C:     exp r2.z, r2.z
// 5798  0x0002B760:     min r2.yz, r2.yyzy, l(0.000000, 1.000000, 1.000000, 0.000000)
// 5799  0x0002B788:     mul r2.y, r2.z, r2.y
// 5800  0x0002B7A4:     mad_sat r2.z, -r2.y, cb4[27].z, l(1.000000)
// 5801  0x0002B7D0:     mul r2.z, r2.z, cb4[28].w
// 5802  0x0002B7F0:     sample_l_indexable(texturecube)(float,float,float,float) r3.xyz, r3.xyzx, t12.xyzw, s3, r2.z
// 5803  0x0002B824:     mad r2.z, cb4[33].w, cb4[40].z, -cb4[33].w
// 5804  0x0002B858:     mad r2.z, cb0[0].z, r2.z, cb4[33].w
// 5805  0x0002B884:     mul r2.y, r2.z, r2.y
// 5806  0x0002B8A0:     mad r3.xyz, r3.xyzx, cb4[34].xxxx, -r1.xyzx
// 5807  0x0002B8CC:     mad r2.yzw, r2.yyyy, r3.xxyz, r1.xxyz
// 5808  0x0002B8F0:   endif 
// 5809  0x0002B8F4:   movc r0.xyw, r2.xxxx, r2.yzyw, r1.xyxz
// 5810  0x0002B918: endif 
// 5811  0x0002B91C: lt r1.x, l(0.000000), cb0[50].y
// 5812  0x0002B93C: if_nz r1.x
// 5813  0x0002B948:   dp3_sat r1.x, -r19.xyzx, r8.xyzx
// 5814  0x0002B968:   add r1.x, -r1.x, l(1.000000)
// 5815  0x0002B988:   ftoi r1.yz, v8.xxyx
// 5816  0x0002B99C:   and r2.xy, r1.yzyy, cb4[11].xyxx
// 5817  0x0002B9BC:   mov r2.zw, l(0,0,0,0)
// 5818  0x0002B9DC:   ld_indexable(texture2d)(float,float,float,float) r1.y, r2.xyzw, t0.xyzw
// 5819  0x0002BA00:   mul r1.z, r1.y, r1.x
// 5820  0x0002BA1C:   mad r1.y, -r1.x, r1.y, l(1.000000)
// 5821  0x0002BA44:   mad r1.x, r1.x, r1.y, r1.z
// 5822  0x0002BA68:   mul r1.y, l(20.000000), cb1[21].w
// 5823  0x0002BA88:   sincos r1.y, null, r1.y
// 5824  0x0002BAA0:   mad r1.y, r1.y, l(0.500000), l(1.000000)
// 5825  0x0002BAC4:   mad r1.y, r1.y, l(3.000000), l(3.000000)
// 5826  0x0002BAE8:   log r1.x, r1.x
// 5827  0x0002BAFC:   mul r1.x, r1.x, r1.y
// 5828  0x0002BB18:   exp r1.x, r1.x
// 5829  0x0002BB2C:   dp3 r1.y, r0.xywx, l(0.212500, 0.715400, 0.072100, 0.000000)
// 5830  0x0002BB54:   add r1.z, -r1.y, l(0.500000)
// 5831  0x0002BB74:   mad r1.y, r1.z, l(0.500000), r1.y
// 5832  0x0002BB98:   mad r1.x, r1.x, l(4.000000), r1.y
// 5833  0x0002BBBC:   mad r1.xyz, r1.xxxx, cb0[51].xyzx, -r0.xywx
// 5834  0x0002BBE8:   mad r0.xyw, cb0[50].yyyy, r1.xyxz, r0.xyxw
// 5835  0x0002BC10: endif 
// 5836  0x0002BC14: mul r1.x, r5.w, l(100.000000)
// 5837  0x0002BC30: min r1.x, r1.x, l(1.000000)
// 5838  0x0002BC4C: round_ni r2.xyz, r4.yzwy
// 5839  0x0002BC60: add r1.y, r2.y, r2.x
// 5840  0x0002BC7C: add r1.y, r2.z, r1.y
// 5841  0x0002BC98: mul r1.y, r1.y, l(0.500000)
// 5842  0x0002BCB4: frc r1.y, r1.y
// 5843  0x0002BCC8: dp3 r1.z, r0.xywx, l(0.212500, 0.715400, 0.072100, 0.000000)
// 5844  0x0002BCF0: mad r1.y, r1.y, l(0.200000), r1.z
// 5845  0x0002BD14: add r2.xyz, r0.xywx, -r1.yyyy
// 5846  0x0002BD34: mad r1.xyz, r1.xxxx, r2.xyzx, r1.yyyy
// 5847  0x0002BD58: add r1.xyz, r1.xyzx, l(-0.300000, -0.000000, -0.000000, 0.000000)
// 5848  0x0002BD80: mad r1.xyz, r6.yyyy, r1.xyzx, l(0.300000, 0.000000, 0.000000, 0.000000)
// 5849  0x0002BDB0: movc o0.xyz, cb0[0].xxxx, r1.xyzx, r0.xywx
// 5850  0x0002BDD8: add r0.x, r1.w, l(4.000000)
// 5851  0x0002BDF4: lt r0.x, |r0.x|, l(0.010000)
// 5852  0x0002BE14: ge r0.y, r6.w, l(0.900000)
// 5853  0x0002BE30: and r0.y, r0.y, l(0x3f800000)
// 5854  0x0002BE4C: movc o0.w, r0.x, r0.y, r0.z
// 5855  0x0002BE70: lt r0.x, l(0.000000), cb0[52].w
// 5856  0x0002BE90: if_nz r0.x
// 5857  0x0002BE9C:   add r0.x, cb0[52].w, l(-0.100000)
// 5858  0x0002BEBC:   mul_sat r0.x, r0.x, l(1.111111)
// 5859  0x0002BED8:   mad r0.y, r0.x, l(-2.000000), l(3.000000)
// 5860  0x0002BEFC:   mul r0.x, r0.x, r0.x
// 5861  0x0002BF18:   mul r0.x, r0.x, r0.y
// 5862  0x0002BF34:   add r0.yzw, -r4.yyzw, cb0[52].xxyz
// 5863  0x0002BF58:   dp3 r0.y, r0.yzwy, r0.yzwy
// 5864  0x0002BF74:   sqrt r0.y, r0.y
// 5865  0x0002BF88:   add r0.y, r0.y, l(-6.000000)
// 5866  0x0002BFA4:   mul_sat r0.y, r0.y, l(-0.250000)
// 5867  0x0002BFC0:   mad r0.z, r0.y, l(-2.000000), l(3.000000)
// 5868  0x0002BFE4:   mul r0.y, r0.y, r0.y
// 5869  0x0002C000:   mad r0.y, r0.z, r0.y, l(-1.000000)
// 5870  0x0002C024:   max r0.y, -r0.y, l(0.000000)
// 5871  0x0002C044:   mad r0.yz, r0.yyyy, l(0.000000, 0.510000, 0.910000, 0.000000), l(0.000000, 0.500000, 0.100000, 0.000000)
// 5872  0x0002C080:   add r0.z, -r0.y, r0.z
// 5873  0x0002C0A0:   mad r0.x, r0.x, r0.z, r0.y
// 5874  0x0002C0C4:   ftoi r0.yz, v8.xxyx
// 5875  0x0002C0D8:   and r1.xy, r0.yzyy, cb4[11].xyxx
// 5876  0x0002C0F8:   mov r1.zw, l(0,0,0,0)
// 5877  0x0002C118:   ld_indexable(texture2d)(float,float,float,float) r0.y, r1.xyzw, t0.xyzw
// 5878  0x0002C13C:   add r0.x, -r0.x, r0.y
// 5879  0x0002C15C:   lt r0.x, r0.x, l(0.000000)
// 5880  0x0002C178:   discard_nz r0.x
// 5881  0x0002C184: endif 
// 5882  0x0002C188: ret 
// // Approximately 0 instruction slots used
