// ---- Created with 3Dmigoto v1.3.16 on Fri Oct 03 12:30:00 2025
Texture2D<float4> t21 : register(t21);

Texture2D<float4> t20 : register(t20);

Texture2D<float4> t19 : register(t19);

Texture2D<float4> t18 : register(t18);

struct t17_t {
  float val[104];
};
StructuredBuffer<t17_t> t17 : register(t17);

Texture2D<float4> t16 : register(t16);

Texture2D<float4> t15 : register(t15);

Texture2D<float4> t14 : register(t14);

struct t13_t {
  float val[1];
};
StructuredBuffer<t13_t> t13 : register(t13);

TextureCube<float4> t12 : register(t12);

TextureCubeArray<float4> t10 : register(t10);

Texture2D<float4> t6 : register(t6);

Texture2DArray<float4> t5 : register(t5);

Texture3D<float4> t4 : register(t4);

Texture2DArray<float4> t3 : register(t3);

Texture2DArray<float4> t2 : register(t2);

Texture2DArray<float4> t1 : register(t1);

SamplerComparisonState s5_s : register(s5);

SamplerState s4_s : register(s4);

SamplerState s3_s : register(s3);

SamplerState s2_s : register(s2);

SamplerState s1_s : register(s1);

SamplerState s0_s : register(s0);

cbuffer cb4 : register(b4)
{
  float4 cb4[39];
}

cbuffer cb3 : register(b3)
{
  float4 cb3[1985];
}

cbuffer cb1 : register(b1)
{
  float4 cb1[27];
}

cbuffer cb0 : register(b0)
{
  float4 cb0[3];
}




// 3Dmigoto declarations
#define cmp -

float Fix(float x) {
  return max(0, x);
}

float2 Fix(float2 x) {
  return max(0, x);
}

float3 Fix(float3 x) {
  return max(0, x);
}

float4 Fix(float4 x) {
  return max(0, x);
}


void main(
  float4 v0 : TEXCOORD0,
  float4 v1 : TEXCOORD1,
  float4 v2 : TEXCOORD2,
  linear centroid float4 v3 : TEXCOORD3,
  linear centroid float4 v4 : TEXCOORD4,
  linear centroid float4 v5 : TEXCOORD5,
  float4 v6 : TEXCOORD6,
  uint v7 : TEXCOORD12,
  float4 v8 : SV_Position0,
  uint v9 : SV_IsFrontFace0,
  out float4 o0 : SV_Target0)
{
  const float4 icb[] = { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} };
  float4 r0,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21,r22,r23,r24,r25,r26,r27,r28,r29,r30,r31,r32,r33,r34,r35,r36,r37,r38,r39;
  uint4 bitmask, uiDest;
  float4 fDest;

  r0.x = dot(v1.xyz, v1.xyz);
  r0.x = cmp(r0.x >= 1.00999999);
  r0.xyz = r0.xxx ? v5.xyz : v1.xyz;
  r1.xy = cmp(asint(cb0[1].wy) != int2(0,0));
  r0.w = cmp(asint(cb0[1].z) == 0);
  r0.w = r0.w ? r1.x : 0;
  if (r0.w != 0) {
    r1.x = v9.x ? 1 : -1;
    r0.xyz = r1.xxx * r0.xyz;
  }
  r1.x = dot(r0.xyz, r0.xyz);
  r1.x = rsqrt(r1.x);
  r0.xyz = r1.xxx * r0.xyz;
  r2.xyz = cb4[35].zxy + v0.zxy;
  r1.xzw = Fix(t15.Sample(s3_s, v2.xy).xyz);
  r3.x = r1.x + r1.z;
  r3.x = -1.00392163 + r3.x;
  r3.y = r1.x + -r1.z;
  r1.x = 1 + -abs(r3.x);
  r3.z = r1.x + -abs(r3.y);
  r1.x = dot(r3.xyz, r3.xyz);
  r1.x = rsqrt(r1.x);
  r3.xyz = r3.xyz * r1.xxx;
  r1.x = cmp((int)v9.x == 0);
  r0.w = r0.w ? r1.x : 0;
  r1.x = r0.w ? -1 : 1;
  r4.xyz = v1.xyz * r1.xxx;
  r1.x = cmp(0 < v6.w);
  r1.x = r1.x ? 1 : -1;
  r5.xyz = v6.yzx * r4.zxy;
  r5.xyz = r4.yzx * v6.zxy + -r5.xyz;
  r5.xyz = r5.xyz * r1.xxx;
  r5.xyz = cb4[3].www ? -r5.xyz : r5.xyz;
  r3.w = r0.w ? r3.y : -r3.y;
  r5.xyz = r3.www * r5.xyz;
  r5.xyz = r3.xxx * v6.xyz + r5.xyz;
  r4.xyz = r3.zzz * r4.xyz + r5.xyz;
  r0.w = dot(r4.xyz, r4.xyz);
  r0.w = rsqrt(r0.w);
  r5.xyz = r4.xyz * r0.www;
  r1.x = v4.w * r1.w;
  r6.xyz = -cb1[19].xyz + r2.yzx;
  r1.z = dot(r6.xyz, r6.xyz);
  r1.w = rsqrt(r1.z);
  r7.xyz = r6.xyz * r1.www;
  r3.y = dot(-r7.xyz, r5.xyz);
  r3.y = max(0, r3.y);
  r4.w = dot(-r7.xyz, r0.xyz);
  r4.w = max(0, r4.w);
  r4.w = -r4.w * r4.w + 1;
  r4.w = -r4.w * 0.444444448 + 1;
  r4.w = sqrt(r4.w);
  r8.xyzw = Fix(t16.Sample(s3_s, v2.xy).xyzw);
  r6.w = saturate(v4.w * r8.w);
  r7.w = cb0[0].y + -cb0[0].x;
  r6.w = r6.w * r7.w + cb0[0].x;
  r9.xyzw = Fix(t14.Sample(s3_s, v2.xy).xyzw);
  r10.xyz = float3(-1,-1,-1) + v4.xyz;
  r10.xyz = cb0[0].zzz * r10.xyz + float3(1,1,1);
  r9.xyz = r10.xyz * r9.xyz;
  r4.w = 1 / r4.w;
  r9.xyz = log2(r9.xyz);
  r10.xyz = r9.xyz * r4.www;
  r10.xyz = exp2(r10.xyz);
  r4.w = 1 + -r3.y;
  r7.w = r4.w * r4.w;
  r7.w = r7.w * r7.w;
  r7.w = r7.w * r4.w;
  r7.w = r7.w * 0.959999979 + 0.0399999991;
  r8.w = r9.w * r6.w;
  r11.xyz = ddx_coarse(r0.xyz);
  r12.xyz = ddy_coarse(r0.xyz);
  r9.w = dot(r11.xyz, r11.xyz);
  r10.w = dot(r12.xyz, r12.xyz);
  r9.w = max(r10.w, r9.w);
  r9.w = min(1, r9.w);
  r9.w = log2(r9.w);
  r9.w = 0.333000004 * r9.w;
  r9.w = exp2(r9.w);
  r1.x = max(r9.w, r1.x);
  r13.xy = v3.xy;
  r13.z = 0;
  r14.xyz = Fix(t2.Sample(s2_s, r13.xyz).xyz);
  if (cb4[0].x != 0) {
    r13.xyz = Fix(t3.Sample(s2_s, r13.xyz).xyz);
    r13.xy = r13.xy * float2(2,2) + float2(-1,-1);
    r9.w = dot(r13.xy, r13.xy);
    r9.w = sqrt(r9.w);
    r9.w = max(0.996190846, r9.w);
    r9.w = 0.996190846 / r9.w;
    r15.xy = r13.xy * r9.ww;
    r9.w = dot(r15.xy, r15.xy);
    r9.w = 1 + -r9.w;
    r9.w = sqrt(r9.w);
    r10.w = saturate(cb3[4].x + r13.z);
    r11.xyz = abs(r12.xyz) + abs(r11.xyz);
    r11.x = dot(r11.xyz, r11.xyz);
    r11.yzw = ddx_coarse(r2.yzx);
    r12.xyz = ddy_coarse(r2.yzx);
    r11.yzw = abs(r12.xyz) + abs(r11.yzw);
    r11.y = dot(r11.yzw, r11.yzw);
    r11.xy = sqrt(r11.xy);
    r11.x = r11.x / r11.y;
    r11.x = -0.100000001 + r11.x;
    r11.x = saturate(-11.1111107 * r11.x);
    r11.y = r11.x * -2 + 3;
    r11.x = r11.x * r11.x;
    r11.x = r11.y * r11.x;
    r11.y = 1 + -r9.w;
    r11.xy = float2(0.800000012,1.5) * r11.xy;
    r11.y = min(1, r11.y);
    r11.y = r11.y * 1.89999998 + -0.899999976;
    r11.x = r11.x * r11.y + 1;
    r15.z = r11.x * r9.w;
    r9.w = dot(r15.xyz, r15.xyz);
    r9.w = rsqrt(r9.w);
    r11.xyz = r15.xyz * r9.www;
    r12.xyz = r10.www * r14.xyz;
    r13.xyz = -r10.www * r14.xyz + r14.xyz;
    r13.xyz = r13.xyz / r11.zzz;
    r3.x = dot(r11.xzy, r3.xzw);
    r3.x = max(0, r3.x);
    r14.xyz = r3.xxx * r13.xyz + r12.xyz;
  }
  t1.GetDimensions(0, fDest.x, fDest.y, fDest.z, fDest.w);
  r3.xz = fDest.xy;
  r3.xz = (int2)r3.xz;
  r3.xz = (uint2)r3.xz;
  r3.xz = float2(1,1) / r3.xz;
  r11.xy = v3.xy / r3.xz;
  r11.xy = float2(0.5,0.5) + r11.xy;
  r11.zw = floor(r11.xy);
  r11.xy = frac(r11.xy);
  r12.xy = r11.xy * r11.xy;
  r13.xyzw = r12.xyxy * r11.xyxy;
  r12.zw = r11.xy * r11.xy + -r11.xy;
  r12.zw = r12.zw * float2(3,3) + -r13.zw;
  r15.xyzw = float4(3,3,0.166666672,0.166666672) * r13.xyzw;
  r12.xy = -r12.xy * float2(6,6) + r15.xy;
  r12.xyzw = float4(4,4,1,1) + r12.xyzw;
  r12.xy = float2(0.166666672,0.166666672) * r12.xy;
  r13.xy = r11.xy * r11.xy + -r13.zw;
  r11.xy = r13.xy + r11.xy;
  r11.xy = r11.xy * float2(3,3) + float2(1,1);
  r12.zw = r12.zw * float2(0.166666672,0.166666672) + r12.xy;
  r11.xy = r11.xy * float2(0.166666672,0.166666672) + r15.zw;
  r12.xy = r12.xy / r12.zw;
  r13.zw = float2(-1,-1) + r12.xy;
  r12.xy = r15.zw / r11.xy;
  r13.xy = float2(1,1) + r12.xy;
  r15.xyzw = r13.zwxw + r11.zwzw;
  r15.xyzw = float4(-0.5,-0.5,-0.5,-0.5) + r15.xyzw;
  r16.xy = r15.xy * r3.xz;
  r15.xy = r15.zw * r3.xz;
  r13.xyzw = r13.zyxy + r11.zwzw;
  r13.xyzw = float4(-0.5,-0.5,-0.5,-0.5) + r13.xyzw;
  r17.xy = r13.xy * r3.xz;
  r13.xy = r13.zw * r3.xz;
  r16.z = 0;
  r16.xyzw = Fix(t1.Sample(s0_s, r16.xyz).xyzw);
  r16.xyzw = r16.xyzw * r12.zzzz;
  r15.z = 0;
  r15.xyzw = Fix(t1.Sample(s0_s, r15.xyz).xyzw);
  r15.xyzw = r15.xyzw * r11.xxxx;
  r15.xyzw = r15.xyzw * r12.wwww;
  r17.z = 0;
  r17.xyzw = Fix(t1.Sample(s0_s, r17.xyz).xyzw);
  r17.xyzw = r17.xyzw * r12.zzzz;
  r13.z = 0;
  r13.xyzw = Fix(t1.Sample(s0_s, r13.xyz).xyzw);
  r13.xyzw = r13.xyzw * r11.xxxx;
  r12.xyzw = r16.xyzw * r12.wwww + r15.xyzw;
  r12.xyzw = r17.xyzw * r11.yyyy + r12.xyzw;
  r11.xyzw = r13.xyzw * r11.yyyy + r12.xyzw;
  r3.x = dot(r14.xyz, float3(0.212500006,0.715399981,0.0720999986));
  r3.z = dot(cb3[19].xyz, r5.xyz);
  if (cb3[1948].x != 0) {
    r12.xyz = float3(0,0,0);
    r3.w = -1;
    r9.w = 1;
    r10.w = 0;
    while (true) {
      r12.w = cmp((int)r10.w >= asint(cb3[1948].x));
      if (r12.w != 0) break;
      r12.w = (uint)r10.w << 2;
      r13.xy = cb3[r12.w+1952].xy * v0.yy;
      r13.xy = cb3[r12.w+1951].xy * v0.xx + r13.xy;
      r13.xy = cb3[r12.w+1953].xy * v0.zz + r13.xy;
      r13.xy = cb3[r12.w+1954].xy + r13.xy;
      r13.z = max(abs(r13.x), abs(r13.y));
      r13.w = dot(cb3[1949].xyzw, icb[r10.w+0].xyzw);
      r13.z = cmp(r13.z < r13.w);
      if (r13.z != 0) {
        r13.z = cb3[r12.w+1952].z * v0.y;
        r13.z = cb3[r12.w+1951].z * v0.x + r13.z;
        r13.z = cb3[r12.w+1953].z * v0.z + r13.z;
        r12.z = cb3[r12.w+1954].z + r13.z;
        r13.zw = saturate(abs(r13.xy) * cb3[1950].yy + cb3[1950].xx);
        r13.zw = float2(1,1) + -r13.zw;
        r9.w = r13.z * r13.w;
        r12.xy = r13.xy * cb3[r10.w+1983].zw + cb3[r10.w+1983].xy;
        r3.w = r10.w;
        break;
      }
      r10.w = (int)r10.w + 1;
      r12.xyz = float3(0,0,0);
      r3.w = -1;
      r9.w = 1;
    }
    r10.w = cmp((int)r3.w >= 0);
    if (r10.w != 0) {
      r10.w = cmp(0 >= r3.z);
      r10.w = r10.w ? cb3[1948].w : cb3[1948].z;
      r12.z = saturate(r12.z + r10.w);
      r13.xz = cb3[2].zy;
      r13.yw = cb3[3].zz;
      r15.xyzw = r13.xyzw + r12.xyxy;
      r16.x = Fix(t6.SampleCmpLevelZero(s5_s, r15.xy, r12.z).x);
      r16.y = Fix(t6.SampleCmpLevelZero(s5_s, r15.zw, r12.z).x);
      r15.xz = cb3[2].zy;
      r15.yw = cb3[3].yy;
      r17.xyzw = r15.xyzw + r12.xyxy;
      r16.z = Fix(t6.SampleCmpLevelZero(s5_s, r17.xy, r12.z).x);
      r16.w = Fix(t6.SampleCmpLevelZero(s5_s, r17.zw, r12.z).x);
      r12.w = dot(r16.xyzw, float4(0.25,0.25,0.25,0.25));
      r16.xy = cmp(r12.ww == float2(0,1));
      r14.w = (int)r16.y | (int)r16.x;
      if (r14.w == 0) {
        r14.w = cb3[0].w * r12.w;
        r16.xz = cb3[2].zy;
        r16.yw = float2(0,0);
        r16.xyzw = r16.xyzw + r12.xyxy;
        r17.x = Fix(t6.SampleCmpLevelZero(s5_s, r16.xy, r12.z).x);
        r17.y = Fix(t6.SampleCmpLevelZero(s5_s, r16.zw, r12.z).x);
        r16.xz = float2(0,0);
        r16.yw = cb3[3].yz;
        r16.xyzw = r16.xyzw + r12.xyxy;
        r17.z = Fix(t6.SampleCmpLevelZero(s5_s, r16.xy, r12.z).x);
        r17.w = Fix(t6.SampleCmpLevelZero(s5_s, r16.zw, r12.z).x);
        r16.x = dot(r17.xyzw, cb3[1].xxxx);
        r14.w = r14.w * 4 + r16.x;
        r12.x = Fix(t6.SampleCmpLevelZero(s5_s, r12.xy, r12.z).x);
        r12.w = r12.x * cb3[1].y + r14.w;
      }
      r12.x = cmp(r9.w < 1);
      if (r12.x != 0) {
        r12.x = -1 + asint(cb3[1948].x);
        r12.x = cmp((int)r3.w < (int)r12.x);
        if (r12.x != 0) {
          r12.x = (uint)r3.w << 2;
          r12.x = (int)r12.x + 4;
          r16.xyz = cb3[r12.x+1952].xyz * v0.yyy;
          r16.xyz = cb3[r12.x+1951].xyz * v0.xxx + r16.xyz;
          r16.xyz = cb3[r12.x+1953].xyz * v0.zzz + r16.xyz;
          r12.xyz = cb3[r12.x+1954].xyz + r16.xyz;
          r3.w = (int)r3.w + 1;
          r12.xy = r12.xy * cb3[r3.w+1983].zw + cb3[r3.w+1983].xy;
          r3.w = saturate(r12.z + r10.w);
          r13.xyzw = r12.xyxy + r13.xyzw;
          r16.x = Fix(t6.SampleCmpLevelZero(s5_s, r13.xy, r3.w).x);
          r16.y = Fix(t6.SampleCmpLevelZero(s5_s, r13.zw, r3.w).x);
          r13.xyzw = r12.xyxy + r15.xyzw;
          r16.z = Fix(t6.SampleCmpLevelZero(s5_s, r13.xy, r3.w).x);
          r16.w = Fix(t6.SampleCmpLevelZero(s5_s, r13.zw, r3.w).x);
          r10.w = dot(r16.xyzw, float4(0.25,0.25,0.25,0.25));
          r13.xy = cmp(r10.ww == float2(0,1));
          r12.z = (int)r13.y | (int)r13.x;
          if (r12.z == 0) {
            r12.z = cb3[0].w * r10.w;
            r13.xz = cb3[2].zy;
            r13.yw = float2(0,0);
            r13.xyzw = r13.xyzw + r12.xyxy;
            r15.x = Fix(t6.SampleCmpLevelZero(s5_s, r13.xy, r3.w).x);
            r15.y = Fix(t6.SampleCmpLevelZero(s5_s, r13.zw, r3.w).x);
            r13.xz = float2(0,0);
            r13.yw = cb3[3].yz;
            r13.xyzw = r13.xyzw + r12.xyxy;
            r15.z = Fix(t6.SampleCmpLevelZero(s5_s, r13.xy, r3.w).x);
            r15.w = Fix(t6.SampleCmpLevelZero(s5_s, r13.zw, r3.w).x);
            r13.x = dot(r15.xyzw, cb3[1].xxxx);
            r12.z = r12.z * 4 + r13.x;
            r3.w = Fix(t6.SampleCmpLevelZero(s5_s, r12.xy, r3.w).x);
            r10.w = r3.w * cb3[1].y + r12.z;
          }
        } else {
          r10.w = 1;
        }
        r3.w = r12.w + -r10.w;
        r12.w = r9.w * r3.w + r10.w;
      }
    } else {
      r12.w = 1;
    }
    r3.w = sqrt(r1.z);
    r3.w = saturate(r3.w * cb3[1950].w + cb3[1950].z);
    r9.w = 1 + -r12.w;
    r3.w = r3.w * r9.w + r12.w;
    if (cb4[1].y != 0) {
      r12.xy = cb1[25].xy * v8.xy;
      r9.w = Fix(t18.SampleLevel(s2_s, r12.xy, 0).z);
      r3.w = min(r9.w, r3.w);
    }
  } else {
    r3.w = 1;
  }
  r9.w = dot(r11.xyzw, cb3[21].xyzw);
  r9.w = 1 + -r9.w;
  r3.w = r9.w * r3.w;
  r3.z = max(0, r3.z);
  r9.w = max(cb3[19].w, r1.x);
  r12.xyz = -r6.xyz * r1.www + cb3[19].xyz;
  r10.w = dot(r12.xyz, r12.xyz);
  r10.w = rsqrt(r10.w);
  r12.xyz = r12.xyz * r10.www;
  r10.w = dot(r12.xyz, r5.xyz);
  r12.x = dot(cb3[19].xyz, r12.xyz);
  r12.x = max(0, r12.x);
  r12.y = r9.w * r9.w;
  r10.w = r10.w * r10.w;
  r12.z = r12.y * r12.y + -1;
  r10.w = r10.w * r12.z + 1;
  r10.w = r12.y / r10.w;
  r10.w = r10.w * r10.w;
  r9.w = 1 + r9.w;
  r9.w = r9.w * r9.w;
  r12.y = 0.125 * r9.w;
  r9.w = -r9.w * 0.125 + 1;
  r12.z = r3.z * r9.w + r12.y;
  r12.z = 4 * r12.z;
  r9.w = r3.y * r9.w + r12.y;
  r9.w = r12.z * r9.w;
  r9.w = r10.w / r9.w;
  r10.w = 1 + -cb0[2].x;
  r12.x = 1 + -r12.x;
  r12.x = max(9.99999997e-007, r12.x);
  r12.y = r12.x * r12.x;
  r12.y = r12.y * r12.y;
  r12.x = r12.x * r12.y;
  r12.x = r10.w * r12.x + cb0[2].x;
  r9.w = r12.x * r9.w;
  r9.w = r9.w * r3.z;
  r12.x = dot(r0.xyz, cb3[19].xyz);
  r12.x = max(0, -r12.x);
  r12.yzw = cb3[20].xyz * r3.www;
  r13.xyz = r3.zzz * r12.yzw + cb3[18].xyz;
  r12.yzw = r12.yzw * r9.www;
  r15.xyz = cb3[20].xyz * r12.xxx;
  r15.xyz = r15.xyz * r3.www;
  r16.xyz = cb4[13].xyw * r2.zzz;
  r16.xyz = cb4[12].xyw * r2.yyy + r16.xyz;
  r16.xyz = cb4[14].xyw * r2.xxx + r16.xyz;
  r16.xyz = cb4[15].xyw + r16.xyz;
  r3.zw = r16.xy / r16.zz;
  r3.z = 1 + r3.z;
  r3.z = cb1[26].z * r3.z;
  r3.z = 0.5 * r3.z;
  r17.xy = cb1[26].zw + float2(-1,-1);
  r3.z = max(0, r3.z);
  r16.x = min(r3.z, r17.x);
  r3.z = 1 + -r3.w;
  r3.z = cb1[26].w * r3.z;
  r3.z = 0.5 * r3.z;
  r3.z = max(0, r3.z);
  r16.y = min(r3.z, r17.y);
  r16.xyz = cb4[2].xxx ? r16.xyz : v8.xyw;
  r3.zw = -cb1[26].xy + r16.xy;
  r3.zw = cb4[36].ww * r3.zw;
  r3.zw = (uint2)r3.zw;
  r3.zw = (uint2)r3.zw >> asuint(cb3[25].xx);
  r3.z = mad((int)r3.w, asint(cb3[25].y), (int)r3.z);
  r3.z = mad((int)r3.z, asint(cb3[22].z), asint(cb3[22].y));
  r3.w = cb3[26].x * r16.z;
  r3.w = max(0, r3.w);
  r3.w = min(cb3[26].y, r3.w);
  r3.w = (uint)r3.w;
  r3.w = mad((int)r3.w, asint(cb3[22].z), asint(cb3[22].x));
  r9.w = cb3[0].w * 4;
  r16.xyz = v0.xyz;
  r16.w = 1;
  r17.xz = cb3[2].zy;
  r17.yw = cb3[3].zz;
  r18.xz = cb3[2].zy;
  r18.yw = cb3[3].yy;
  r19.xz = cb3[2].zy;
  r19.yw = float2(0,0);
  r20.xz = float2(0,0);
  r20.yw = cb3[3].yz;
  r21.x = cb4[2].x;
  r21.yzw = r11.xyz;
  r22.xyz = r15.xyz;
  r23.xyz = r13.xyz;
  r24.xyz = r12.yzw;
  r12.x = r11.w;
  r13.w = 0;
  while (true) {
    r14.w = cmp((uint)r13.w >= asuint(cb3[22].z));
    if (r14.w != 0) break;
    r14.w = (int)r3.z + (int)r13.w;
    r14.w = t13[r14.w].val[0/4];
    r15.w = (int)r3.w + (int)r13.w;
    r15.w = t13[r15.w].val[0/4];
    r14.w = (int)r14.w & (int)r15.w;
    r15.w = (uint)r13.w << 5;
    r25.xyz = r22.xyz;
    r26.xyz = r23.xyz;
    r27.xyz = r24.xyz;
    r28.xyz = r21.yzw;
    r22.w = r21.x;
    r28.w = r12.x;
    r23.w = r14.w;
    while (true) {
      if (r23.w == 0) break;
      r24.w = firstbitlow((uint)r23.w);
      r24.w = (int)r15.w + (int)r24.w;
      r25.w = (int)r23.w + -1;
      r23.w = (int)r23.w & (int)r25.w;
      r29.x = t17[r24.w].val[0/4];
      r29.y = t17[r24.w].val[0/4+1];
      r29.z = t17[r24.w].val[0/4+2];
      r29.w = t17[r24.w].val[0/4+3];
      r30.x = t17[r24.w].val[16/4];
      r30.y = t17[r24.w].val[16/4+1];
      r30.z = t17[r24.w].val[16/4+2];
      r30.w = t17[r24.w].val[16/4+3];
      r31.x = t17[r24.w].val[32/4];
      r31.y = t17[r24.w].val[32/4+1];
      r31.z = t17[r24.w].val[32/4+2];
      r31.w = t17[r24.w].val[32/4+3];
      r32.x = t17[r24.w].val[48/4];
      r32.y = t17[r24.w].val[48/4+1];
      r32.z = t17[r24.w].val[48/4+2];
      r32.w = t17[r24.w].val[48/4+3];
      r29.x = dot(r16.xyzw, r29.xyzw);
      r29.y = dot(r16.xyzw, r30.xyzw);
      r29.z = dot(r16.xyzw, r31.xyzw);
      r25.w = dot(r16.xyzw, r32.xyzw);
      r29.xyz = r29.xyz / r25.www;
      r30.xyz = cmp(float3(-1,-1,0) < r29.xyz);
      r25.w = r30.y ? r30.x : 0;
      r25.w = r30.z ? r25.w : 0;
      r30.xyz = cmp(r29.xyz < float3(1,1,1));
      r26.w = r30.y ? r30.x : 0;
      r26.w = r30.z ? r26.w : 0;
      r25.w = (int)r25.w & (int)r26.w;
      r25.w = ~(int)r25.w;
      r30.x = t17[r24.w].val[272/4];
      r30.y = t17[r24.w].val[272/4+1];
      r30.z = t17[r24.w].val[272/4+2];
      r30.w = t17[r24.w].val[272/4+3];
      r31.x = t17[r24.w].val[288/4];
      r31.y = t17[r24.w].val[288/4+1];
      r31.z = t17[r24.w].val[288/4+2];
      r31.w = t17[r24.w].val[288/4+3];
      r32.x = t17[r24.w].val[304/4];
      r32.y = t17[r24.w].val[304/4+1];
      r32.z = t17[r24.w].val[304/4+2];
      r32.w = t17[r24.w].val[304/4+3];
      r30.x = dot(r16.xyzw, r30.xyzw);
      r30.y = dot(r16.xyzw, r31.xyzw);
      r30.z = dot(r16.xyzw, r32.xyzw);
      r30.xyz = cmp(float3(1,1,1) >= abs(r30.xyz));
      r26.w = r30.y ? r30.x : 0;
      r26.w = r30.z ? r26.w : 0;
      r26.w = ~(int)r26.w;
      r25.w = (int)r25.w | (int)r26.w;
      if (r25.w == 0) {
        r30.x = t17[r24.w].val[160/4];
        r30.y = t17[r24.w].val[160/4+1];
        r30.z = t17[r24.w].val[160/4+3];
        r30.w = t17[r24.w].val[160/4+2];
        r31.x = t17[r24.w].val[240/4];
        r31.y = t17[r24.w].val[240/4+1];
        r31.z = t17[r24.w].val[240/4+2];
        r31.w = t17[r24.w].val[240/4+3];
        r25.w = dot(r28.xyzw, r31.xyzw);
        r25.w = 1 + -r25.w;
        r31.xyz = r30.xyw * r25.www;
        r32.x = t17[r24.w].val[128/4];
        r32.y = t17[r24.w].val[128/4+1];
        r32.z = t17[r24.w].val[128/4+2];
        r32.w = t17[r24.w].val[128/4+3];
        r33.x = t17[r24.w].val[144/4];
        r33.y = t17[r24.w].val[144/4+1];
        r33.z = t17[r24.w].val[144/4+2];
        r33.w = t17[r24.w].val[144/4+3];
        r34.x = t17[r24.w].val[176/4];
        r34.y = t17[r24.w].val[176/4+1];
        r34.z = t17[r24.w].val[176/4+2];
        r34.w = t17[r24.w].val[176/4+3];
        r35.x = t17[r24.w].val[192/4];
        r35.y = t17[r24.w].val[192/4+1];
        r35.z = t17[r24.w].val[192/4+2];
        r36.xyzw = r34.wxyw + r34.wxyw;
        r37.xy = r36.yw * r34.yz;
        r25.w = -r36.z * r34.y + 1;
        r26.w = dot(r34.zz, r34.zz);
        r38.x = -r26.w + r25.w;
        r38.y = r37.x + r37.y;
        r36.xzw = r36.xzw * r34.yzx;
        r38.z = r36.y * r34.z + -r36.x;
        r37.x = r36.y * r34.y + -r37.y;
        r25.w = -r36.y * r34.x + -r26.w;
        r37.y = 1 + r25.w;
        r37.z = r36.z + r36.w;
        r36.xy = cmp(float2(0,0) < r33.zw);
        r25.w = saturate(r33.z * r29.z);
        r26.w = r25.w * -2 + 3;
        r25.w = r25.w * r25.w;
        r25.w = r26.w * r25.w;
        r25.w = r36.x ? r25.w : 1;
        r26.w = 1 + -r29.z;
        r26.w = saturate(r26.w * r33.w);
        r27.w = r26.w * -2 + 3;
        r26.w = r26.w * r26.w;
        r26.w = r27.w * r26.w;
        r26.w = r26.w * r25.w;
        r36.w = r36.y ? r26.w : r25.w;
        r25.w = cmp(r32.w != 0.000000);
        r39.xyz = -v0.xyz + r32.xyz;
        r26.w = dot(r39.xyz, r39.xyz);
        r27.w = max(r26.w, r32.w);
        r27.w = r32.w / r27.w;
        r27.w = r36.w * r27.w;
        r26.w = sqrt(r26.w);
        r29.w = saturate(r33.y * r26.w + r33.x);
        r30.w = r29.w * -2 + 3;
        r29.w = r29.w * r29.w;
        r29.w = r30.w * r29.w;
        r27.w = r29.w * r27.w;
        r33.xyz = -r37.xyz * r35.zzz + r39.xyz;
        r37.xyz = r37.xyz * r35.zzz + r39.xyz;
        r37.xyz = r37.xyz + -r33.xyz;
        r29.w = dot(-r33.xyz, r37.xyz);
        r30.w = dot(r37.xyz, r37.xyz);
        r31.w = cmp(0 >= r29.w);
        r29.w = r29.w / r30.w;
        r29.w = min(1, r29.w);
        r37.xyz = r37.xyz * r29.www + r33.xyz;
        r33.xyz = r31.www ? r33.xyz : r37.xyz;
        r29.w = dot(r33.xyz, r33.xyz);
        r29.w = rsqrt(r29.w);
        r33.xyz = r33.xyz * r29.www;
        r29.w = dot(r38.xyz, r33.xyz);
        r29.w = saturate(r35.y * r29.w + r35.x);
        r33.w = r29.w * r27.w;
        r33.xyz = r39.xyz / r26.www;
        r36.xyz = r32.xyz;
        r32.xyzw = r25.wwww ? r33.xyzw : r36.xyzw;
        r31.xyz = r32.www * r31.xyz;
        r25.w = cmp(r30.z == 0.000000);
        if (r25.w != 0) {
          r33.x = t17[r24.w].val[224/4];
          r33.y = t17[r24.w].val[224/4+1];
          r33.z = t17[r24.w].val[224/4+2];
          r25.w = cmp(r33.z == 0.000000);
          if (r25.w != 0) {
            r35.xy = float2(-1,-1) + r33.xy;
            r35.zw = float2(-1,-1) + abs(r29.xy);
            r35.xy = float2(1,1) / r35.xy;
            r35.xy = saturate(r35.zw * r35.xy);
            r35.zw = r35.xy * float2(-2,-2) + float2(3,3);
            r35.xy = r35.xy * r35.xy;
            r35.xy = r35.zw * r35.xy;
            r25.w = r35.x * r35.y;
          } else {
            r35.xy = r33.yx * abs(r29.xy);
            r26.w = 2 / r33.z;
            r35.xy = log2(r35.xy);
            r35.xy = r35.xy * r26.ww;
            r35.xy = exp2(r35.xy);
            r27.w = r35.x + r35.y;
            r29.w = r33.x * r33.y;
            r27.w = max(1.17549435e-038, r27.w);
            r30.w = -0.5 * r33.z;
            r27.w = log2(r27.w);
            r27.w = r30.w * r27.w;
            r27.w = exp2(r27.w);
            r31.w = r29.w * r27.w;
            r33.xy = log2(abs(r29.xy));
            r33.xy = r33.xy * r26.ww;
            r33.xy = exp2(r33.xy);
            r26.w = r33.x + r33.y;
            r26.w = max(1.17549435e-038, r26.w);
            r26.w = log2(r26.w);
            r26.w = r30.w * r26.w;
            r26.w = exp2(r26.w);
            r30.w = cmp(r31.w < r26.w);
            r27.w = r29.w * r27.w + -r26.w;
            r29.w = 1 + -r26.w;
            r27.w = 1 / r27.w;
            r27.w = saturate(r29.w * r27.w);
            r29.w = r27.w * -2 + 3;
            r27.w = r27.w * r27.w;
            r27.w = r29.w * r27.w;
            r26.w = cmp(1 < r26.w);
            r26.w = r26.w ? 1.000000 : 0;
            r25.w = r30.w ? r27.w : r26.w;
          }
          r33.xyz = r31.xyz * r25.www;
        } else {
          r25.w = cmp(r30.z < 0);
          if (r25.w != 0) {
            r35.xyz = -r32.yxz * r34.xzy;
            r35.xyz = -r32.xzy * r34.yxz + -r35.xyz;
            r35.xyz = -r32.zyx * r34.www + r35.xyz;
            r25.w = dot(-r32.xyz, r34.xyz);
            r36.xyz = r34.yxz * r25.www;
            r36.xyz = r35.yzx * r34.www + r36.xyz;
            r37.xyz = r35.xyz * -r34.xzy;
            r34.xyz = -r34.zyx * r35.zxy + -r37.xyz;
            r34.xyz = r36.xyz + r34.xyz;
            r25.w = min(abs(r34.x), abs(r34.y));
            r26.w = max(abs(r34.x), abs(r34.y));
            r26.w = 1 / r26.w;
            r25.w = r26.w * r25.w;
            r26.w = r25.w * r25.w;
            r27.w = r26.w * 0.0208350997 + -0.0851330012;
            r27.w = r26.w * r27.w + 0.180141002;
            r27.w = r26.w * r27.w + -0.330299497;
            r26.w = r26.w * r27.w + 0.999866009;
            r27.w = r26.w * r25.w;
            r29.w = cmp(abs(r34.y) < abs(r34.x));
            r27.w = r27.w * -2 + 1.57079637;
            r27.w = r29.w ? r27.w : 0;
            r25.w = r25.w * r26.w + r27.w;
            r26.w = cmp(-r34.y < r34.y);
            r26.w = r26.w ? -3.141593 : 0;
            r25.w = r26.w + r25.w;
            r26.w = min(r34.x, -r34.y);
            r27.w = max(r34.x, -r34.y);
            r26.w = cmp(r26.w < -r26.w);
            r27.w = cmp(r27.w >= -r27.w);
            r26.w = r26.w ? r27.w : 0;
            r25.w = r26.w ? -r25.w : r25.w;
            r34.x = 0.159154937 * r25.w;
            r25.w = 1 + -abs(r34.z);
            r25.w = sqrt(r25.w);
            r26.w = abs(r34.z) * -0.0187292993 + 0.0742610022;
            r26.w = r26.w * abs(r34.z) + -0.212114394;
            r26.w = r26.w * abs(r34.z) + 1.57072878;
            r27.w = r26.w * r25.w;
            r27.w = r27.w * -2 + 3.14159274;
            r29.w = cmp(r34.z < -r34.z);
            r27.w = r29.w ? r27.w : 0;
            r25.w = r26.w * r25.w + r27.w;
            r34.y = 0.318309873 * r25.w;
            r35.z = -r30.z;
            r36.x = t17[r24.w].val[224/4];
            r36.y = t17[r24.w].val[224/4+1];
            r36.z = t17[r24.w].val[224/4+2];
            r36.w = t17[r24.w].val[224/4+3];
            r35.xy = r34.xy * r36.zw + r36.xy;
            r34.xyz = Fix(t4.SampleLevel(s1_s, r35.xyz, 0).xyz);
            r33.xyz = r34.xyz * r31.xyz;
          } else {
            r34.xy = r29.xy * float2(0.5,-0.5) + float2(0.5,0.5);
            r35.x = t17[r24.w].val[224/4];
            r35.y = t17[r24.w].val[224/4+1];
            r35.z = t17[r24.w].val[224/4+2];
            r35.w = t17[r24.w].val[224/4+3];
            r30.xy = r34.xy * r35.zw + r35.xy;
            r30.xyz = Fix(t4.SampleLevel(s4_s, r30.xyz, 0).xyz);
            r33.xyz = r31.xyz * r30.xyz;
          }
        }
        r30.xyz = cmp(r33.xyz == float3(0,0,0));
        r25.w = r30.y ? r30.x : 0;
        r25.w = r30.z ? r25.w : 0;
        if (r25.w == 0) {
          r30.x = t17[r24.w].val[256/4];
          r30.y = t17[r24.w].val[256/4+1];
          r31.x = t17[r24.w].val[208/4];
          r31.y = t17[r24.w].val[208/4+1];
          r31.z = t17[r24.w].val[208/4+2];
          r31.w = t17[r24.w].val[208/4+3];
          r25.w = cmp(0 < r31.z);
          r26.w = cmp((int)r22.w == 0);
          r25.w = r25.w ? r26.w : 0;
          if (r25.w != 0) {
            r24.w = t17[r24.w].val[264/4];
            r24.w = (int)r24.w & 4;
            r30.zw = float2(1,-1) * r29.yx;
            r29.xy = r24.ww ? r30.zw : r29.xy;
            r29.xy = r29.xy * r31.zw + r31.xy;
            r24.w = saturate(cb3[1948].z + r29.z);
            r31.xyzw = r29.xyxy + r17.xyzw;
            r34.x = Fix(t6.SampleCmpLevelZero(s5_s, r31.xy, r24.w).x);
            r34.y = Fix(t6.SampleCmpLevelZero(s5_s, r31.zw, r24.w).x);
            r31.xyzw = r29.xyxy + r18.xyzw;
            r34.z = Fix(t6.SampleCmpLevelZero(s5_s, r31.xy, r24.w).x);
            r34.w = Fix(t6.SampleCmpLevelZero(s5_s, r31.zw, r24.w).x);
            r25.w = dot(r34.xyzw, float4(0.25,0.25,0.25,0.25));
            r29.zw = cmp(r25.ww == float2(0,1));
            r26.w = (int)r29.w | (int)r29.z;
            if (r26.w == 0) {
              r31.xyzw = r29.xyxy + r19.xyzw;
              r34.x = Fix(t6.SampleCmpLevelZero(s5_s, r31.xy, r24.w).x);
              r34.y = Fix(t6.SampleCmpLevelZero(s5_s, r31.zw, r24.w).x);
              r31.xyzw = r29.xyxy + r20.xyzw;
              r34.z = Fix(t6.SampleCmpLevelZero(s5_s, r31.xy, r24.w).x);
              r34.w = Fix(t6.SampleCmpLevelZero(s5_s, r31.zw, r24.w).x);
              r26.w = dot(r34.xyzw, cb3[1].xxxx);
              r26.w = r25.w * r9.w + r26.w;
              r24.w = Fix(t6.SampleCmpLevelZero(s5_s, r29.xy, r24.w).x);
              r25.w = r24.w * cb3[1].y + r26.w;
            }
            r24.w = -1 + r25.w;
            r24.w = r30.y * r24.w + 1;
            r33.xyz = r33.xyz * r24.www;
            r29.xyz = cmp(r33.xyz == float3(0,0,0));
            r24.w = r29.y ? r29.x : 0;
            r24.w = r29.z ? r24.w : 0;
          } else {
            r24.w = 0;
          }
          if (r24.w == 0) {
            r24.w = dot(r5.xyz, r32.xyz);
            r24.w = max(0, r24.w);
            r25.w = max(r30.x, r1.x);
            r29.xyz = -r6.xyz * r1.www + r32.xyz;
            r26.w = dot(r29.xyz, r29.xyz);
            r26.w = rsqrt(r26.w);
            r29.xyz = r29.xyz * r26.www;
            r26.w = dot(r29.xyz, r5.xyz);
            r27.w = dot(r32.xyz, r29.xyz);
            r27.w = max(0, r27.w);
            r29.x = r25.w * r25.w;
            r26.w = r26.w * r26.w;
            r29.y = r29.x * r29.x + -1;
            r26.w = r26.w * r29.y + 1;
            r26.w = r29.x / r26.w;
            r26.w = r26.w * r26.w;
            r25.w = 1 + r25.w;
            r25.w = r25.w * r25.w;
            r29.x = 0.125 * r25.w;
            r25.w = -r25.w * 0.125 + 1;
            r29.y = r24.w * r25.w + r29.x;
            r29.y = 4 * r29.y;
            r25.w = r3.y * r25.w + r29.x;
            r25.w = r29.y * r25.w;
            r25.w = r26.w / r25.w;
            r26.w = 1 + -r27.w;
            r26.w = max(9.99999997e-007, r26.w);
            r27.w = r26.w * r26.w;
            r27.w = r27.w * r27.w;
            r26.w = r27.w * r26.w;
            r26.w = r10.w * r26.w + cb0[2].x;
            r25.w = r26.w * r25.w;
            r25.w = r25.w * r24.w;
            r26.w = dot(r0.xyz, r32.xyz);
            r26.w = max(0, -r26.w);
            r26.xyz = r24.www * r33.xyz + r26.xyz;
            r27.xyz = r25.www * r33.xyz + r27.xyz;
            r25.xyz = r26.www * r33.xyz + r25.xyz;
          }
        }
      }
    }
    r22.xyz = r25.xyz;
    r23.xyz = r26.xyz;
    r24.xyz = r27.xyz;
    r13.w = (int)r13.w + 1;
  }
  r0.x = min(1, r3.y);
  r0.y = r1.x * r1.x;
  r0.y = r0.y * r0.y;
  r0.x = dot(r0.yy, r0.xx);
  r0.x = cb0[2].x * r0.x + 1;
  r11.x = dot(r1.xx, float2(0.5,0.5));
  r0.y = dot(r7.xyz, r5.xyz);
  r0.y = r0.y + r0.y;
  r3.yzw = r5.xyz * -r0.yyy + r7.xyz;
  r0.y = sqrt(r11.x);
  r0.y = cb3[27].y * r0.y;
  r0.z = -r11.x * r11.x + 1;
  r0.z = max(0, r0.z);
  r1.x = sqrt(r0.z);
  r1.x = r11.x * r11.x + r1.x;
  r0.z = r1.x * r0.z;
  r3.yzw = -r4.xyz * r0.www + r3.yzw;
  r3.yzw = r0.zzz * r3.yzw + r5.xyz;
  r0.z = dot(r3.yzw, r3.yzw);
  r0.z = rsqrt(r0.z);
  r3.yzw = r3.yzw * r0.zzz;
  r0.zw = -cb1[26].xy + v8.xy;
  r0.zw = cb4[36].ww * r0.zw;
  r0.zw = (uint2)r0.zw;
  r0.zw = (uint2)r0.zw >> asuint(cb3[25].xx);
  r0.z = mad((int)r0.w, asint(cb3[25].y), (int)r0.z);
  r0.z = mad((int)r0.z, asint(cb3[23].z), asint(cb3[23].y));
  r0.w = cb3[26].x * v8.w;
  r0.w = max(0, r0.w);
  r0.w = min(cb3[26].y, r0.w);
  r0.w = (uint)r0.w;
  r0.w = mad((int)r0.w, asint(cb3[23].z), asint(cb3[23].x));
  r2.w = 1;
  r12.xyzw = float4(0,0,0,0);
  r4.xyz = float3(0,0,0);
  r1.xw = float2(0.00999999978,0);
  r7.x = 0;
  while (true) {
    r7.y = cmp((uint)r7.x < asuint(cb3[23].z));
    r7.z = ~(int)r1.w;
    r7.y = r7.y ? r7.z : 0;
    if (r7.y == 0) break;
    r7.yz = (int2)r0.zw + (int2)r7.xx;
    r7.y = t13[r7.y].val[0/4];
    r7.z = t13[r7.z].val[0/4];
    r7.y = (int)r7.z & (int)r7.y;
    r7.z = (uint)r7.x << 5;
    r13.xyzw = r12.xyzw;
    r15.xyz = r4.xyz;
    r9.w = r1.x;
    r11.z = r1.w;
    r11.w = r7.y;
    while (true) {
      if (r11.w == 0) break;
      r14.w = firstbitlow((uint)r11.w);
      r14.w = (int)r7.z + (int)r14.w;
      r15.w = (int)r11.w + -1;
      r15.w = (int)r11.w & (int)r15.w;
      r14.w = (int)r14.w * 9;
      r16.x = dot(r2.yzxw, cb3[r14.w+28].xyzw);
      r16.y = dot(r2.yzxw, cb3[r14.w+29].xyzw);
      r16.z = dot(r2.yzxw, cb3[r14.w+30].xyzw);
      r17.xyz = -cb3[r14.w+31].xyz + r16.xyz;
      r17.xyz = saturate(cb3[r14.w+33].xyz * r17.xyz);
      r18.xyz = cb3[r14.w+32].xyz + -r16.xyz;
      r19.xyz = saturate(cb3[r14.w+33].xyz * r18.xyz);
      r16.w = min(r17.y, r17.z);
      r16.w = min(r17.x, r16.w);
      r17.x = min(r19.y, r19.z);
      r17.x = min(r19.x, r17.x);
      r16.w = min(r17.x, r16.w);
      r17.x = cmp(r16.w == 0.000000);
      if (r17.x != 0) {
        r11.w = r15.w;
        continue;
      }
      r17.x = r16.w * r16.w;
      r16.w = r16.w * -2 + 3;
      r16.w = r17.x * r16.w;
      r17.x = dot(r3.yzw, cb3[r14.w+28].xyz);
      r17.y = dot(r3.yzw, cb3[r14.w+29].xyz);
      r17.z = dot(r3.yzw, cb3[r14.w+30].xyz);
      r18.xyz = r18.xyz / r17.xyz;
      r19.xyz = cb3[r14.w+31].xyz + -r16.xyz;
      r19.xyz = r19.xyz / r17.xyz;
      r18.xyz = max(r19.xyz, r18.xyz);
      r17.w = min(r18.y, r18.z);
      r17.w = min(r18.x, r17.w);
      r16.xyz = r17.xyz * abs(r17.www) + r16.xyz;
      r17.xyz = r17.xyz + -r16.xyz;
      r17.xyz = r11.xxx * r17.xyz + r16.xyz;
      r17.w = asuint(cb3[r14.w+31].w);
      r16.xyz = Fix(t10.SampleLevel(s1_s, r17.xyzw, r0.y).xyz);
      r16.xyz = cb3[r14.w+35].xyz * r16.xyz;
      r17.x = 1 + -r9.w;
      r17.y = r17.x * r16.w;
      r16.w = r16.w * r17.x + r9.w;
      r16.xyz = r16.xyz * r17.yyy + r15.xyz;
      r17.xyzw = cb3[r14.w+36].xyzw * r17.yyyy + r13.xyzw;
      r14.w = cmp(0.99000001 < r16.w);
      if (r14.w != 0) {
        r13.xyzw = r17.xyzw;
        r15.xyz = r16.xyz;
        r9.w = r16.w;
        r11.z = -1;
        break;
      }
      r13.xyzw = r17.xyzw;
      r15.xyz = r16.xyz;
      r9.w = r16.w;
      r11.w = r15.w;
    }
    r12.xyzw = r13.xyzw;
    r4.xyz = r15.xyz;
    r1.x = r9.w;
    r1.w = r11.z;
    r7.x = (int)r7.x + 1;
  }
  r0.yzw = r4.xyz / r1.xxx;
  r12.xyzw = r12.xyzw / r1.xxxx;
  r5.w = 1;
  r1.x = dot(r5.xyzw, r12.xyzw);
  r1.w = r11.x * cb3[6].x + cb3[6].y;
  r1.w = max(1, r1.w);
  r1.x = r3.x / r1.x;
  r1.x = min(r1.x, r1.w);
  r0.yzw = r1.xxx * r0.yzw;
  r11.y = sqrt(r4.w);
  r3.xy = r11.xy * float2(0.984375,0.984375) + float2(0.0078125,0.0078125);
  r3.z = 1;
  r1.xw = Fix(t5.SampleLevel(s0_s, r3.xyz, 0).xy);
  r2.z = r1.w + -r1.x;
  r1.x = cb0[2].x * r2.z + r1.x;
  r1.w = 1 + -r1.w;
  r2.z = r10.w * 0.0476190485 + cb0[2].x;
  r2.w = r2.z * r1.x;
  r2.z = -r1.w * r2.z + 1;
  r2.z = r2.w / r2.z;
  r2.w = r2.z * r1.w;
  r3.xyz = r2.www * r0.yzw;
  r0.yzw = r1.xxx * r0.yzw + r3.xyz;
  r1.x = r2.z * r1.w + r1.x;
  r1.x = 1 + -r1.x;
  r3.xyz = r14.xyz * r1.xxx + r23.xyz;
  r3.xyz = r22.xyz * r8.www + r3.xyz;
  r0.xyz = r24.xyz * r0.xxx + r0.yzw;
  r4.xyz = r6.www * r8.xyz;
  r0.xyz = r4.xyz * r3.xyz + r0.xyz;
  r0.w = 1 + -r7.w;
  r4.xyz = r0.www * r10.xyz;
  r0.w = 1 + -r6.w;
  r4.xyz = r4.xyz * r0.www;
  r5.xyz = float3(1.60000002,1.60000002,1.60000002) * r9.xyz;
  r5.xyz = exp2(r5.xyz);
  r7.xyz = r4.xyz * r6.www;
  r7.xyz = r7.xyz * r8.xyz;
  r3.xyz = r7.xyz * r3.xyz;
  r0.xyz = r3.xyz * r5.xyz + r0.xyz;
  r1.xw = cmp(int2(0,0) != asint(cb4[0].yz));
  r1.xy = r1.xw ? r1.yy : 0;
  r2.y = sqrt(r1.z);
  r1.zw = saturate(cb4[23].wz * r2.xy + cb4[23].yx);
  r1.zw = log2(r1.zw);
  r1.zw = cb4[24].yx * r1.zw;
  r1.zw = exp2(r1.zw);
  r1.z = r1.w * r1.z;
  r1.w = cb4[25].w * r1.z;
  r1.z = -r1.z * cb4[25].w + 1;
  r3.xyz = r4.xyz * r1.zzz;
  r1.z = r1.w * r0.w;
  r5.xyz = cb4[25].xyz + -r0.xyz;
  r5.xyz = r1.zzz * r5.xyz + r0.xyz;
  r5.xyz = r1.xxx ? r5.xyz : r0.xyz;
  r0.xyz = r1.xxx ? r3.xyz : r4.xyz;
  if (r1.y != 0) {
    r1.x = dot(r6.xyz, cb4[29].xyz);
    r1.y = dot(r6.xyz, cb4[30].xyz);
    r1.z = dot(r6.xyz, cb4[31].xyz);
    r1.w = dot(r1.xyz, r1.xyz);
    r1.w = rsqrt(r1.w);
    r1.xyz = r1.xyz * r1.www;
    r1.w = r2.y * cb4[27].y + cb4[27].x;
    r1.w = max(0, r1.w);
    r1.w = log2(r1.w);
    r1.w = cb4[27].w * r1.w;
    r1.w = exp2(r1.w);
    r1.w = min(1, r1.w);
    r2.x = r2.x * cb4[28].y + cb4[28].x;
    r2.x = max(0, r2.x);
    r2.x = log2(r2.x);
    r2.x = cb4[28].z * r2.x;
    r2.x = exp2(r2.x);
    r2.x = min(1, r2.x);
    r1.w = r2.x * r1.w;
    r2.x = saturate(-r1.w * cb4[27].z + 1);
    r2.x = cb4[28].w * r2.x;
    r1.xyz = Fix(t12.SampleLevel(s2_s, r1.xyz, r2.x).xyz);
    r2.x = cb4[33].w * r1.w;
    r1.w = -r1.w * cb4[33].w + 1;
    r0.xyz = r1.www * r0.xyz;
    r0.w = r2.x * r0.w;
    r1.xyz = r1.xyz * cb4[34].xxx + -r5.xyz;
    r5.xyz = r0.www * r1.xyz + r5.xyz;
  }
  r0.x = dot(r0.xyz, float3(0.212500006,0.715399981,0.0720999986));
  r0.x = 1 + -r0.x;
  r1.xy = (int2)v8.xy;
  r1.zw = float2(0,0);
  r0.y = t19.Load(r1.xyw).x;
  r0.z = -0.00100050028 + r0.y;
  r0.z = cmp(r0.z >= 0);
  if (r0.z != 0) {
    r0.z = dot(cb1[20].xyz, r6.xyz);
    r0.z = log2(r0.z);
    r0.z = r0.z * 0.693147182 + -cb4[37].w;
    r0.w = cb4[38].x + -cb4[37].w;
    r0.z = r0.z / r0.w;
    r0.z = r0.z * 2 + -1;
    r2.xy = t20.Load(r1.xyw).xy;
    r1.xyzw = t21.Load(r1.xyz).yxzw;
    r3.x = r2.y;
    r3.yz = r1.xw;
    r2.yzw = r3.xyz / r0.yyy;
    r1.x = r2.x;
    r1.xyz = r1.xyz / r0.yyy;
    r3.xyz = float3(0.479999989,0.451000005,0.449999988) + -r2.yzw;
    r1.xyw = cb4[37].yyy * -r1.zxy + r1.zxy;
    r2.xyz = cb4[37].yyy * r3.xyz + r2.yzw;
    r3.xyz = -r1.yyw * r1.yww + r2.xyz;
    r0.w = 1 / r3.x;
    r2.z = -r1.y * r2.x + r1.w;
    r4.x = r2.z * r0.w;
    r2.y = -r2.x * r2.x + r2.y;
    r2.y = -r2.z * r4.x + r2.y;
    r4.y = r3.y * r0.w;
    r6.z = 1 / r2.y;
    r2.y = -r2.x * r1.w + r1.x;
    r3.w = -r2.z * r4.y + r2.y;
    r4.z = r3.w * r6.z;
    r2.y = dot(r3.yw, r4.yz);
    r2.y = r3.z + -r2.y;
    r6.w = 1 / r2.y;
    r2.y = r0.z * r0.z;
    r3.y = -r1.y + r0.z;
    r2.z = r4.x * r3.y + r2.x;
    r3.z = r0.z * r0.z + -r2.z;
    r2.z = dot(r4.yz, r3.yz);
    r2.z = r2.z + r1.w;
    r3.w = r2.y * r0.z + -r2.z;
    r6.yw = r3.zw * r6.zw;
    r6.z = -r4.z * r6.w + r6.y;
    r2.y = dot(r4.xy, r6.zw);
    r6.y = r3.y * r0.w + -r2.y;
    r1.z = r2.x;
    r0.w = dot(r1.yzw, r6.yzw);
    r6.x = 1 + -r0.w;
    r2.xyz = r6.xyz / r6.www;
    r3.xy = float2(0.333333343,0.333333343) * r2.yz;
    r0.w = -r3.y * r3.y;
    r0.w = r2.y * 0.333333343 + r0.w;
    r4.y = -r3.x * r3.y + r2.x;
    r3.z = -r3.x;
    r2.w = 0.333333343 * r2.y;
    r4.x = dot(r3.yz, r2.xw);
    r2.x = 4 * r0.w;
    r2.y = -r4.y;
    r2.x = dot(r2.xy, r4.xy);
    r2.y = r0.w * r2.z;
    r2.y = r2.y * -0.666666687 + r4.y;
    r2.x = sqrt(r2.x);
    r2.z = min(r2.x, abs(r2.y));
    r2.w = max(r2.x, abs(r2.y));
    r2.w = 1 / r2.w;
    r2.z = r2.z * r2.w;
    r2.w = r2.z * r2.z;
    r3.x = r2.w * 0.0208350997 + -0.0851330012;
    r3.x = r2.w * r3.x + 0.180141002;
    r3.x = r2.w * r3.x + -0.330299497;
    r2.w = r2.w * r3.x + 0.999866009;
    r3.x = r2.z * r2.w;
    r3.z = cmp(abs(r2.y) < r2.x);
    r3.x = r3.x * -2 + 1.57079637;
    r3.x = r3.z ? r3.x : 0;
    r2.z = r2.z * r2.w + r3.x;
    r2.w = cmp(-r2.y < r2.y);
    r2.w = r2.w ? -3.141593 : 0;
    r2.z = r2.z + r2.w;
    r2.w = min(r2.x, -r2.y);
    r2.x = max(r2.x, -r2.y);
    r2.y = cmp(r2.w < -r2.w);
    r2.x = cmp(r2.x >= -r2.x);
    r2.x = r2.x ? r2.y : 0;
    r2.x = r2.x ? -r2.z : r2.z;
    r2.x = 0.333333343 * r2.x;
    sincos(r2.x, r2.x, r4.x);
    r4.y = r2.x;
    r4.z = dot(float2(-0.5,-0.866025388), r4.xy);
    r4.w = dot(float2(-0.5,0.866025388), r4.xy);
    r0.w = sqrt(-r0.w);
    r0.w = r0.w + r0.w;
    r2.xyz = r0.www * r4.xzw + -r3.yyy;
    r3.xyzw = cmp(r0.zzzz < r2.xyzx);
    r4.xyzw = r3.xyzw ? float4(0,0,0,-0) : float4(1,1,1,-1);
    r0.w = -cb4[37].x + r4.x;
    r3.xzw = r2.xyz + -r0.zzz;
    r0.w = r0.w / r3.x;
    r2.w = r4.y + r4.w;
    r4.xyw = r2.yzz + -r2.xyx;
    r2.z = r2.w / r4.x;
    r2.w = r3.y ? -0 : -1;
    r2.w = r4.z + r2.w;
    r2.w = r2.w / r4.y;
    r3.x = r2.z + -r0.w;
    r3.x = r3.x / r3.z;
    r2.z = r2.w + -r2.z;
    r2.z = r2.z / r4.w;
    r2.z = r2.z + -r3.x;
    r4.w = r2.z / r3.w;
    r2.y = -r4.w * r2.y + r3.x;
    r2.z = r4.w * -r2.x + r2.y;
    r0.w = r2.y * -r2.x + r0.w;
    r4.z = r4.w * -r0.z + r2.z;
    r4.y = r2.z * -r0.z + r0.w;
    r4.x = r0.w * -r0.z + cb4[37].x;
    r1.x = 1;
    r0.z = dot(r4.xyzw, r1.xyzw);
    r0.y = -r0.y * r0.z;
    r0.y = 1.44269502 * r0.y;
    r0.y = exp2(r0.y);
    r0.y = min(1, r0.y);
  } else {
    r0.y = 1;
  }
  r0.x = max(9.99999975e-006, r0.x);
  r5.w = min(0.999899983, r0.x);
  o0.xyzw = r5.xyzw * r0.yyyy;
  o0.xyzw = fix(o0.xyzw);
  return;
}