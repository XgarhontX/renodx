sampler2D Texture2D_0 : register(s0);
sampler2D Texture2D_1 : register(s1);
sampler2D Texture2D_2 : register(s2);
sampler2D Texture2D_3 : register(s3);
float UniformScalar_1 : register(c6);
float UniformScalar_13 : register(c9);
float UniformScalar_17 : register(c10);
float UniformScalar_18 : register(c11);
float UniformScalar_26 : register(c12);
float UniformScalar_3 : register(c7);
float UniformScalar_5 : register(c8);
float4 UniformVector_0 : register(c0);
float4 UniformVector_1 : register(c2);
float4 UniformVector_2 : register(c3);
float4 UniformVector_3 : register(c4);
float4 UniformVector_4 : register(c5);

struct PS_IN {
  float2 texcoord : TEXCOORD;
  float4 texcoord4 : TEXCOORD4;
};

float4 main(PS_IN i) : COLOR {
  float4 o;

  float4 r0;
  float3 r1;
  float4 r2;
  float4 r3;

  const float4 c1 = float4(-0.100000001, -0.200000003, -0.400000006, -1);
  const float4 c13 = float4(512, 20, -0.5, 5);
  const float4 c14 = float4(0, 40, 0.150000006, 0.5);

  r0 = tex2D(Texture2D_0, UniformScalar_17);  // texld r0, c10.x, s0
  r0.x = r0.y + c13.z;                        // add r0.x, r0.y, c13.z
  r0.x = r0.x * UniformScalar_18;             // mul r0.x, r0.x, c11.x
  r0.y = r0.x * c13.w;                        // mul r0.y, r0.x, c13.w
  r1.xy = c13.xy;                             // mov r1.xy, c13
  r0.y = UniformScalar_26 * r1.y + r0.y;      // mad r0.y, c12.x, r1.y, r0.y
  r2 = c14.x;                                 // mov r2.yw, c14.x
  r2.z = r0.y + c1.w;                         // add r2.z, r0.y, c1.w
  r0.yz = i.texcoord.xy * c14.xy + -r2.xz;    // mad r0.yz, v0.xxyw, c14, -r2.xzww !!!!!
  r0.yz = r0.xy + UniformVector_4.xy;         // add r0.yz, r0, c5.xxyw
  r3 = tex2D(Texture2D_3, r0.yz);             // texld r3, r0.yzzw, s3
  r0.y = UniformScalar_13 * r1.y + r1.y;      // mad r0.y, c9.x, r1.y, r1.y
  r2.x = r0.x * 5 + r0.y;                     // mad r2.x, r0.x, c13.w, r0.y
  r0.xy = i.texcoord.xy * c14.yz + -r2.xz;    // mad r0.xy, v0, c14.yzzw, -r2
  r0.xy = r0.xy + UniformVector_3.xy;         // add r0.xy, r0, c4
  r0.zw = r0.xy + -c14.xy;                    // add r0.zw, r0.xyxy, -c14.xywx
  r2 = tex2D(Texture2D_1, r0.xy);             // texld r2, r0, s1
  r0 = tex2D(Texture2D_2, r0.zw);             // texld r0, r0.zwzw, s2
  r0.x = saturate(r2.x + r0.x);               // add_sat r0.x, r2.x, r0.x
  o.w = r3.x * r0.x + 1;                      // mul_pp oC0.w, r3.x, r0.x
  // return float4(o.www, 1);
  r0.x = i.texcoord.y * -r1.x + UniformScalar_1;     // mad_sat r0.x, v0.y, -r1.x, c6.x
  r0.y = i.texcoord.y * r1.x + -UniformScalar_3;     // mad_sat r0.y, v0.y, r1.x, -c7.x
  r0.x = r0.x + r0.y;                                // add r0.x, r0.x, r0.y
  r0.x = saturate(r0.x + UniformScalar_5);           // add_sat r0.x, r0.x, c8.x
  r1.xyz = UniformVector_1.xyz;                      // mov r1.xyz, c2
  r0.yzw = -r1.xyz + UniformVector_2.xyz;            // add r0.yzw, -r1.xxyz, c3.xxyz
  r0.xyz = r0.x * r0.yzw + UniformVector_1.xyz;      // mad r0.xyz, r0.x, r0.yzww, c2
  r0.xyz = r0.xyz + c1.xyz;                          // add r0.xyz, r0, c1
  r0.xyz = r2.y * r0.xyz + UniformVector_0.xyz;      // mad r0.xyz, r2.y, r0, c0
  r0.xyz = r0.xyz + -c1.xyz;                         // add_pp r0.xyz, r0, -c1
  o.xyz = r0.xyz * i.texcoord4.w + i.texcoord4.xyz;  // mad_pp oC0.xyz, r0, v1.w, v1

  return o;
}

// ps_3_0
//     def c1, -0.100000001, -0.200000003, -0.400000006, -1
//     def c13, 512, 20, -0.5, 5
//     def c14, 0, 40, 0.150000006, 0.5
//     dcl_texcoord v0.xy
//     dcl_texcoord4_pp v1
//     dcl_2d s0
//     dcl_2d s1
//     dcl_2d s2
//     dcl_2d s3
//     texld r0, c10.x, s0
//     add r0.x, r0.y, c13.z
//     mul r0.x, r0.x, c11.x
//     mul r0.y, r0.x, c13.w
//     mov r1.xy, c13
//     mad r0.y, c12.x, r1.y, r0.y
//     add r2.z, r0.y, c1.w
//     mov r2.yw, c14.x
//     mad r0.yz, v0.xxyw, c14, -r2.xzww
//     add r0.yz, r0, c5.xxyw
//     texld r3, r0.yzzw, s3
//     mad r0.y, c9.x, r1.y, r1.y
//     mad r2.x, r0.x, c13.w, r0.y
//     mad r0.xy, v0, c14.yzzw, -r2
//     add r0.xy, r0, c4
//     add r0.zw, r0.xyxy, -c14.xywx
//     texld r2, r0, s1
//     texld r0, r0.zwzw, s2
//     add_sat r0.x, r2.x, r0.x
//     mul_pp oC0.w, r3.x, r0.x

//     mad_sat r0.x, v0.y, -r1.x, c6.x
//     mad_sat r0.y, v0.y, r1.x, -c7.x
//     add r0.x, r0.x, r0.y
//     add_sat r0.x, r0.x, c8.x
//     mov r1.xyz, c2
//     add r0.yzw, -r1.xxyz, c3.xxyz
//     mad r0.xyz, r0.x, r0.yzww, c2
//     add r0.xyz, r0, c1
//     mad r0.xyz, r2.y, r0, c0
//     add_pp r0.xyz, r0, -c1
//     mad_pp oC0.xyz, r0, v1.w, v1